(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    522175,      11951]
NotebookOptionsPosition[    508961,      11715]
NotebookOutlinePosition[    509826,      11741]
CellTagsIndexPosition[    509719,      11736]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.911649048456715*^9, 3.911649068438918*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"e56e35e2-8e61-4551-913a-365a39581456"],

Cell[CellGroupData[{

Cell["gsl", "Title",
 CellChangeTimes->{{3.911537439585142*^9, 
  3.91153743986974*^9}},ExpressionUUID->"17bdfc6b-9798-4f6e-9815-\
edd6e804ad01"],

Cell[CellGroupData[{

Cell["Set directory", "Subsection",
 CellChangeTimes->{{3.9146037747970123`*^9, 
  3.9146037793193817`*^9}},ExpressionUUID->"51141d46-1687-410a-a1fd-\
244eebacffde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.911537093689265*^9, 3.91153710047587*^9}, {
  3.91153763266572*^9, 3.911537633016739*^9}, {3.914489774751057*^9, 
  3.9144897754085293`*^9}, {3.9144922954254227`*^9, 3.914492296021928*^9}},
 CellLabel->
  "In[1486]:=",ExpressionUUID->"9580a276-0d74-4b11-b9a9-a580e3304a0a"],

Cell[BoxData["\<\"/Users/alexanderpickston/Documents/Projects/gsl\"\>"], \
"Output",
 CellChangeTimes->{3.914490888963931*^9, 3.914492296632197*^9, 
  3.914506635742333*^9, 3.914506723246943*^9, 3.914506861526509*^9, 
  3.914507224903482*^9, 3.914507837552286*^9, 3.914508031727121*^9, 
  3.914508222892628*^9, 3.914561934868726*^9, 3.914562393010517*^9, 
  3.914562674108141*^9, 3.914563114404814*^9, 3.9146031958570557`*^9, 
  3.914603654381912*^9, 3.914603716905785*^9, 3.91795524378516*^9},
 CellLabel->
  "Out[1486]=",ExpressionUUID->"0aa3569e-082b-40d2-9705-c892daacc68c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Installation steps", "Subsection",
 CellChangeTimes->{{3.914489646767004*^9, 
  3.9144896496401663`*^9}},ExpressionUUID->"64ce2279-7d83-4bd6-88f6-\
051535edd133"],

Cell["\<\
If you want to properly embed this package into mathematica, then follow \
these steps:\
\>", "Text",
 CellChangeTimes->{{3.911537443886911*^9, 
  3.911537473433036*^9}},ExpressionUUID->"135ef40f-47ca-4d65-8d4d-\
699aaa7c2079"],

Cell["1) run", "Text",
 CellChangeTimes->{{3.7878274819667273`*^9, 3.78782748448499*^9}, {
  3.7878275544617953`*^9, 
  3.787827555163916*^9}},ExpressionUUID->"46393bd1-aac7-4821-bb17-\
9e0e056b3247"],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"$UserBaseDirectory", "<>", "\"\</Applications\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7878270117879314`*^9, 3.787827017338082*^9}, 
   3.787827491844328*^9, {3.787827523469887*^9, 3.7878275375540247`*^9}, {
   3.914490885110523*^9, 3.914490886654306*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"11340444-e82c-453b-838c-4859ca256957"],

Cell[TextData[{
 "2) copy and paste ",
 StyleBox["gsl.wl", "Input"],
 " into the Applications folder"
}], "Text",
 CellChangeTimes->{{3.787827546114126*^9, 3.787827586599822*^9}, {
  3.911537499364773*^9, 
  3.911537504522225*^9}},ExpressionUUID->"8b72af87-177a-44b9-b0df-\
cbf9f6643cc0"],

Cell[TextData[{
 "3) To get the package in your current .nb, then run ",
 StyleBox["<<gsl`", "Input"]
}], "Text",
 CellChangeTimes->{{3.787827634360287*^9, 3.787827648188295*^9}, {
  3.911537508844788*^9, 3.9115375109281683`*^9}, {3.911537607471266*^9, 
  3.911537619268191*^9}, {3.914489660982543*^9, 
  3.914489678429146*^9}},ExpressionUUID->"9ecabb2c-46bb-4827-8a62-\
7d57cb6e5aeb"],

Cell[CellGroupData[{

Cell["Alternative way to install", "Subsubsection",
 CellChangeTimes->{{3.914489691732753*^9, 
  3.914489698905016*^9}},ExpressionUUID->"ebe7c61e-cfda-49d0-9a1b-\
da4f9e42ebbf"],

Cell[TextData[{
 "Alternatively, the following also works so long as you have ",
 StyleBox["gsl.wl", "Input"],
 " in the notebooks directory, such as if you downloaded this whole folder \
from github, you can just set the directory to the notebooks directory. Then \
import gsl."
}], "Text",
 CellChangeTimes->{{3.911537638183401*^9, 3.9115376596939178`*^9}, {
  3.914489709636463*^9, 3.914489761592771*^9}, {3.914603785638378*^9, 
  3.9146037989836082`*^9}},ExpressionUUID->"b82f3e40-2fb1-40d0-bf8c-\
51d3d1e9ea09"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Get package", "Subsection",
 CellChangeTimes->{{3.914489781277704*^9, 
  3.9144897830252867`*^9}},ExpressionUUID->"f01b7a7e-170e-4c17-88aa-\
61bccae631bb"],

Cell["\<\
Syntax for getting the package functionality in the notebook:\
\>", "Text",
 CellChangeTimes->{{3.914489789853622*^9, 
  3.914489808934534*^9}},ExpressionUUID->"ad923e32-0e34-42e4-8006-\
6e6e2cc446b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "gsl`"}]], "Input",
 CellLabel->
  "In[1487]:=",ExpressionUUID->"5070ef1a-88fa-413a-a774-dff019a55d8a"],

Cell[BoxData[
 TemplateBox[{
  "packageDirectory", "shdw", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"packageDirectory\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"gsl`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"ParametricDownConversion`\\\\\\\"\\\"}], \\\"}\\\"}]\\); \
definitions in context \\!\\(\\*RowBox[{\\\"\\\\\\\"gsl`\\\\\\\"\\\"}]\\) may \
shadow or be shadowed by other definitions.\"", 2, 1487, 528, 
   16494643879744111587, "Local", "gsl`packageDirectory"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917955234820853*^9, 3.917955245696484*^9}},
 CellLabel->
  "During evaluation of \
In[1487]:=",ExpressionUUID->"d77dd9d5-acdd-4823-a941-87cb445aa3ff"],

Cell[BoxData[
 TemplateBox[{
  "TutorialNotebook", "shdw", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"TutorialNotebook\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"gsl`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"ParametricDownConversion`\\\\\\\"\\\"}], \\\"}\\\"}]\\); \
definitions in context \\!\\(\\*RowBox[{\\\"\\\\\\\"gsl`\\\\\\\"\\\"}]\\) may \
shadow or be shadowed by other definitions.\"", 2, 1487, 529, 
   16494643879744111587, "Local", "gsl`TutorialNotebook"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.917955234820853*^9, 3.9179552457440863`*^9}},
 CellLabel->
  "During evaluation of \
In[1487]:=",ExpressionUUID->"382d5092-3c99-4a20-a91d-6e6e4d86dfff"],

Cell[CellGroupData[{

Cell[BoxData["\<\"gsl is a package (mainly) for visualising operations on \
graph states. \\nA list of the functions in the library is shown below. \
\\nMore details on how to use the library can be found in the tutorial \
notebook by calling the function: TutorialNotebook[].\"\>"], "Print",
 CellChangeTimes->{3.917955245757725*^9},
 CellLabel->
  "During evaluation of \
In[1487]:=",ExpressionUUID->"de767feb-d194-4186-92ad-e2df5771fb54"],

Cell[BoxData["\<\"A list of of the functions can be found by calling the \
command: ?ParametricDownConversion`*\"\>"], "Print",
 CellChangeTimes->{3.917955245761325*^9},
 CellLabel->
  "During evaluation of \
In[1487]:=",ExpressionUUID->"94d192cd-6a35-498a-9d3c-f147301618ea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"g\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 1, 0],
    FrontFaceColor->RGBColor[0, 1, 0],
    BackFaceColor->RGBColor[0, 1, 0],
    GraphicsColor->RGBColor[0, 1, 0],
    FontWeight->Bold,
    FontColor->RGBColor[0, 1, 0]], "\[InvisibleSpace]", 
   StyleBox["\<\"s\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[49, 50], 
      Rational[1, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[49, 50], 
      Rational[1, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[49, 50], 
      Rational[1, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[49, 50], 
      Rational[1, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[49, 50], 
      Rational[1, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"l\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[24, 25], 
      Rational[1, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[24, 25], 
      Rational[1, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[24, 25], 
      Rational[1, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[24, 25], 
      Rational[1, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[24, 25], 
      Rational[1, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\" \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[47, 50], 
      Rational[3, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[47, 50], 
      Rational[3, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[47, 50], 
      Rational[3, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[47, 50], 
      Rational[3, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[47, 50], 
      Rational[3, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"l\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[23, 25], 
      Rational[2, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[23, 25], 
      Rational[2, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[23, 25], 
      Rational[2, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[23, 25], 
      Rational[2, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[23, 25], 
      Rational[2, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"i\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[9, 10], 
      Rational[1, 10]],
    FrontFaceColor->RGBColor[0, 
      Rational[9, 10], 
      Rational[1, 10]],
    BackFaceColor->RGBColor[0, 
      Rational[9, 10], 
      Rational[1, 10]],
    GraphicsColor->RGBColor[0, 
      Rational[9, 10], 
      Rational[1, 10]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[9, 10], 
      Rational[1, 10]]], "\[InvisibleSpace]", 
   StyleBox["\<\"b\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[22, 25], 
      Rational[3, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[22, 25], 
      Rational[3, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[22, 25], 
      Rational[3, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[22, 25], 
      Rational[3, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[22, 25], 
      Rational[3, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"r\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[43, 50], 
      Rational[7, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[43, 50], 
      Rational[7, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[43, 50], 
      Rational[7, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[43, 50], 
      Rational[7, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[43, 50], 
      Rational[7, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"a\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[21, 25], 
      Rational[4, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[21, 25], 
      Rational[4, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[21, 25], 
      Rational[4, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[21, 25], 
      Rational[4, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[21, 25], 
      Rational[4, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"r\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[41, 50], 
      Rational[9, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[41, 50], 
      Rational[9, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[41, 50], 
      Rational[9, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[41, 50], 
      Rational[9, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[41, 50], 
      Rational[9, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"y\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[4, 5], 
      Rational[1, 5]],
    FrontFaceColor->RGBColor[0, 
      Rational[4, 5], 
      Rational[1, 5]],
    BackFaceColor->RGBColor[0, 
      Rational[4, 5], 
      Rational[1, 5]],
    GraphicsColor->RGBColor[0, 
      Rational[4, 5], 
      Rational[1, 5]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[4, 5], 
      Rational[1, 5]]], "\[InvisibleSpace]", 
   StyleBox["\<\" \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[39, 50], 
      Rational[11, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[39, 50], 
      Rational[11, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[39, 50], 
      Rational[11, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[39, 50], 
      Rational[11, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[39, 50], 
      Rational[11, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"h\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[19, 25], 
      Rational[6, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[19, 25], 
      Rational[6, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[19, 25], 
      Rational[6, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[19, 25], 
      Rational[6, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[19, 25], 
      Rational[6, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"a\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[37, 50], 
      Rational[13, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[37, 50], 
      Rational[13, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[37, 50], 
      Rational[13, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[37, 50], 
      Rational[13, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[37, 50], 
      Rational[13, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"s\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[18, 25], 
      Rational[7, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[18, 25], 
      Rational[7, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[18, 25], 
      Rational[7, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[18, 25], 
      Rational[7, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[18, 25], 
      Rational[7, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\" \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[7, 10], 
      Rational[3, 10]],
    FrontFaceColor->RGBColor[0, 
      Rational[7, 10], 
      Rational[3, 10]],
    BackFaceColor->RGBColor[0, 
      Rational[7, 10], 
      Rational[3, 10]],
    GraphicsColor->RGBColor[0, 
      Rational[7, 10], 
      Rational[3, 10]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[7, 10], 
      Rational[3, 10]]], "\[InvisibleSpace]", 
   StyleBox["\<\"b\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[17, 25], 
      Rational[8, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[17, 25], 
      Rational[8, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[17, 25], 
      Rational[8, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[17, 25], 
      Rational[8, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[17, 25], 
      Rational[8, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"e\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[33, 50], 
      Rational[17, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[33, 50], 
      Rational[17, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[33, 50], 
      Rational[17, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[33, 50], 
      Rational[17, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[33, 50], 
      Rational[17, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"e\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[16, 25], 
      Rational[9, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[16, 25], 
      Rational[9, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[16, 25], 
      Rational[9, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[16, 25], 
      Rational[9, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[16, 25], 
      Rational[9, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[31, 50], 
      Rational[19, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[31, 50], 
      Rational[19, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[31, 50], 
      Rational[19, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[31, 50], 
      Rational[19, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[31, 50], 
      Rational[19, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\" \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[3, 5], 
      Rational[2, 5]],
    FrontFaceColor->RGBColor[0, 
      Rational[3, 5], 
      Rational[2, 5]],
    BackFaceColor->RGBColor[0, 
      Rational[3, 5], 
      Rational[2, 5]],
    GraphicsColor->RGBColor[0, 
      Rational[3, 5], 
      Rational[2, 5]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[3, 5], 
      Rational[2, 5]]], "\[InvisibleSpace]", 
   StyleBox["\<\"l\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[29, 50], 
      Rational[21, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[29, 50], 
      Rational[21, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[29, 50], 
      Rational[21, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[29, 50], 
      Rational[21, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[29, 50], 
      Rational[21, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"o\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[14, 25], 
      Rational[11, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[14, 25], 
      Rational[11, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[14, 25], 
      Rational[11, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[14, 25], 
      Rational[11, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[14, 25], 
      Rational[11, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"a\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[27, 50], 
      Rational[23, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[27, 50], 
      Rational[23, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[27, 50], 
      Rational[23, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[27, 50], 
      Rational[23, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[27, 50], 
      Rational[23, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"d\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[13, 25], 
      Rational[12, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[13, 25], 
      Rational[12, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[13, 25], 
      Rational[12, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[13, 25], 
      Rational[12, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[13, 25], 
      Rational[12, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"e\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[1, 2], 
      Rational[1, 2]],
    FrontFaceColor->RGBColor[0, 
      Rational[1, 2], 
      Rational[1, 2]],
    BackFaceColor->RGBColor[0, 
      Rational[1, 2], 
      Rational[1, 2]],
    GraphicsColor->RGBColor[0, 
      Rational[1, 2], 
      Rational[1, 2]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[1, 2], 
      Rational[1, 2]]], "\[InvisibleSpace]", 
   StyleBox["\<\"d\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[12, 25], 
      Rational[13, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[12, 25], 
      Rational[13, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[12, 25], 
      Rational[13, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[12, 25], 
      Rational[13, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[12, 25], 
      Rational[13, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\" \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[23, 50], 
      Rational[27, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[23, 50], 
      Rational[27, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[23, 50], 
      Rational[27, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[23, 50], 
      Rational[27, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[23, 50], 
      Rational[27, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"s\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[11, 25], 
      Rational[14, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[11, 25], 
      Rational[14, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[11, 25], 
      Rational[14, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[11, 25], 
      Rational[14, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[11, 25], 
      Rational[14, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"u\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[21, 50], 
      Rational[29, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[21, 50], 
      Rational[29, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[21, 50], 
      Rational[29, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[21, 50], 
      Rational[29, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[21, 50], 
      Rational[29, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"c\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[2, 5], 
      Rational[3, 5]],
    FrontFaceColor->RGBColor[0, 
      Rational[2, 5], 
      Rational[3, 5]],
    BackFaceColor->RGBColor[0, 
      Rational[2, 5], 
      Rational[3, 5]],
    GraphicsColor->RGBColor[0, 
      Rational[2, 5], 
      Rational[3, 5]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[2, 5], 
      Rational[3, 5]]], "\[InvisibleSpace]", 
   StyleBox["\<\"c\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[19, 50], 
      Rational[31, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[19, 50], 
      Rational[31, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[19, 50], 
      Rational[31, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[19, 50], 
      Rational[31, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[19, 50], 
      Rational[31, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"e\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[9, 25], 
      Rational[16, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[9, 25], 
      Rational[16, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[9, 25], 
      Rational[16, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[9, 25], 
      Rational[16, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[9, 25], 
      Rational[16, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"s\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[17, 50], 
      Rational[33, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[17, 50], 
      Rational[33, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[17, 50], 
      Rational[33, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[17, 50], 
      Rational[33, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[17, 50], 
      Rational[33, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"s\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[8, 25], 
      Rational[17, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[8, 25], 
      Rational[17, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[8, 25], 
      Rational[17, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[8, 25], 
      Rational[17, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[8, 25], 
      Rational[17, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"f\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[3, 10], 
      Rational[7, 10]],
    FrontFaceColor->RGBColor[0, 
      Rational[3, 10], 
      Rational[7, 10]],
    BackFaceColor->RGBColor[0, 
      Rational[3, 10], 
      Rational[7, 10]],
    GraphicsColor->RGBColor[0, 
      Rational[3, 10], 
      Rational[7, 10]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[3, 10], 
      Rational[7, 10]]], "\[InvisibleSpace]", 
   StyleBox["\<\"u\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[7, 25], 
      Rational[18, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[7, 25], 
      Rational[18, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[7, 25], 
      Rational[18, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[7, 25], 
      Rational[18, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[7, 25], 
      Rational[18, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"l\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[13, 50], 
      Rational[37, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[13, 50], 
      Rational[37, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[13, 50], 
      Rational[37, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[13, 50], 
      Rational[37, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[13, 50], 
      Rational[37, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"l\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[6, 25], 
      Rational[19, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[6, 25], 
      Rational[19, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[6, 25], 
      Rational[19, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[6, 25], 
      Rational[19, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[6, 25], 
      Rational[19, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"y\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[11, 50], 
      Rational[39, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[11, 50], 
      Rational[39, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[11, 50], 
      Rational[39, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[11, 50], 
      Rational[39, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[11, 50], 
      Rational[39, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\".\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[1, 5], 
      Rational[4, 5]],
    FrontFaceColor->RGBColor[0, 
      Rational[1, 5], 
      Rational[4, 5]],
    BackFaceColor->RGBColor[0, 
      Rational[1, 5], 
      Rational[4, 5]],
    GraphicsColor->RGBColor[0, 
      Rational[1, 5], 
      Rational[4, 5]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[1, 5], 
      Rational[4, 5]]], "\[InvisibleSpace]", 
   StyleBox["\<\" \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[9, 50], 
      Rational[41, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[9, 50], 
      Rational[41, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[9, 50], 
      Rational[41, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[9, 50], 
      Rational[41, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[9, 50], 
      Rational[41, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"H\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[4, 25], 
      Rational[21, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[4, 25], 
      Rational[21, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[4, 25], 
      Rational[21, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[4, 25], 
      Rational[21, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[4, 25], 
      Rational[21, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"a\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[7, 50], 
      Rational[43, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[7, 50], 
      Rational[43, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[7, 50], 
      Rational[43, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[7, 50], 
      Rational[43, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[7, 50], 
      Rational[43, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"v\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[3, 25], 
      Rational[22, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[3, 25], 
      Rational[22, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[3, 25], 
      Rational[22, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[3, 25], 
      Rational[22, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[3, 25], 
      Rational[22, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"e\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[1, 10], 
      Rational[9, 10]],
    FrontFaceColor->RGBColor[0, 
      Rational[1, 10], 
      Rational[9, 10]],
    BackFaceColor->RGBColor[0, 
      Rational[1, 10], 
      Rational[9, 10]],
    GraphicsColor->RGBColor[0, 
      Rational[1, 10], 
      Rational[9, 10]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[1, 10], 
      Rational[9, 10]]], "\[InvisibleSpace]", 
   StyleBox["\<\" \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[2, 25], 
      Rational[23, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[2, 25], 
      Rational[23, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[2, 25], 
      Rational[23, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[2, 25], 
      Rational[23, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[2, 25], 
      Rational[23, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"f\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[3, 50], 
      Rational[47, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[3, 50], 
      Rational[47, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[3, 50], 
      Rational[47, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[3, 50], 
      Rational[47, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[3, 50], 
      Rational[47, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"u\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[1, 25], 
      Rational[24, 25]],
    FrontFaceColor->RGBColor[0, 
      Rational[1, 25], 
      Rational[24, 25]],
    BackFaceColor->RGBColor[0, 
      Rational[1, 25], 
      Rational[24, 25]],
    GraphicsColor->RGBColor[0, 
      Rational[1, 25], 
      Rational[24, 25]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[1, 25], 
      Rational[24, 25]]], "\[InvisibleSpace]", 
   StyleBox["\<\"n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 
      Rational[1, 50], 
      Rational[49, 50]],
    FrontFaceColor->RGBColor[0, 
      Rational[1, 50], 
      Rational[49, 50]],
    BackFaceColor->RGBColor[0, 
      Rational[1, 50], 
      Rational[49, 50]],
    GraphicsColor->RGBColor[0, 
      Rational[1, 50], 
      Rational[49, 50]],
    FontWeight->Bold,
    FontColor->RGBColor[0, 
      Rational[1, 50], 
      Rational[49, 50]]], "\[InvisibleSpace]", 
   StyleBox["\<\"!\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]]}],
  SequenceForm[
   Style["g", 
    RGBColor[0, 1, 0], Bold], 
   Style["s", 
    RGBColor[0, 
     Rational[49, 50], 
     Rational[1, 50]], Bold], 
   Style["l", 
    RGBColor[0, 
     Rational[24, 25], 
     Rational[1, 25]], Bold], 
   Style[" ", 
    RGBColor[0, 
     Rational[47, 50], 
     Rational[3, 50]], Bold], 
   Style["l", 
    RGBColor[0, 
     Rational[23, 25], 
     Rational[2, 25]], Bold], 
   Style["i", 
    RGBColor[0, 
     Rational[9, 10], 
     Rational[1, 10]], Bold], 
   Style["b", 
    RGBColor[0, 
     Rational[22, 25], 
     Rational[3, 25]], Bold], 
   Style["r", 
    RGBColor[0, 
     Rational[43, 50], 
     Rational[7, 50]], Bold], 
   Style["a", 
    RGBColor[0, 
     Rational[21, 25], 
     Rational[4, 25]], Bold], 
   Style["r", 
    RGBColor[0, 
     Rational[41, 50], 
     Rational[9, 50]], Bold], 
   Style["y", 
    RGBColor[0, 
     Rational[4, 5], 
     Rational[1, 5]], Bold], 
   Style[" ", 
    RGBColor[0, 
     Rational[39, 50], 
     Rational[11, 50]], Bold], 
   Style["h", 
    RGBColor[0, 
     Rational[19, 25], 
     Rational[6, 25]], Bold], 
   Style["a", 
    RGBColor[0, 
     Rational[37, 50], 
     Rational[13, 50]], Bold], 
   Style["s", 
    RGBColor[0, 
     Rational[18, 25], 
     Rational[7, 25]], Bold], 
   Style[" ", 
    RGBColor[0, 
     Rational[7, 10], 
     Rational[3, 10]], Bold], 
   Style["b", 
    RGBColor[0, 
     Rational[17, 25], 
     Rational[8, 25]], Bold], 
   Style["e", 
    RGBColor[0, 
     Rational[33, 50], 
     Rational[17, 50]], Bold], 
   Style["e", 
    RGBColor[0, 
     Rational[16, 25], 
     Rational[9, 25]], Bold], 
   Style["n", 
    RGBColor[0, 
     Rational[31, 50], 
     Rational[19, 50]], Bold], 
   Style[" ", 
    RGBColor[0, 
     Rational[3, 5], 
     Rational[2, 5]], Bold], 
   Style["l", 
    RGBColor[0, 
     Rational[29, 50], 
     Rational[21, 50]], Bold], 
   Style["o", 
    RGBColor[0, 
     Rational[14, 25], 
     Rational[11, 25]], Bold], 
   Style["a", 
    RGBColor[0, 
     Rational[27, 50], 
     Rational[23, 50]], Bold], 
   Style["d", 
    RGBColor[0, 
     Rational[13, 25], 
     Rational[12, 25]], Bold], 
   Style["e", 
    RGBColor[0, 
     Rational[1, 2], 
     Rational[1, 2]], Bold], 
   Style["d", 
    RGBColor[0, 
     Rational[12, 25], 
     Rational[13, 25]], Bold], 
   Style[" ", 
    RGBColor[0, 
     Rational[23, 50], 
     Rational[27, 50]], Bold], 
   Style["s", 
    RGBColor[0, 
     Rational[11, 25], 
     Rational[14, 25]], Bold], 
   Style["u", 
    RGBColor[0, 
     Rational[21, 50], 
     Rational[29, 50]], Bold], 
   Style["c", 
    RGBColor[0, 
     Rational[2, 5], 
     Rational[3, 5]], Bold], 
   Style["c", 
    RGBColor[0, 
     Rational[19, 50], 
     Rational[31, 50]], Bold], 
   Style["e", 
    RGBColor[0, 
     Rational[9, 25], 
     Rational[16, 25]], Bold], 
   Style["s", 
    RGBColor[0, 
     Rational[17, 50], 
     Rational[33, 50]], Bold], 
   Style["s", 
    RGBColor[0, 
     Rational[8, 25], 
     Rational[17, 25]], Bold], 
   Style["f", 
    RGBColor[0, 
     Rational[3, 10], 
     Rational[7, 10]], Bold], 
   Style["u", 
    RGBColor[0, 
     Rational[7, 25], 
     Rational[18, 25]], Bold], 
   Style["l", 
    RGBColor[0, 
     Rational[13, 50], 
     Rational[37, 50]], Bold], 
   Style["l", 
    RGBColor[0, 
     Rational[6, 25], 
     Rational[19, 25]], Bold], 
   Style["y", 
    RGBColor[0, 
     Rational[11, 50], 
     Rational[39, 50]], Bold], 
   Style[".", 
    RGBColor[0, 
     Rational[1, 5], 
     Rational[4, 5]], Bold], 
   Style[" ", 
    RGBColor[0, 
     Rational[9, 50], 
     Rational[41, 50]], Bold], 
   Style["H", 
    RGBColor[0, 
     Rational[4, 25], 
     Rational[21, 25]], Bold], 
   Style["a", 
    RGBColor[0, 
     Rational[7, 50], 
     Rational[43, 50]], Bold], 
   Style["v", 
    RGBColor[0, 
     Rational[3, 25], 
     Rational[22, 25]], Bold], 
   Style["e", 
    RGBColor[0, 
     Rational[1, 10], 
     Rational[9, 10]], Bold], 
   Style[" ", 
    RGBColor[0, 
     Rational[2, 25], 
     Rational[23, 25]], Bold], 
   Style["f", 
    RGBColor[0, 
     Rational[3, 50], 
     Rational[47, 50]], Bold], 
   Style["u", 
    RGBColor[0, 
     Rational[1, 25], 
     Rational[24, 25]], Bold], 
   Style["n", 
    RGBColor[0, 
     Rational[1, 50], 
     Rational[49, 50]], Bold], 
   Style["!", 
    RGBColor[0, 0, 1], Bold]],
  Editable->False]], "Print",
 CellChangeTimes->{3.9179552458183203`*^9},
 CellLabel->
  "During evaluation of \
In[1487]:=",ExpressionUUID->"8b7d6faa-50ca-4416-9e1e-db67a7adaf9e"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Show package functions", "Subsection",
 CellChangeTimes->{{3.9144898147763023`*^9, 
  3.914489819504981*^9}},ExpressionUUID->"6a6eddb8-9c99-4554-83d7-\
fabb795b96f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "gsl`*"}]], "Input",
 CellChangeTimes->{{3.911648007462765*^9, 3.911648017440755*^9}, {
  3.911649031006783*^9, 3.911649038049814*^9}},
 CellLabel->
  "In[1488]:=",ExpressionUUID->"7d5ed26f-e129-4c63-bb13-770650416fba"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["gsl`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {2., 6.}}], " ", 
              StyleBox["gsl`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["CustomGraph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "CustomGraph", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["FindGraph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "FindGraph", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LCOrbit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "LCOrbit", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["packageDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "packageDirectory", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Xmeasurement", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "Xmeasurement", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Zmeasurement", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "Zmeasurement", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["\[DoubleStruckCapitalX]", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "\[DoubleStruckCapitalX]", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DrawGraph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "DrawGraph", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["FindStabilzers", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "FindStabilzers", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LCQubit", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "LCQubit", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TutorialNotebook", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "TutorialNotebook", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Ymeasurement", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "Ymeasurement", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["\[DoubleStruckCapitalI]", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "\[DoubleStruckCapitalI]", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["\[DoubleStruckCapitalZ]", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73", {
                   "\[DoubleStruckCapitalZ]", "gsl`"}, False},
                 ButtonNote->"gsl`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.1357142857142857]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{
  3.9116480188544593`*^9, 3.91164903870805*^9, {3.911649075990466*^9, 
   3.9116491113014727`*^9}, 3.911974205138441*^9, 3.913438704027071*^9, 
   3.913447245385561*^9, 3.914506653087878*^9, 3.914506723484909*^9, 
   3.914507229731966*^9, 3.91456193992058*^9, 3.9145626788044357`*^9, 
   3.9145631203013783`*^9, 3.914603200415277*^9, {3.914603396327811*^9, 
   3.914603425893606*^9}, 3.914603512345049*^9, 3.914603544924918*^9, 
   3.914603659261528*^9, 3.914603736261047*^9, {3.91795523145898*^9, 
   3.917955251119742*^9}},
 CellLabel->
  "Out[1488]=",ExpressionUUID->"0a1453f0-3d8f-4a13-ab77-3a38503b9bf4"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CustomGraph[edges_] From a list of edges, create a \
graph using. To make a graph equivalent to a GHZ state, then \
edges={{1,2},{2,3}}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"CustomGraph", "[", "gsl`Private`edges_", "]"}], 
                    ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"gsl`Private`input", ",", "gsl`Private`out"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"gsl`Private`input", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gsl`Private`edges", "\[LeftDoubleBracket]", 
                    RowBox[{"gsl`Private`i", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "\[UndirectedEdge]", 
                    RowBox[{"gsl`Private`edges", "\[LeftDoubleBracket]", 
                    RowBox[{"gsl`Private`i", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gsl`Private`i", ",", 
                    RowBox[{"Length", "[", "gsl`Private`edges", "]"}]}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`out", "=", 
                    RowBox[{"Graph", "[", 
                    
                    RowBox[{"gsl`Private`input", ",", 
                    "gsl`Private`graphstyle"}], "]"}]}], ";", 
                    RowBox[{"Return", "[", "gsl`Private`out", "]"}]}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"gsl`CustomGraph\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CustomGraph[edges_] From a list of edges, create a \
graph using. To make a graph equivalent to a GHZ state, then \
edges={{1,2},{2,3}}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {1., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {1., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "CustomGraph[edges_] From a list of edges, create a graph using. To make \
a graph equivalent to a GHZ state, then edges={{1,2},{2,3}}", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, gsl`CustomGraph, {gsl`CustomGraph[
         Pattern[gsl`Private`edges, 
          Blank[]]] :> 
       Module[{gsl`Private`input, gsl`Private`out}, 
         gsl`Private`input = Table[
            UndirectedEdge[
             Part[gsl`Private`edges, gsl`Private`i, 1], 
             Part[gsl`Private`edges, gsl`Private`i, 2]], {gsl`Private`i, 
             Length[gsl`Private`edges]}]; 
         gsl`Private`out = Graph[gsl`Private`input, gsl`Private`graphstyle]; 
         Return[gsl`Private`out]]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "gsl`CustomGraph"|>, False]]], "Print",
 CellTags->
  "Info-f2b74c80-c8e2-434c-8318-bda691d05a73",ExpressionUUID->"1b37d462-9df8-\
423b-8233-eb66493844f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using function library", "Section",
 CellChangeTimes->{{3.910454438320592*^9, 3.910454442490157*^9}, {
  3.911537190389048*^9, 3.911537190786072*^9}, {3.911537539273724*^9, 
  3.911537543986787*^9}},ExpressionUUID->"db0435d5-d983-4ee3-988e-\
92a70827f86c"],

Cell[CellGroupData[{

Cell["A note on library usage", "Subsection",
 CellChangeTimes->{{3.914490532240953*^9, 
  3.91449053924989*^9}},ExpressionUUID->"af2127e0-0663-49ae-a508-\
f2d8c72da3b3"],

Cell["\<\
One thing that needs to be ironed out in this mma package is the placement of \
the vertecies/nodes. Applying the functions contained in this library should \
retain the co-ordinates of the starting graph\[CloseCurlyQuote]s \
vertices/nodes. The preservation of the graphs layout however is purely for \
the ease of use for you, the end user. If you come up with a more consistent \
way to do this, then please let me know (alexpickston@gmail.com).  \
\>", "Text",
 CellChangeTimes->{{3.914490589727016*^9, 
  3.914490796457032*^9}},ExpressionUUID->"27ee2d11-83f7-474b-9c52-\
33ebee32384d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Reference", "Subsection",
 CellChangeTimes->{{3.914490014583272*^9, 3.914490018350793*^9}, {
  3.914490563985358*^9, 
  3.914490580492431*^9}},ExpressionUUID->"94e88d2b-7bb2-4f26-bcd8-\
dc321e3bf848"],

Cell["\<\
The figure below was taken from Hein et al_2006_Entanglement in Graph States \
and its Applications.\
\>", "Text",
 CellChangeTimes->{{3.914490054465766*^9, 
  3.914490086665592*^9}},ExpressionUUID->"fdcf2295-114d-49c3-a7e5-\
197ba53e65f5"],

Cell[TextData[ButtonBox["http://arxiv.org/abs/quant-ph/0602096",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://arxiv.org/abs/quant-ph/0602096"], None},
 ButtonNote->"http://arxiv.org/abs/quant-ph/0602096"]], "Text",
 CellChangeTimes->{{3.914490021028013*^9, 
  3.914490052383605*^9}},ExpressionUUID->"38101987-1095-40d7-b7b9-\
df560caefd8f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvUuoFdfa/ptkx8S721s04l2MqHhFRVHUoygoyt74X0cRUVD8jh6UL/j3
yFEQFISFIAgKAWHhIRAIwmoEBBumIaQRsCHYEBuCDRs2hNWwYcPGbszzPRXe
mbFqjaoadRk1LvX8oBLXmnPNOarmM0eN8V6XnPnxyP/11RdffHF5/P/858jp
//f/+N//+/S1//XP//nh//zvy//3uf/+r7MH/vv/+a9z//W/t575x//8cv//
PPf/++aLL77+n3/3CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
eM9//vOf3tDQUO/x48euh0I8hjohhBBCCCGEEEIIIYSQOHj06FFv6tSpvVev
XvV/d/Pmzd7EiRN7//jHP3rTp0/vPXv2zOEISQicOXNmjM/gn//8Z++LL77o
H19++WXiWyDdhTohhDTBrVu3ejdu3HA9DOIZ1AXRQV0QHdQF0UFdEB3UBSGE
EFId2HphDwYHDx7s23+nTJmSHLAD37592/Eoic+8fPmyt2TJkv7P//rXvxIN
LVy4sHf16tXEj7Bhw4beV199leS2kG5CnRBCmgBzhqxVEDtz8eJF10MiHkBd
EB3UBdFBXRAd1AXRQV0QQggh1RG/04cPH/r30+fPn/cfHxkZ6Y0fP552YJLL
119/3c9TmT9/fm/p0qVjnjN37lzWUus41AkhpC7Y/48bN6734sWL3tq1a5P8
bKxdJk2a1Dt58iTXKx2FuiA6RBeIfaEuiEBdEB3UBdFBXRBCCCHVEb/TkSNH
kn/v3r17zHNQC+v9+/cORkdC4dq1a4l+du7c2RsYGOgtW7ZszHMmT55MHXUc
6oQQUhfZ/6v7fNQLXrduXd8WgHgZ+B9Id6AuiA7RhYpOF7Anku5AXRAd1AXR
QV0QQggh1UHMBu6jqG2Fe+br169HPY79O35///59RyMkoQAtqb169u3b1ztx
4kRv3rx5ib7QL4wQ6oQQUgfs/5E7mRVfinUManb+8ccfLY+MuIS6IDpEF1lQ
F92EuiA6qAuig7oghBBC6oPeThMmTBizXz969GhiG3737p2jkZGQQM9N9ART
/Qo4UFONOehEoE4IIVVBnzjMFx8/fnQ9FOIR1AXRIbr49OmT66EQj6AuiA7q
guigLgghhBB7oN4Ve62QssDuc/Xq1aSXD/0IJAvqhBBSBdTp3Lp1q+thEM+g
LogO6oLooC6IDuqC6KAuCCGEEEIIIYQQQgghhBBCCCGEEP+5fPlychBCCCGE
EELK8eHDhzG/GxkZ6e3Zs6e3a9euMf01STegLogO6oLooC6IDuqC6KAuCCEh
gT7v7PVOCCGEEEJIebZv3z7qZ/SgTve4O3HihKPREVdQF0SHiS5OnjzpaHTE
FdQF0UFdEB3UBSHEN548eTJmHso62IcjXH788UfXQyARAB39+eefrodBPAb6
4HxDCLEN5pkffvih9+9//9vr+9LSpUt7w8PD/Z+//PLL3tq1a3vv3r1Lfkaf
u6+++opr7IaAHtCLgbogKtCDzBc+o9PFunXrxuiCNAN1QXRQFyQN1hOiC9/3
udQFIcRHtm3blviVli1b1luzZk3/+Mc//pEc8JHjIGGBe2Lad4j7zh9//OF6
aCQgsM769ttvx2jpX//6l+uhEY/AWjytka+//przDSGkUXRrGxywBfjIo0eP
krX0ixcvktom48aNG+NLWLFixSgbASlPli587QdOXbSDbm2Cw1d7suji5cuX
iS6wjkpDXdSHuiA6cL/Q6cJXPwN10Q7UBSGENAPmp4kTJ/YuXbrU/x3r7IVL
1v1Rjvv377seIgkA+JzydOSrnY+0C3SQpxP6ngghTVB0T/LVxzBv3rxkfIg3
xf7/8+fP/cdwTjqfAzHnp59+oi7IGLJ8kb77GEQX69evT3ShakB0QapTpAtf
bcnUhV2yfJFy4D7jI9SFXYpsar7mVVMXhBBfwXy0cOHC3vz585N/0+8UJkV2
Gcl74l6WFDF+/PhCLdGH2W2K7H2S98T5hhBSF8RvFs03vs41qCmgrsGQR4z/
4+eBgQHXwwsa1IuhLkiaIk3g8JU8XRw9etT18IKGuiA6TGwnvkJd2KNIF1iX
+gp1QQjxmcuXL/cmTJiQzE30O4WH1E0sOpiDQIow0dE///lPb+05xD4STxWq
zY8QEg4mc43PNWAHBwd7c+bMSewU8JVMnTo1qTdA6mGii4sXL7oeZibUhR1M
dOFrrDrQ6YJ1kephEpvps98JUBfNYxJDR110jyNHjlAXhBBiEfSdmzFjRm/v
3r2uh0JKAj9A6LYZ4h7TNThz57qNSU6c7zY/QkgYmMw1qB2yf//+pG8O6QZc
8xIdJrrwtaYasUNRjT050HvgwIEDSX8UEj+m/oXvv/++d/r0adfDJS0Rg9+J
EEIIsYFp/gHtwKQIEx0hN5J+p+5i6udmfiUhpC4mc036+Oabb5JaI9evX3c9
fGIJ3oOIDtoLiY6q9xH0Mr1586br4RNLlNUE4i7hn9y4cWPv559/dj18YoEY
8uAIIYQQG5jGcj19+tT1UInnmOgI+zDSXYr68MpB3yQhpA4jIyNGfXwQU4Ne
pch7yrIVwV++b98+5kRFQlG8FfOyu8nkyZMLdUG6B/oI5OkCvgTkOcyePTvz
noPfoxfBwYMHmRMVCdL3JuuAHop0gVpmc+fO7Z08edL16ZAGOH78eOGaE/G3
hBBCSNc4deqUcawOfQYkDxMfJm05pMgWzPpGhJA6mMac3r9/f8zfIsZm586d
vSlTpmTalRDLvnTp0t7Vq1cdnB1pgjybIXOdugtthiRNUY8nHffu3eutXr06
t7Y0/FnYV9+6davlMyJNkKeLLB91kS7wd5hj1q9f3xsaGmr5jEgdZs6caWxP
W7NmjevhEkKIU7BXRzw661d3g61btxbeGxGHs27dulFrIq6RSRZ5PgXacgjA
Xi1LJ/RtE0LqsG3btv58gjwl3ToH9r4y9yOsiRctWpSbEzVt2rTenj17jHOi
MA8i1ll9HYyXsRntoMttwe9cr1Ogi7RPDD1CSHvgeqd18fr16/7ngv/j5zbB
/jytC8xtpD3Scwbma1Pevn3bGxgYKMyJQq/sQ4cOJX2zTcC9ibpwS1oXZeZr
E11gnTBnzpwklwbPN0GnC9j3SPP8/vvvo641ajTjPp7Ok8T3Uo2Jmjp1autj
1dUcoS4IIW2SFRtKG2C8rFixYsznjHsP1tG4V+L/0IWA+6pqc8Hj79+/dzV8
4iFYa4k+sIbGWlnsfoSkwXwja3XE/qnzDSGElAF19RAnLPegw4cPJz4c+XnT
pk2N+XYkJwp2g6y8GayXFi9e3Lt8+fKYv8/Lx2KNN/uoceo+Xeu8nHHqwg9Q
U00+k7Z6tOTVJ/76669bGQP5C/ksmrDVIt8WeQ9FOVHYrw8ODmaOJevvSJiY
6AJrHcQE6/ZNeTHFyMkhzaHW1YPN482bN4V/g9gWWTfC12jqS6wLbH1ZuqC9
lxDSBkX544jj4F4nLmB3kc/3wIEDpf4WtYpVfZw/f97SKEloyDpqx44drodC
AkHmItbWI4RURfXj4D40PDyc/F5yn2CjERudrZyiS5cuFeZEwU+1a9eu3DU3
DuSZE3ughqL4In2CuggD1X537tw5q+9VtEfHwdiu9mjS75QG9uejR48a5URt
3769UBfMY4gDE13A54HHkXNdpAvWNGoGta4efMNlQcyA/L2sWW1hUnuasZ+E
ENsU9UXEoauBT8ID8cCqTaRqH0vkOal55bDpsE9qt9myZUt/TxSinxprPvhg
1bGjzgV8aAsWLEjqIIR4Xr4Tmt+JOiGkPDZ7Zqfr6n3+/Dn5vZrr9Ouvv1r3
O6VBvT34mPJyovKOLswjLnqph5jrRF34hxqDt3nz5lbeJ+vI6iUTGz7owqbf
SQdswWvXrh2Vy2t6wBfRBXzQRdvU0UWZ+pAhY0sXurp6VUH9RHkdXW58U6jx
5l3XBSHEHab3qC7sdWIGNhD1Pnn79u3ar3nhwoVROmHMnX+g1pBtkFcuGrhz
547197MFxi/5e3fv3h21p8cBn5pp746QaEMjWYTmdwJd1QkhOo4dO5Z8j/MO
GzXCdHX1VNRcJ7x3234nHbArqHW6YvYvuNJFEfAD4vpu3Lix1fctQvWfUhdh
+FGwj5LPZfr06Vbew8ReiCN0QtFF236nNMh9wbUyjWUInVB04Rrqoh1dqHX1
EMdt2octD9RsltcsW4PIFBNd8HtECLGJaXwd6gSHvtfpMuhFoPbDffLkSWOv
/enTp1E9eGFzffjwYWOvT/R8+PAh2ecWrbvasFNMmjQpeR/0VQ95nsA5nDlz
Jvm3fF+uXbvWfxw+NdTnCeUcfdJIFqH6nWLSCSF1kPod4nNNH/IdafL7kFVX
T0jnOgEf/E6gK3ktLnRRxPPnz729viZ5LT6OuyymuggFtVeHjfwSU39k6ISi
C1d+J+RULFmyZFRtri7YkUPRhS+Y+Klj6P3lQhdqXb0NGzY0+tqISZLXtlFP
l/lOhBAfMFm7uN6nk+rABiqfo2nPwyqgv65ad3jhwoVW3of8DT5P13YK7IXk
fZqI+3GJ+BPQpyNLw/CtwdcaCj5oJI+Q/U4x6YSQOhTlOjfZRyerrp7uOZLr
BHzxO4Gi+RjztusxNkGbujAB8zKur2+5ToKJvZC68BPVH4BYv6Yw6cuB2L8Y
CEEXbfmdTpw4kdvPx8T/hD5kMRCCLnzBJK4llto0bekiXVfPVl0XxE/JeyCX
qklk3so72A+OEGIbE5vkxYsXXQ+TVODUqVP9zxD2lzbsoOvWreu/J+7Tt27d
sv6eXQU5FmfPns19ju19h6zF0N8mdGDTwSF1eB4/fjzmOTjfBw8eOBhdNXzQ
SB4h+p1i1AkhdSiKOfj48WPt9yiqqyfocp2AT36nIhsAcihioA1dmOJzrpMA
Oxp10a4ummTWrFn9z+rGjRuNve68efNydRELIejCht8J/ZH37NmT5Mln1cNC
fVbMD7CBC2qfZeqCCNifZGkihhw4oQ1d2KirlwfqJYqvGZ9VkzXb83QBPzYh
hNjGJDYCayISFur+tW07C9bFuD+r7//+/fvW3r9LPHv2LPdxm31mVq1alXy+
WCP5ascpy2+//db3J6TPSfLgQ+vd41IjRYTodwIx6oQQX1HzanV19VR0uU7A
J7+TOp70gTU5aR651zRdH6dpsnxPsficYsdWr44sm+Gff/7Z2HuQYprwO6EW
/dq1a3vjx4/P9A2gRjZiK4rs3Gqde+qCCNRFfWzW1StC9Skj57UpYvdRE0L8
pyj2Emsg+p7CQY2Nc5nLkK5XzxzeeIBNXT5XWznnvgFbJzRNmiNUv1Me1Akh
zYE1jBrDoqurJ2TlOgHf/E4C/EwYG+LZMT7YOkizhJDrlEZ0gRwIjJu1pMJB
7dUxf/78Rl5TXg91LFRdbNmypZHXJ2ZU8TtdvXq1t2jRoszaeKirin37+fPn
a41LvY/s3r278muReBBdSB7duXPnXA/Je9qqq1fEmjVr+mM4efJk7ddDPwyJ
FU7rIi+WixBCmgYxEJiDsCfHPh97HuSoSn8Q+p7CQO0d2GSsXVWQ56TGbSAP
qsna58QNkyZNSj5P9EsIxY5D/CNGvxMhpD7oRanmTWfV1VPJynUCvvqdBNg6
QvONhEIouU46RBfYg1EX4dBkrw6Z15BjLai6IO1h4nc6duxYUnMxqzfTN998
k9hZ7t692/j4EG9BXZA0u3btSnTBemr5qHX18D113bca/iYZD/xQdZA61YcO
Her/TnSh3lsIIcQV9D2FAXofqDYaxNv5xIULF0atu33oa4mcHdbCKo9a88j1
moyEDf1OhJA0ZerqCXm5TsB3vxOQWlqoYUuaAXuW0P15oouiXo3EL5rq1SEx
6U+ePBn1e9EFcxjaI+13wvwC2y3iK8v0ZrKJ5FXhPkqIIHpE3gsZi8u6enmg
zp6MC/NMFdQaNWnk97hfEUKIa+h78hvcT9T17u3bt10PScunT59G1RzGfgx1
rl2B+tk4SDlEazt27HA9FBI49DsRQlTK1NVTyct1AiH4nW7duhW8j8Q3sMbD
9Vy/fr3roVRGdIF9GHURHlIfAEfZXh3wKUnsfRrRBXMY2gN1DWX/qvMxSW8m
rGldxeXlaYZ0F9R6hC4wH5G/8aWuXh6qnQ9zT1kf0ezZszNjmkQX+D8hhPgA
fU9+8ssvv4xa76bj4XwEsTbqmn3u3LmJT8oG6MWM3q26Q95ffuZ+vhisWWTd
w+tF6kK/EyEEVKmrJxTlOoEQ/E5A1kbsEVefGHKdBNFFkz3GSXuo/vQyvTpk
3w0fkw7RBXMY7IDaIQsXLizszYSaHj4hNuq2cqyI/8BXIbrFeov4V1evCHWN
XKYnU1auE1B1QQghvkDfk18gJkNd+4a2jlD3YTjq9FTNApqVPqtYU6iHvC9q
VeAIxS6Beg3p+LqLFy9af181T3toaMj6+9lC7YEm1+/+/fuuh9Uo6Ncnc7Wa
n++bxn31O8G2l66ZglxNQkjzVKmrp1KU6wRC8TsdPHiQsR0NMWPGjOBznQTR
RZ7Gid/AlyzznEmvjgcPHvTngixEF8xhqA9szgMDA0m9rbx8Jvx/06ZNroeb
C8aHcbKmB1FBHx/oYv78+a6H4hxf6+oVgVhtGbdJTw2JF/7uu+8ynyO62Llz
Z5NDJYSQWtD35AenTp3q33ewD7WVL2QbxGKp8RuwjduINzlw4EByX1X1GmKd
vayYOxzw49lEaoVgrRYqWfXXcbThu2uDH3/8MfMccSAH0Bd89Dul/bppmwNt
foQ0R9W6eoJJrhMIxe8E5Hxs9J3vCq9fv44m10mQ83n+/LnroZCKoA66fI5F
vdylD3xR7qe83qtXr5ocavRg/4l64Vm9mfA77HvU3kzp/k4+wxwGkgYxPV3X
RQh19YqAf0jGX+Qrkufl9RcUXeC6EEKIT9D35BbVLhqyD0BFjQO0taZ/+vRp
soeAzw6E5ndCLYc8fwIOW3k7ajy673noWUyZMqXw+vnkk6lK0Tn6lNvnm98J
eWJF1w+xZoQQc+ALxz0d3y+hTl09FZNcJxCS30l8cbHntogubCCxzOvWrbPy
+i4QXeTFLceATV34ANaZYvfEXloHfIum9mHRBfYIMQNN1NEF8tgR+481cFZc
EfaEeI+sfU5Ifqc5c+a0EpPoGnwWmDOIGbLuwtopZnS6CK2uXh7IdZJzQf8m
HYi5xuOo+1OE6OLKlStND5UQQmpB35MbUOuprfyWtkGsnsT34cA9EL6iplm+
fHmyHp82bVpQfqcie7gtmxpeT/bIiA0MFZPrF/p3SmywRYcvtkzf/E7pGoy+
Xz9CfEaXOwibn5qvXaWunmCa6wRC8jsBOS/VVxcL6jpW1UVTcR8x5joJsZ4X
0OkCuSixotYvSO91pA/86tWrjV7L1EcVItBAFV3A5ox6Ynm9mfB4mVoHIfmd
yvguQ0SnC9bDLgZ+BVl7xQbWSzq/MnQRal29PNT8Ncxzacr0/xNdwPZGCCG+
Qd9Te6D2jOqTQQxDrKA/q21fAHr04n68aNGixl/bFib2cBv2CKkNHHK/iaLa
czb9dm1i6jfxzc/jy3jSPbGyjhjy4gixiUl+bpW6eiqmuU4gNL8TYmIw3qw4
1lApyjtu4rOZNWtW8lox5ToJoguT/kAhkZWDEqt9VBD/Eo4bN270f1/WXyC6
2Lx5s4VRuiNPF3hMQN4C6magp1tWbybkN6xcubJ37969yuMJye8Exo8f79Ua
uynyaqbH7KtuCrl+sdSXF0z2byHW1cvj7du3/TkPn6vsT69du5bpj8pCdFE1
FowQQmxC35N9RkZGRtWjMekjGDroV6XGPkJb8BV1GZP1VNP9Z1APWF57aGio
sddtG9TXoN/p78OXvUaofqeQNUKIbUzmW9jD6nyPyuQ6gdD8TuhBENt8Y6KL
unFGsMHEdt1UYtSFSVwQcidjRe3VsXv37n6sF+oymCK6iMlHJ3N23gGbal5v
JsQmSG+mJscUit8JNnaMF3bpWMjrwSoH7jUkm127diXXKabclhUrVhTqImY7
khrTgz6C8LOX3e+LLvBahBDiI/Q92QN2f3VNbZIrGxODg4Ojzh+9VeCT6iIm
9vCme89g34bXjaGPmMn1C922ke6T5rvfxDe/k0mOhk/XjxAfaaPeZ5lcJxCa
3wlIrP/atWtdD6URTOxC2EvU+XwkfySWa6ZDdIH7fQyYxMv41JfSBmqvDjny
+sDrEF2cO3fO0ijbxTSOSvwqyHXK683UBKH5nYDkQtTJ8/KJvBw4OVhvrxi5
VrHktuTlwMkRei39IpAHrZ5vlTgE+VvE8BBCiI/Q9/QX6JXdFL/88suoewdq
NXcV6Zsrx/nz510PqXVMYv+arP91/fr1/uuG3HtTMPEpxGDXKDpHn+yuvvmd
UBu86PqF7pskxDa2+6SVzXUCIfqdEJsb073Jti5iz3USRBch1z5WYV/Fv1B7
deAoi+gCe/EYMLEjV7lOdQjR73To0KFkzMgxjgFTP+T9+/ddD9VrFi9enFyr
WHJbTHSBe03snDx5sn++Vb7zoouFCxdaGB0hhDQDfU+9xmyS0t9P9hBN+rNC
BbUS1HqDiHPO0liMvbiB2hczfTRZOw37e9nz7dixo7HXdU1enFwse5S8WkZ1
Y8mbxje/E8ir+YO68T5dP0J8xCTvsk5N2LK5TiBEvxOQWPXjx4+7HkptTPLg
UDer6ueDumR4jZhznQTRxd27d10PpTamveBC+t5WRe1NhDmybM5TmT7yvmPi
j2zbjhyi3wnI9YohfrVMHpzcU2BDh12F/I0apxFDbotJnfQuxA2qnysO1K2p
+veEEOIzsfqePnz4kKzncU55B8677t7o4MGDo3wrXa0rl8X27du16whdPlCM
dmLYxVX/CdbgTeY5AakvH0s8rQp0osZRxlqPId0fzcf1to9+JwC/tXr98H0L
zc5AiCts5g1WyXUCofqdZD3oW8xAFUx0UfVe0JVcJ0F0UbdPmg+Y9P3Cujd2
pMYA7OTYu8i5l+lVI7ooa2v0ERNdtN3HJ1S/07Jly5Jxf/fdd66HUhuTfnCL
Fi1K7Ce6x7CvRT1W5IV0nalTpybXBDkuoWNSE+bRo0euh2md+fPnJ+eKOByx
deD/r1+/Nn4N0QV6DxJCiM/E6nvCOh7nhf/rjokTJ9be86r9Mpvu1RMTr169
ylxT6o7Q9+U65PvV9LkhvlKu29DQUKOv7Quh2iDL4qtfR/B9fE3FEhDSNfJs
AHVyWqrkOqnjCXHOd2VjtUFeT/g6PXwk1wn9DbqCXLdnz565Hkpt0rW01SOG
/qImSD0HqV2g9uooYyOXv8E+KXTydOGiV0uoficg1y0G8mp/pGNaYIPav39/
YkvX1W7E7/AYnhOLvcoUtbZnDJj0/nr48KHrYVol/XmqdYJM82BFF1X6QxFC
SNvE6Ht6+vRp78yZM7nPqZNToMbXb9mypfLrdIkLFy4Y+Z1izHuy5XdC/Gzs
e/2QbZBl8N2v4/v46HcipDrwk6TtPHXyS6vmOoGQ53yxvZb1tfkK4tXTuqiz
dkb/yZhjjLIQXcyYMcP1UBohK48h1rrZKll2PrVXh6lPVXQRSy6/LobBld8n
ZL+T5DCsX7/e9VAaIR3DgO+OaV7kiRMnkpwnta6leuBeCztMDD79IsQvsWfP
HtdDaYQsXYj+cZw9e9b1MK0AzeL8pk+fPur3qn3x3LlzRq8lumB9SkJICKi+
JxzozxM6OKem+fz586jcnQMHDjT+HjHT1Z7ENvxOqh8PtpxYCdkGWQbf/Tq+
j49+J0L8oWquEwh9zpf7cgz9OYSm5lfUBihjl4+JWNe3QPwn06ZNcz0U60yZ
MiU5V9QRT6PWm0MMnQkx5TD4RMh+p1hzGJo4p8uXL/cWLFiQ5GLr7AfffPNN
b8WKFb179+41NGp/kH7iXdDFxo0b+58p+gnEhqypnjx5MuYx2Bbl3Ddv3lz4
WqIL+J8IISQE4FPB/Tom31NVsE4VOyv+j59Rk171zWHtQ8ph4nOKcV/etN8J
ryNrlkOHDjXymr4Sug3SFN/9Or6Pj34nQvygTq4TCH3OR04Lxm9Sfzmr36Nv
Pqsm5teu5joJoguTmmOh6EKlCzlPb968KfQT4bOT7wv2jNg75iG62LRpU+H7
h6gLV4TsdwKSw3Dq1Knc54WkCRs+E/iX4GdS7VfqAf8U/FSx2GxkbkGPuTxi
0IWaV4v+GLEgubGoNZjFjRs3+uduUtNGdAGfdR4h6YIQEjdd9z1hv5SVy60e
pnVXyWhUvx39TtVB7I/saWO7VmlCt0Ga4rtfx/fx0e9EiB/UyXUCoc/5WDeb
rmXQOx49R+V5sD2rayHUF/LhGjQxv86bNy95jdWrVzc4snCIURcqkvOEGkm+
ja0ppA/80qVLC5+r9urIswWKLkzs8aILIa0LPB7rtS9L6H4n9A6TfV4eIWmi
jVwd1NtDjkhWX2nYeDB/Hj9+3Oo4bLF79+5+XlcesegC+UAyZjwHfa1DR2xh
d+7cyX0eeoao/tM8RBfIx80jJF0QQuKny74n6ZeTdzAmoDpid8g7bPRBck2T
54U1l1yroaGhBkbnN6HbIE3x3a/j+/jodyLEPXVznUAMc770zEatmDwWLlyY
2MFwnuhJir+BvRr1utBrdeXKlclzXNPE/BprXFEZRBdFNbpD0UWa2PeNcn6m
zJkzp/83efkWoouifh6iCxCSLlwQut8JyLybF+sakiba8DulwTXYt29f4g9P
9yqU8eAxPCeU/uYm82xsulDjlu/fv9/SyJoH+Xni/zRBrbWEa5SVrwTk+uTl
2IakC0JIN+ii7ymrT276yJvzSTFF1xcxXrHRpN9JfKMmedcxEIMN0gTf/Tq+
j49+J0LcUzfXCcQw59+6dcvovq/6FyTX/v3796Oeg545rq9D3fm167lOguhC
PvMsTHThY14R6l2ZxFyHCHIocG7pPvBF7Ny5s7+/wb91iC6KcltUm6Ho4sOH
D6OeA12QOPxOW7ZsSc5BzU9IE5ImXPiddCDXadasWZn1bbB+wfcduVM+snjx
4v4aKYsYdaH68X3dixYhNpyBgYFSf4fPSs799u3b2ueILvL8RiHpghDSHbrm
e5L9UtER6r3OF/L8eyZ170OkKb/ThQsX+tcKvRK6QAw2SBN89+v4Pj76nQhx
SxO5TiCWOV/29GfPns18DvozYu6Se7uuJxTqq9S5nk1Qd35lrtPfiC5u3ryZ
+ZxQdKFDPmtfbbZVke9Alb0wcp3kuqCOkQ7RRV5ui+hCarBl6eLRo0elxxgb
MfidgOgGvcV0hKQJX/xOaS5dupTU0MzqBQBbGOwTd+/edT3UBOSzyNiyiFUX
yEuTc0c8S0ggbr3oc8tjzZo1/b8/cuTImMdj0wUhpFt0yfdkUgPOZ7trSHz6
9Kl/PXH/g30JOb6x0oTfCX8r+16sG7pCLDbIInz36/g+PvqdCHFLE7lOIJY5
H/dpnAf28HnnAVvBokWLkueeOHFi1GPwK+D36D3qkjrzq/TEQV9K8rcusLcK
XRc6Ysx5wvXHOeX1gS8CPZ5k36Pr1SG6mDhxYu7rqLpAf3oV0QXrwcfjd4Jd
GOeBeTSLUDThq98pDfxL8DOp9i/1gH8Knwf8Va6Q/Je8eN1YdTE4OJg7l/oK
6tRgzOvXr6/8Gvgc82K1RRc7duzIfI1QdEEI6R5d8T0hdsDE7xRyXVlfOHXq
VHItUVM2ZLuSKU34nWCzkfVuF66ZEIsNsgjf/Tq+j49+J0Lc0VSuE4hpzpdr
8vDhw8LnYq2NQwXrbfSLdk2d+ZW5TmORa/L48ePC5/qsiyxiy3ky7QNfBOx9
ktek69Uh1+3Vq1eFrxWiLtokFr+T2tO3CN81EYrfKQ3msU2bNiUxNTq7EL7T
8CkcO3astTE9efKk07rA90LWJUV9j3yhTq6TCuK05bWgSRXRhcn19F0XhJBu
0hXfk4nfiXvn+qCuclGcTkzU9Tup+46hoaGGR+c3Mdkg8/Ddr+P7+Oh3IsQd
TeU6gZjmfMn9QH+OkM+l6vyKXgLMdRqL6MKH3l02kPObPHly8OdXtg+8Cbgu
sqZXe3XIdQutfpSPxOJ3AuLv2L59u+uh1CJUv1Oaly9f9vbu3ZvkdMq9UT3w
OzyG5+C5tkDsLt4v9BoodXSh+gKvX7/e8MiaA/YujPH7779v5PXSfrfXr1/3
HxNduMzHI4SQOnTB95TXe4i5Ts0h8X43btxwPZRWqOt3kj6UiKfqGjHZIPPw
3a/j+/jodyLEDU3mOoHY5ny5NjbtT7apOr8yXiub2K+NnB/ir0NG1t9Hjx5t
9HWzenU0FRPfdWLyO4nvM3SfTQznkAVynbBHF/tG+oB/ZOPGjY3mgMLP0rRP
3AV1dSH1YHz2zZbJZS2D+JhwSG9A0QUeI4SQUOmC7wn5q7r4lRjP1QVqb6dY
99tp6vidpK80jpGREQuj85vYbJBZ+O7X8X189DsR4oYmc51AbHP+jBkzgs9h
qDK/Sv8A5jrpEV0sXrzY9VCsEEPOU90+8EXoenWILmCjJtWJye8ExJ8Rcg5D
zH6nNBcvXkzu+VKjM33AJ4DvfN3anXJvRs+jUGlCF2fPnu1fW8yhPoG8N7kX
2kDtT3/u3Lnkd6IL9BUkhJBQ6YLvSUDPXlkz7N+/3/VwokB6OxX12o6Jqn4n
PF/WDqHn0VclNhtkFr77dXwfH/1OhLRP07lOILY5X7VdY/7E+SG+KSSqzK9d
iy8qi04X2HPEROg5T+ID2rBhg7X3UHt1oB4n9tTyMzQRoy7aIDa/E+YInA9s
EqHqokt+pzSop7l8+fJR+Snqgc8V/gPU3SkDevGITaXrukAfTfV6+oKsn5pa
I+s4cOBA/9w3b97c1wXydUUXhBASIl3yPW3durUfm8L9c32kt9PSpUtdD6U1
qvqdlixZ0l8/dVV7sdkgs/Ddr+P7+Oh3IqR9ms51AjHO+To707fffhtEL2xQ
dn5FDg9znYoJXRdFqP3NQsRmrpNKuleHThe2YuVjJTa/E3wJoeuiy36nNI8e
PUr82VLHM30gvw11+4rqe2bpoqk+Qm3QpC7evn07qtYhrrNLrly50rch2ga9
K+S81b5XoeqCEEKELvme5BybrsvaRWQ9oPbSjZ0qfic15nFoaMji6PwmRhuk
Dt/9Or6Pj34nQtrFRq4TiG3Oz7IrhZQPVHZ+DencXJHVB6RqnJKvyDk9ffrU
9VBKgdwEjLvN+phZuRCqT5KYEZvfKQZd0O+UDXzPyFGBH1Hne8bvpkyZ0tuz
Z8+oXpF5ugjFJ2lDF7JnxYEafK6QOR3+pzbAfTZPE/Q9EUJCpSu+J6zpcH4r
V650PZSg6WJvJ1DFjiC2KsQ7dZnYbJBZ+O7X8X189DsR0i42cp1ATHM+auYU
2QCkr4vPlJlfkcvO9XI+ovG8A7UWYkDNeQrp+yyfw5s3b1p7T7lWeUfZOlxd
JSa/Uyy6oN/JnHfv3vUGBgaSWp9ZMQpZuZHqEUJNX1u62L59e/86uOiXh3gs
F5qHv7FIF6HVYiSEENAF39OJEyeii0F0QRd7O4Gy2rlw4UL/+zQyMmJ5dH4T
kw0yD9/9Or6Pj34nQtrDVq4TiGnOV/s9Zx0h1NEtM792MbaoLGosdtbRtD/X
JXJOv/32m+uhGIGcAhf5AhLjmHdAO6SYmPxO0mc67wghh4F+p3rANoA1hYke
QopfsKmL69ev969F2/O5+H/27t3b6vua6CKGeZEQ0k264HuSc3NdKzZkutjb
CZTxO+E5YuM5dOhQC6Pzm5hskHn47tfxfXz0OxHSHrZynUBMc76JfyGEect0
fl22bFnyPOY65YPYqyJNxBTnJvkaEydOdD0UI0Tvw8PDTt437wilppprYvI7
mdxDQvBH0u/ULNSFGU+ePOlfD+SOtdEzA+8h79k2JroIIc+eEEKyiN33JPYD
5DyTanSxtxMoY0NYsmRJ8vwQYqDbICYbZB6++3V8Hx/9ToS0g81cJxDTnG9S
HymE8zSdX0Pxo7nGJA8uBF2UQc7r8ePHroeSS5t94NOY+KlDyGvxgZj8TiZ5
cF3Pa+kiJnlPIei/LV2o8R7379+3+l6Yp135d0z8TiHogpAQOXz4sOshdIaY
fU+4R3FPXZ2u9nYCpn4nfF/kGg0NDbU0Or+JyQaZh+9+Hd/HR78TIe1gM9cJ
xDTno4Z+0f7/4sWLrodZiMn8CvsKngNfG8kHPTeKdGHbLtY2oeQ8iW0S9Zna
xqQfHPtymBGT3ykWXdDv1CwmfQKpi9GoMR/Hjx+39j7yHi6AD7pIF4SQcnz4
8KE3ffr0ZG+ad+TtlTAfp+sdMJaoHmnfE+6L6doBvtoui5DzOHv2rOuhBMe5
c+eSa9e13k7A1O80fvz45LkzZ85saWT+E5MNMg/f/Tq+j49+J0LsYzvXCcQ2
5+fZAEK515vMr12NK6qK+Ol0R6w1cOT8fM15ctUHXiVPFyHktPhCTH4ngHtF
6LkLrr9bMSI9hHQH/JUh0LYusI+Va7Ro0aLGX3/Dhg3O13d5tXxD0QUhvmHa
W0+3DyqKH/njjz8cnFEcpH1PugP3ytD2p7g/Yewx9fttizlz5iTXLtTeTqgN
+PTp00p/a+J3Qr9Q+W6MjIxUHWZ0+G6DfPHiRe/UqVO9EydOJP+uiu9+Hd/H
R78TIfaxnesEfJ/zq6BbA/s6l+ooml+Z61SNtCZwnWO2CUnOE+YPH5k0aVIy
vn379jkdR9d0YYPY/E5qvxhVF8idDAX6nZrn+fPn1EUF1BpGsFc2iQ92ZLx3
WhewmYeQ/0aIr1y7dq0w9yQrbqzIV4V6urHseV1gUkcipH03UOdx+gbK4Xtv
J9yLMVfAP3bo0KExj79//z65Z1fJ1yryO8FPK7rSvXeX8cEG+fLly96BAwfG
/H7+/Plj5rSpU6f2Pn78WPo9fPfr+D4++p0IsUsbuU7Ahzm/SSTXO+SejUXz
a16MH9EjusDauEvXTbTy6NEj10MZhcs+8CqiC9Q/INWJze8k+425c+e6Hkpl
6HdqntmzZyfXddWqVa6HUhlXukCsqKxt8P8m/ERHjx71Yv6eNWtWMo6NGzc6
HQchsfHs2bPcx3Ux6EeOHKmcJ0XMkJphsV1jybHbuXOn66EEg+pX8fHzhi9M
Fy80ODg46nlLliypdA5Ffid53ZDtUrbwxQYJf6TKsWPH+lrB2JBX/9133yU2
JPQvKDtW3/06vo+PfidC7NJGrhPwZc5vCql3gntGqOTNrytXrkwei7U2nC1E
F12LNRK9+FY3AvZ8H3Qsurh3757TcYRObH4n2W/UqavgGvqdmscHX3ldXOtC
8lxxpO0+ZZEY6wcPHjQ0uvIgLl7OB73VCSFuERtabPk4PmFyfUO0E0qt/i72
KaqK772dZJ2AtQdqWSD/WurGqHPAmjVrGvc7/f77797Gf/qALzbIcePG9e7e
vdv/GXVCoWddbhN09O7du1Kv77tfx/fx0e9EiD3aynUCvsz5TfDzzz8Hu9ZV
yZtfYzi/tolFF1Vpay4pgw/2W9EF9iSkHjH5nRDnKr7akHHtX4iNtWvXJtd0
xowZrodSCx90gXwxuQdUrbN6586dfgyxS+RcQs6NJCQmTP1OFy9edD3UYInV
7/Thw4co4o7axPfeTrLPS2sRtfWQt7d58+bkZxt+J8kL/P7776ufQMT4YoOU
foASwzRt2jRt7T0wb9680rW1fffr+D4++p0IsUdbuU7Alzm/CSSOdv369a6H
Uous+VXsG65zREJDdNHV66bmPPkAvp8Yj8s+8EB0MTAw4HQcMRCT30nmX5c5
FE3gg38hJsQWhfjVkPFFF6dPn+5fU9QvLAv6s+BvEWvtEtooCfEL1tmzD2pN
xXqN5d6ybNky10MJAt97O2F8qHWXBepqw77StN/pwoUL/e8B+4Xp8ckGCRsJ
xgKt7N27N6mtl+a3336r1K/Bd7+O7+Oj34kQO7SZ6wR8mvProPaLCfk8QNb8
Gsv5tUlMuqiDT3n+Mpbnz587G4Mv/aViIRa/0/Xr173IoWgCX/wLMSB9hL75
5hvXQ6mNT7rA/Ujm4TLfOald4/o8xL4NGywhxB+K/CG+1gQLBck3zTt0Nszh
4eHemzdvkn/j/1OnTk3mceSFlM0hsMWJEydyc1jI3/je2wnAn1T0fd+0aVPf
f9aE30m9Ll2r718Gn2yQyHUU35McCxYs6O3evTvJ6ZPeb7t27Sr92r77dXwf
H/1OhNihzVwn4NOcXwfkveI8Yqh1optfJQ6nqzk7VRFdTJ8+3fVQnCI5T677
ryO3yIfcK9EFameR+sTid4JfAecRcn9AwQe7fCyIPeLWrVuuh1IbH3Uh+3kc
T548KXw+7ud47pYtW1oYXTY+9JcihIwFPowiv8jx48ddDzNI0PNEnbN1h66e
gVr/cN26df3XQH4R1uT4+dq1aw7OaCwyzqGhIddD8RrfezsB+IBQ3wLHs2fP
Mp+HHJem/E7ImZF4Gl+viw/4aINE3cWseQ0aqYLvfh3fx0e/EyHN03auE/Bx
zq+CXLeXL1+6HkptdPOr7/FEviLX7enTp66H4hy5Fr/88ouzMfhip2OuU7PE
4HdS+//GgI/+hRC5d+9eVNfS13OBnVK+f6i1n4cP31Nf+ksRQvT8+eefSV8V
mS8w723durUfh0XfU3lUnxOu59WrV/t16WQ+1PXNevv2bfI48kr++OOP/nyv
1rLD/ha5oz7sc8UOG3o/R9tIb6eFCxe6HkohqJF26tSp3OecOXOm9Oum/U7q
XsKHGiM+47MNEjFQyG3CPQO1MD59+lT5tXz36/g+PvqdCGmetnOdgM9zvimI
ecU5IJYl1HNQSc+v0s+cuU7lEF1gTxSDLuqi5jy5uB6+2OlEF9gvkWaIwe8k
ORSx5MD56l8IDam7UTXO0Td81sW+ffv69pqNGzdqn4Pe5VL/xCXSL7zIjkUI
+Qv4G8aNG9d79+6d66GM8j3p/CRkLGmfU5k4T8T+pe2GiEODb1AFtgjkp1Tl
/fv3lf9W5f79+4z3NEBiCW/cuOF6KM5I+50wx+F38HmTfGKwQZrgu1/H9/HR
70RIs7jIdQIxzPkyHz18+ND1UBohPb9y7VsNuY43b950PRRvEC39/PPPrb+3
L33gRRfsA98cMfidfMihaBKf/QuhgB501EW7SI81HOj9kUYeQ/y8K2A/9/06
EuIbyLXH9wb9NX2Avidz6vicBPy9Wkf17t27ox4XOwjm1yyQVwNfB/KlRkZG
kt/BTzVr1qxReW1N2FFkr3D27NnarxUjIfR2KkuVvsOq30l6g+EQfZJsQrRB
VtGI734d38dHvxPpElhfrVq1KomvLKr/URUXuU4gxDlfpY3awvj88fobNmxo
Zb+kzq/r169P/r18+XLr7xsTogvsT0LUtS1kn912DpgvfeBFFzb7S8HPqbNh
oE48vs+oHe3C72eT0P1OuL9j/LNnz7b+XoODg/0+UvKdgB7x+ybx4fsWOtAD
ruPixYtbf29b684QdAG7o6yDcA8XH9POnTsz/VFtIjbOrJwsQrqKfG9ND9fr
c/qeimnC5wSwD0A+eVaPHdTsy9ME9uCyf1H3/bKewthQF2Ty5MmN9NVZtGiR
E7tMKITQ26ksWHOVRbSHOmys31mOEG2QVTTiu1/H9/HR70RiBT0tsc/FmgV1
XoeHh8esk1Ffo06dzzSucp1AiHO+CtY7GP+FCxesvQfWyLKuEDsI7jvp+gBN
oc6vvuzNQkN0sX//ftdDSRgYGHA9hD4ucp5kTYM6yS4RXdjsL4V4TryHWidc
ariph67vcqiE7neSz6RKHFsZpG+x3E+kRokcsJc0lccRgn/Bd9rKrUGMrKw7
EVudte6sU39ICEkXqn8W+eyyNlJj5tsGMcwypib3AYTEgPiGsdbCnKUeUn8K
/0YfH196+dD3lE1TPieVvM88L0cE/ib1cayrZWzQlvq60FjdPbrktTJ3RU8o
vZ0wTvRhKDqkprLpnJTuHyfzW1qLRM9PP/3Ur1eMucWlz8OWRgD2xbJ2hTZQ
w9M3fPY7wW4k37G5c+das70S4gKxSyKeUvU1IM4G8wwO9JlDjfk6YL7Fdwmx
Oehb6SqmJmS/E+zman6zLcTvhPovb968SfqiyloXtiJooSk7CHQh86vEWjPX
qRyiC9v+OuS+wZ9UdOA7Vjf2DvHuMl/UjX1Xc57aQj4Pl4gubPeXkvlCfI2y
ZsI8JXVF8Jz58+f3Vq9eXeu9oAVoogld1CFkvxM+J7GF2QT2G7zP6dOnk38L
sG3g/is+qSa+l9CCfOdc6iJk1qxZk1y/KVOmWH0fNb4kve5EPk2T605VF1hr
hABsWqr/Db4ol0huJPa/hJCx/Pbbb8n3FP3aVHyrs6dC39NYbPic6gBbiQrW
UlmxIVhfN1F7X84f/lQymlB6O4l/zPQw2aurtvD0ocYcEj3Ys+quHeaZvDqb
trChEfhH0rGFcvhmc/XR74Trl3X9XccwE9IUak0PxJbiZ10OMWxUVecMxDTr
vkdYQ7VNyH4nxB60Mf+oficV6AQ1s8RXifsl1rpVY6OzdOFjbITPiC6WLVtm
9X3Qv7bpdUoa3HelpkR6bVYn5kNeB7XfbLNkyZLkvVzHxIkubPeXSvud5Frr
clkRr1mFrPUs5iIXsUAh+53ErnDv3j2r7yO+46wxYH6AXQf/rnod8dnr6hxh
DmGMWDnyvrdNIrazd+/eJT+r6840VX2jajyLemDNEQKoWSNj/u6775yORcbB
/oCE5IP9kJrD67PfCdD39De++ZwAfP0fPnxI/n3nzp3+Z4X7pdorCnprqvab
+BdiqiXXBCH1doIeENddlC+ONZhJDXo1fqfJ/X5XyPPZyXzT9vVrWiNAbIMh
+E589DsVfce6fo8mcZD2J6HesC6uEfOJ2AnKgNjZvO9R237+UP1O2Le0dX/P
8jupQAu4h0AXVeyXkmvMNUw92tQFQP1v9N+4dOlS5nHq1KnKfaaKauVXpc2c
Jxmryz7woos26kuhVpusKVHPL8++i5x71LwvS54uXNTQCtXvJJ8Pvp+2ge1f
lzsj9xep44J7SdXx5M0VbZxjLBw9erRva7KN9DJSyVp3wg6IeIey5OmizbzX
qqg5zDhs9ufL48iRI8n7oz4YIaQYzGWYRy9fvuy93wnQ9+SnzwlgLyVjks8I
uSXoqSprHBl3OjeqKvBzMdZgLOJ7CcUfd/LkSaPnmcR/m/SwYz50NkXXztXc
26RGTHyTPtn2fPM7rVixIqjrR0hVsFbBOlklveaCnRB6L9sLIivm1OW9KlS/
07x585Jxw+ZvG7EL2pqPTe5PXMOYIbpoS8/Yk5j0D62iHRNdIFe9KvIaNnOe
duzYkbyH6z7wogvUyGwDzPWwTcr+RBfXhFo0eKxsPqPJeqxt/0+ofid8Rm2O
W/JYEAeO765a21wFNd7Kfi9F43kHa+6ZIbmEbe19oQnTdWdZ21cMupDvKWod
yWeD70zbdkB5b5v9AQmJDfjKEXsjNR189juBLvuefPU5CejZi3gt1KFXe9Ri
HY19H8aM3qlN9EIUpOaE7RoaISF9jVzXsXCBiT28bm39WMmrnaYeodkk05is
u3FgTYn5zPXh63jodyKxg7UKbJN5OSvY+1bJA922bZt336NQ/U5yrdBvyTaI
P4ddCPOxjTW4yf3JRd5xiMj1evz4seuh1EbiT2ytbWVvbbNfhg994IFcr7ZB
LgP2wMPDw2Mek/qDZfsVm+gCz2mTEP1Oam5kW8B3kK69gO+Iaj8BuM9InUZT
xFbkky5CBGs/nS/QJp8+fTJed5bFJDa3TvyCbeBbSn9P1boBg4ODrYxD6jrZ
7g9ISKwcOHAgqXdcJWezbbroe/Ld5+SKEydOcB+eIpTeTjagTbw6kjMeu9/J
ZJ/Oo/7hohcYIaFg6v+m3ykf9FTCmGF7aHPM8GUgn79pTO9PoXw+rhBdwI8S
w7VqQxfyGjZynrBXl8/DJaILzL8+AX92Ff+oiX+hbdtoiH4nuR+vWrWq9fdG
zB/6jCEvrilM5gr6nYqRHLQtW7a4HkojhK4L6fec/p5u3LixP/42aoOILlDr
iRASP13yPdHnlI/NvVJoYM/ZZbuEyZrKtAdQ10CMlcn18zkWygTTPAPU9rt1
65bzQ9a3uOe5HguOot5YXZ5/SJxk9SJBXPK0adOM64CqmPj5287NDdHvJPG7
jx49av29bejC5P7ENUwxootr1665HkqiB4wDa6yqmNRTq/u9hS3Plm9I1g02
fLVlEF34UNulCV2Y+CNRA6NNQvQ7ybXygbZ0EfpezjbSm80XXYC6Nk+pEZR3
+Py9zfs81Fq0Nuc8xFSKPZYQ0h264HuSnpL0OWUj66um+kaFTGi9nZqmqE+7
ardBPXXyF6g3b3LdcISex2JaTxDH2rVrXQ/Xm/5OiMU12bPQLkpiAXXb1bok
uvsGbDdV/axF36O2v/Oh+Z0QI47xov5nm+O9fv26NV2Y3J/gj8zyeZG/ddF2
HQR8dojHRr8W/Bv1Q9L5KBs2bKj82rb9TkBeq2yfoTykDzz2si7nFdEFaru0
iYkuEK9f9bWLdIHa920Smt9p+/btTmwINnVh0j+ybV2EBq4PrlOb/RRfv36d
2DOzDowH8QHyc1lM+gTu3bvXwpnVZ/Xq1cn4vvvuu8znIP5IzgN2MBvMmjWr
1neTEBIuMfue6HMyA/sj0UAIthKbdLm3k1Bkr1F/Rq11fM+6CuKx0/azvOun
64ccIkV+tgkTJvT/jeuDep6ucO13wvdD1tlyFPV5Ct03SQgQnWMdhjo8knt4
4cKF/nPQ17Lq2iPPBoCeq22vZ0LzO0kORZs5Lei/Ip+RC12ox+3bt5s8tWgQ
XezevbvV91XXDPi/9D+HPuCrRO8JfK+r2uPl+5l31O07ZiPnSa7D4cOHG3vN
Kogufv3111bf17YuTOLGbPWj0xGa30k+l7bXrbZ1IbEPvugiNOQaoadQW+Az
N7n3y1EF2IeKXnf69OkNn1l9ynweqq2nyX6C6vqvTj4iISRcYvQ90edUDlm3
nT171vVQnNLl3k4qOv+J+EywVli0aNGox7AO69IaArFwar00/FviWxF3p6sZ
7zrfpml0tj2ct+w9865Rm7jyO+H7kN63Yg+M2hNAZwPD944+JxILWFeka9E8
ffo0scnu27cv+bmOfwFgvlXvV3hPV/a6kPxOkkPRdk6L3DeWL18+6vc2dKHe
f3Cesr+ROGx1XUP+QnRR59pXAfXjVF+gxMOl9Yl/1+k5hXWJuj7Dv6HJN2/e
jPr9pUuXKp+LvEYT6x1dH3gXiC5sxcBnIbpAH3qg6kJFdFEVnS7wO9gOZF9Y
VxemhOR3unLlSn/t2iZt6QJzgxpbKLpAfq76+zZ0ERJr1qxJrgtiENsG9xB8
Z3ft2pXk3KsHxoTfw3dex3+e1gXmRaw51Dw5PP777783eGbVwf5XfLOmIC9K
zgV+3CaQuIw2c+AI6QKh1XCIyfek+pzw/9A+iyJsnI/4EbBG8N1eYovYeztV
0Q3WUFhL6cB+GHZ01W6+Z8+eusP0mvQ5F+XyYG0aElXnlrzzTOeEqb6XNnDh
d0KdBfV7gbyPLBuU7FUIiQ1871H3RAfq48DmX9e/4BMh+Z1QKwtjbTunRezX
rnVx/Pjx/vyM+HjfP6+2EF0sXry41fe9e/fuGB8T7IO6Hu3Yp9iKc1JjRZCL
VwWxrTVRv1Jsf6iR5BLRRdv2AdGFSpYu8D3+/PmzlXGosXZVdWFKSH4nyWkW
/09b+KIL9CFsSxchIdcEvh4XIK8GOUcLFiwYNQdjTGfOnLH+/pJ7hwNrDdeI
TRTrrzIgDkjOA/U06yKv1WYOHCGxIzWGEL8XEjH4nmL3OdnSlvT5w4H7dReR
ONy2e5G3gc05Kd23Bt+7q1evNv4+LtHleDXZu2jHjh3J4RLb961169aNun6I
d2qjRmObfifUq1JjY5v+LvigE0JMwZySV8MNvVoQi0y/U7u8evXKaYwN7IV5
82JbukAsshoT4SIf1ydUXSD/p23wWaT7fKVrIaKHi+39NWK71Xt4VuxVHvL3
9+7dqzUWH3KdRBeu+sDjfbHPUMnShc38AuS01NWFCaH4nVB/S66FC3zRheSS
2NZFKAwMDPRtKa7BWGCfGB4eTn5uy+8E1PhDnT+0LW7dulUrV1WtXVinfuCR
I0dK51wRQopZsWJFcu/B/S40QvY9xe5zAja1JTUGdu7c2fhrh4D0dkKP0tho
Y05K29x1vcJDJO0vqdrTCvF2sJXoDuQA4cA+zlW8Qhsa0fU6atJ/p6MNv1Pa
91on9893nRBiCmyumFPy9vlYb9Dv1C6y1lm6dKmT90dtJp90od6Tulx3T3Qx
depUJ/pFbDxqNufd2xBz3YYusFYR32cVW6Wa81QVeQ3kALpEdNFEvHsVyujC
Num6ezZq04fid5K19cGDB528v0+6SNfd63LPAvl+HD161PVQEuAHRM7btm3b
WvU7gV9++aWvCV1cRRvIfayOTRf5SaLvqvZV0YWrHDhCiJ+E6Hvqgs/JNtJb
FTERPttMbCH6gU2EVCddYwx7kxBzqtP14er60RBvp16XvCP271/aT1NUr7AO
Nv1OOj9a3V5n1AmJCeRPwweblz9h67vfNqH4nXyYP3zThVp3D/G4Pn9+tpDz
f/TokdNx5K0XUZ+xTl+OsiD3Tq5L2TpadfPo5O9dr599yLkCPukC67yquigi
FL8TdTEW5IPY0kUIINbIF12kET++i3osan3+Nmu+S05iU7mqUhel7DoBdTh9
yYEjhPhHSL4n+pya4cOHD97sc1zggy0mFnR16era49sCvXbUfuRN1kobGhpK
4l8PHz7c72uKA7XzsS6FXytdNyJm0jlyuO5N1zqy4XfS6btJ/yp1Qkh4hOB3
2rx5c3+MZDTpuntleyGEjOiiiZ5EsSE2M1kPmtbRqpPzhHu/+EBdIrrA+p2M
xlbdvRD8TqiPgDGiHxoZjRrD0LW6e8grwnlj7iOjcVF3T/qPNVmfXe5rZfL6
RBenTp1qbByEdBH4e+H/xV4FB+xCrmPFmiIE31PMPicX2pIchGXLlll9H9+4
cOFCPxYj9D23Dd3Azl6l7xfs8GqcD46q9cds09ZYUUcNdUvU7xhi5OrUTS6L
rbmlqk6wv1btffgcnj9/Xns8oGm/Uzqfz1Y9SR90QkgIwPblQ55yCH4nmWe7
UKezqi7UHFZf1ytNI7q4fPmy66FYp4ouqtbdk+fDd1WGqn3gm0Z0EdPeOosq
urBRdy8Ev5OvOS02qKKLdAxDF+ruYc9GXeSj1mO0XXcPc7atz0P1rRb5GKV/
vKv+gITEAmK1s+rftFk/1CY++55i9jm50hbqmsj9wVe7iQ1i6e1UVzf4TqEe
9vnz50f9Hv4ExM3AH1BFFzZziOrioucQwD4EsaxYd7bpT2hibrGlk6Z6aak0
5XdK52a1pWFXOiHEJ9S6RpgX1D7h169f9yJX2Xe/07lz55LxwX7u4/iqYEsX
ql2l6v0sFEQXMa37TXRRhbJ199ScJ9NrW7cPfFOILqZMmeJ0HE1iSxfYO5bR
RR6++51kfDGtRW3pYsaMGY3pwndmz57dv36xYEsXmFPldW3V3ZOxL1myxMrr
P3z4sH8OiF3NQuwrGzdutDIOQroC1uhYF2LOkBrliPU+ffp0YpNCvHIM+Oh7
itnnBFxqSz7rLvX+i6W3Ux3dYE2g2vzxWqj3Jfz444+1bXtN90yqiw0/RxlQ
exzrT1yTtvZwdecW2zpp2g9Y1++U7kWFo+0YeBc6IcQXZH+PWh3IN1y8eHEy
V+H3QGrYu7aZ++h3Qt9OjEe97968edP1sBrBti5irrsHXeC+pp4fYkliIEsX
N27cSB4XXVQlXXcP8dx5yHNv375t9PpN9IGvCmL407oYHh5ufRw2sK2Lpuru
+eh3El2gJoico2qDDxnbuoi57h5idtO6KJoPQ8G2LrAnlWtmo+6evLZNYHtV
bbGvXr1K9A1dQBOqLkLos0CIr8A2lleTC2v6wcHBlkdlD598T7H7nFxrS43D
ELuyT+vfpkjX9sLRdG+ZNqmrG5w//h55HfBDHD16NPkZMY8Af9uUbS/t72my
rpoJvvm/cK1lLWuTJuaWtnSS9vfg86rSZ76q3wl1F+Vv5XDdo6wtnRDSJkV9
0eBrxVpPnVM+fvyYfD/hL6ffSY+an6keofTk8EUXiEeRa4e+OyEDm1BXdKGi
00UdsJZS1yd5ueKS84R4nyItNt0H3hToQqcJHFgXhoAPumii7p5Pfqc8Xfgw
PhN80EVsdfckvlB34LEQ8EEXturuYc625c/SIX2k8o5QdEGIj8BGivzZLObO
nZvEvsSEmkfuKl4ydp8TcKmtvLUE9lg+2FKaIN3HJ8Q9Vpo6upH6u+kcN+S+
4DWPHDnSqN8JwH6/aNGiVu36Ptf7a4O6c4sLnaTr2+HzK+MfLut30umy7Tw4
QrqC7Fexh89i3759mXWqYNPdtGkT/U4p0vFD6cNWbZem8E0Xasz61KlTnX++
VZH+3lmH67jCIsroQoeqiybYtm1b/9ohxjsLeU5RzhO0heft3LmzkfGZko7B
Sx9YO/uM6CKvb12bukBNNRNd6PDJ71RkS/Y9d8c3Xai1HMrqwieoi2Z1ocY4
NrE2k/m8zZxE1CUJXReE+AxsYele7Ih1QcwYvl9V+qv7jkvfUxd8ToILbeXF
NYXuk1GROJC8I9Q88Tq6wTol3a9HWLNmTf+737S9BTFHaT9g03XMkDszYcIE
q+8RCnXnFlc6QZ0D9fPD52kSG1bG75R+D9d5cITEzrFjx5LvMuJIs4AvGPPW
hQsXtI9v2bKFfqcURWscH65XHj7qQo1Zx/9Dqz8G30GRJnzv8VRGF1k+NNFF
U6jXNauOlprzlIXNPvB55MUbyuG611QRoou8uDU8Bn23pYuqdfd88TshjqxI
F23lU1TFR12EXndP9bVTF3Z0Uef6SV8+7F/bRPW1Zx0h+1oJcc3Bgwf79w2p
xyxHzP3TXPieuuRzAi60la4pFaKtwgSTc/TBblSFOro5dOhQUi/t2bNn2sdt
2/Zs5CLpegW5rpXmmrpzi0udVMlFMvE7pXOqupYHR4jvwM68a9euMT5z4cCB
Ay2PaCy++J1M7IUxrOWAC12EWnfPxF5IXVRHzSXT1dGSx27duqX9e+kDv3Tp
0sbHlseKFSuMdBEDbesiXdfSpL6aL34nU5tADLSti5Dr7pnoou06obZwqYuq
dfekpxL6ELZJug+y7mjbF0ZIbMA/rd478G/s+WKnTd9T13xOQtvaUvv/8Qh3
711HN6hdAttEFm3U5kn3XkKee7quGvZy2JMhdgb5a7q6wa57SPlM3bnFtU50
OXLI8U+j+jJRQzAdV4jHoS/1dbqaB0dIW2AvX1RbP0Tod6pHSLpoKjbZNuiN
vmzZsjExJtSFHfLq7hXlPMnftQHiauDfSq9/8g7fCEkX0EKWLtK49DtRF+0y
e/ZsY124pKwufPQ7haQL1K2Xa1lmP40a+PibdF8qW5w6dSrZW5vaD+l3IsSc
hw8fZj6G/ha+rdVt04bvqSs+Jx+0ldVruKtHCN9nH3Rjiyy/UVZNEKxnUB8x
7bfqeq20mDWC+olqjBU+9xMnTiSPZfVwwxpe57dCncEu58ERYhv0NkmvMxDj
H/IcpOKL3wmY2IVcj1EIVRfp2OS8XhFtgHq5iL+WfuhV1r3URX3y6u5l7Zml
/jc+u6bBegfxNOhpUtTHKevwqc4edJE+D+TB+64L5LRk6UKlLb9TE7rwyece
uy7aogld+ORDC1UXamwLPgsTpJ/AwMBA4+P55Zdfeps3b+5NmjQpCl0Q4juI
F4OdjvyNTd9TV3xOwAdtsc7e6LV0COfpg25soquTZ3qwVtpfxK4RkK6TV+Yo
qtNHCKkPYgLUuRnxnFKXyoat1QU++Z2mTJmSO+9l9Sxomxh0ocYmo29EW6Be
G+Il8urb4Foiz+bu3bvJ36i14KgLu6g9RaWOVlbOU5N94K9cudJbsmRJZm4C
3gu2Q/i6xFdaZEeEL80HQteFSd09W34nG7pw7SMRuqALW5joAuuJ7du393VR
tK+iLpqhTN09xOXKuTYBNIieTWr/g7SNBdcQsS6IeQFFuiCEmCPffXwHYcvL
O7APQC2iLmDD99QlnxPwQVtYJxTdM7AeDR2JK8w7sFYJAR900wbpvJaig7XS
/qYrGgF79+411kjX8+AIaZM5c+YktgtdTiFiOV+/fu1gVM0iObqYW1z7nUDW
PRO+Cl+IRRdqbDJiGVRgs4cNWVcP2BTsidBLCnazrBgL/B5xOqizmLVnSts3
fV3fx6ILdU2CekRAfkavTehi9erV/XmjLMhN2L17d2/q1KmZPgKs/WA/zLNl
QxdZf++jLnSxVCHpAlpI60JAXUz8HveTqjSpi6w1dJ35rGli0QXOI0sXuN6Y
L+r4gE11gbzSvBgE6qJd1HqM6bp7ogup4bF+/frSrw9/Iub5vFwm2AiWL1/e
u3HjRubrZNWj8U0XhIQA1urov3nu3Lkkvlo9MD+r31WsNbtEk76nrvmcgC/a
kjirrLWID7aUJsjzYfi0xyrCF920hYk/AWvJWHTaBF3TSFfyNgkJCexns+pY
om/z+fPnWx5Rc6h1tXxbS2BNhzkRax7UOPElb0GISRfp2OQLFy5odWHSrwG1
gVauXFmYywSfxb1790qPVXSBvgzQhS/x6QJ0kZWnHZouUJ9I9Q1m1QBes2ZN
4Wtdvny5t3jx4sKclS1btlSq+0hdtEe6vtrRo0cr22tt6wL3MvU+Ql3YI62L
nTt3aj9Tk3u5iS7gl9mxY0clXSCGRXSBf1MX9lB1ATtHlr3ORBc4b9hts3KZ
oAt8rvv27evnMpVB8rBFF4SQ8qCnno7h4eFRtrs7d+60PDI/aML39OrVq/61
7IrPCfikLdyz0j0CfbCfNA3u2eq1xTnfv3/f9bBK4ZNubJNl29Otl+hT+Jsu
aQQU1REqY/sjhDQDckCQt5oGazys9ZqoL+WCojzxkNZOOBepx9YWMepCrbtn
cv9BrB3Wo7gWeblMiHnOy2WyBXXRDLCBFulC9THADgzbqEnOypkzZ1o/Hx91
8ezZs1bHU5e8/MMsWzJ1MZau6kL185joAv4n5DK5yD2hLupTVReokYh4h7xc
JuRZIh7VxTm1rQtCQuX06dOj7NZV/MIxUcf31FWfUxbUFqlCzLox8Sf40FvD
d2LWCPOdCPEP5G/ge4e9LWzsyOXAXldsIaF+H0383KGcG2xWbX8WserCpO92
nnbq5DI1DXXRHCZrE1s5K00jumiTIl2ECnVRD+pCr4s6uUxNQ100h4ku8nKZ
kC+FfgQ+7P1d6IKQEJEavDjQWy3UdXDTVPE90ec0GmqLVCF23aTz8HQH81jy
iV0jpnlxsZ03Ib6Dmh3p7yFsAD7sfatiMtf4dk9CvDPW2+lDtUu0mTfcVV3I
IblMAwMDTvc+1IV9yujCZc6Kiqku2iJLF7AjhAp1UZ/YdGG6l5HDZS6TCnVh
l7weSlm6WLJkSe/KlStOx+2bLggJhZGRkVFxatu2bXM9JO8o43tSfU6wK+P6
dhVqi1ShK7opqmnkSz93H+mKRgBi/PJ0Elo9TUJi4f3790mvuYMHD/YePXrk
eji1CdHvhN7isEXgfrB27dr+IT2lN2zYkBxt0kVdmPTzaRPqwi5F61df12bU
hV1M7ci+1aKiLuyCmqomuvAhl0mFurCLqS58i8/wUReE+E66J8b169e1z3vz
5k3LI/OPtO8Ja27pQYgDay36nP6G2iJV6JpusmLA5s6d63po3tI1jQD0Ptbp
5OLFi66HRkgnQP5G7Jjs/32dczZu3JjcNz9+/Jj83EY9tefPn/c2b95s7fV9
wUQXf/zxh+thaqEu7GGiC1/J0oVNqAvqQkcXdGHqp/YV6sIOpnlwvuJCF4SE
iNoTA3UR1L5taVA7k3H3o31PeUfXfU7UFqlCl3WDtRfqNePIO++u02WNANGI
69oThHQN1DLZunVr4n86duzYmOPo0aP94/Xr166HWwnUOypa3/o8pz548CCJ
N0UsfRv+BfTxxjVBL5KYdVGUc9tmvboqUBd2KOoH53udIZ0ubCK6iP0+gloN
ebrA4z5DXdihqE/g5MmTXQ8xF+rCDkVrTsRd+kzbuiAkRNT5H7W458yZM+aY
NWtWf13p856iTSZMmFA4R3bZ5wR819aHDx96V69ebfU9STG+64a4hxohhLgA
fm7YyyTHXT3UXn3wT6EOSqjk2YZCqOn5+fPnxH+GvX9b/oUu6CJvz+NrrpMK
ddE8RTkMIcRQpXVhk7K6wF41RKiLclAXfue0qFAXzZOX8+R77ILQpi4ICRF8
l2fOnJnkcGYdqE0p8Y+03/1Fkc8Jh2/179vGF20hN2LixImJLTq9L5aegDHq
GnXIpMYY/j916tTkXGGLx/3dV3zRjU+E+lnaghrRQ50QYpesPiWIRZW134IF
C1oelR3SdT1h3wjBt6By+fJl673qYRfCWlJHjLpAPLqqi6+//pq60NB1XcBO
GoJvQcUnXWQ9JyTw+afznnzPZ9FBXTQLdWFO13Sh+tFCyHPS0YYuCAkR2OVM
ibFeURVM69MiDqHL18sHbeEzUOMl8P+9e/f2H0dPmBjt0up5r1u3rn8fxzoP
nwt+vnbtmuthavFBNz4R8mdpC2pkLNQJIfaR+u0C4hsxx8h3D/2RSbfA/SUd
Y0xdEBNddKFfHBlNli4QJ0RddBfqguigLgghsZDeQzf13JhBTw0TvxPsfV2w
d2bhWlufPn1KPofp06cn/wavXr1K7tXLli1Lfh4cHIzO7/T27dvknDZt2pTE
oCIvBD/LOQOcL3LAfDxv17rxidA/S1tQI6OhTghpH/R7Rt09WfMNDQ25HhLx
AOqC6KAuiI60Lh4+fOh6SMQDqAuig7oghJBuYeJ3mjt3ruthdpoXL14kn4Ou
/gd6/iEnOUa/09OnT8ecE9Yo6XoXyI9AzAzxF36WxATqhJB2kVxpqTMm9S1J
t6EuiA7qguhI6wIxRIRQF0QHdUEIId0jXX9Ud+h6L8MOmLb7IX8WvYf27dvX
1vA7A2yvWf0YkLc2YcKE6PxOAPp88uRJ/+e7d++Oehznm+WTI37Bz5KYQJ0Q
0g5qTX2s3XTQHtA9qAuig7ogOqgLooO6IDqoC0II6SZFPZ5++OGHUc+Hj0PN
i0Xc+cjISP/xkydPRun/cM2DBw9648aN6/373//WPh5jvhP4/fffe2vXrk36
Ueq4evVqlOcdI/wsiQnUCSH2Wb58eX8dt3///sznYY1HugHmVLVnD3VBAHVB
dEAXam+WAwcOZD6XuugO1AXRQV0QQgiB70n1JcmBmIQ08jzUdkN/YfQcQny6
2Ahj9X/4wk8//ZT52KNHj1ocSbvk6Un1exL/4WdJTKBOCLHHl19+mazVsKab
NGnSmAM91FD/JLb1HHoKvH//3vUwvATreFn/UxdEoC6oCx1ldRET1EU21AV1
oYO6oC4IIUQF+TRZvg3UNcK94MyZM6N+//jx4963337b+/XXX+l3IoQQQgjx
GKzZLly40Lt06ZL2uHjxYhKPGup6DmPevn17b/Lkyb2bN28mtTuRMy52D9g4
6L8eDexC8EeeP3+euiB9uqoLsX+KLj5+/Oh6mF4hdmTT+0iIUBfloS6oCx3U
BXVBCCFlwLz5888/j/k9ejsh9wn1F0LddxBCCCGExM7ly5eNnrdq1SrLI7ED
YqiwFoV/DTZzye9C3BR6kx47dqy3YMEC18P0ihcvXvQGBgaMnktddIcu6+Ls
2bPURQbUBXWhg7qgLnRQF9QFIYSUYf78+b0JEyZo/UpqDXD6nQghhBBCSNsg
3vT777/v/4yclvR+f+bMmW0PiziGuiA60rpAjDp1QZCfQF2QNNQF0UFdEEJI
s+zbt6/3ww8/ZD7OOZUQQgghhLhg586dvaVLl/Z/Rv3o06dPj3oOepO+fPmy
7aERh1AXRIepLl69etX20IhDqAuig7ogOqgLQgghhBBCCCEkflBDHzFQ6Duq
4/fff09y8z99+tTyyIhLqAuiw1QXqJVEugN1QXRQF0QHdUEIIYQQQgghhHSH
rP3/+/fvx8Shku5AXRAd1AXRQV0QHdQF0UFdEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEOIX
w8PDvQMHDvT+85//9H/37t273o4dO3oLFizoDQwMjHqMEEIIIYQQQgghhBBC
CCGEkCy++OKL3vnz55N/3717N/kZx5dffpkcX331Ve/FixeOR0kIIYQQ0usd
Pny4t3Dhwt6jR49cD4V4BHVBdFAXRAd1QXRQF0QHdUEIIYRUBz6mM2fOJP+G
nwk/X7t2rf/4nTt3elOmTGHeEyGEEEKcg72/Gh8zd+7c3oMHD1wPiziGuiA6
qAuig7ogOqgLooO6IIQQQqojfqdLly4l/8Z9Nc20adN6nz59cjA6QgghhJC/
wTpl3LhxSTzML7/80ps3b14/bmbmzJm9wcFB10MkDqAuiA7RBaAuiEBdEB3U
BdFBXRBCCCHV+fbbb5Nj6tSpyb3z8ePHY56D+ypjOkgW0Mbnz59H/e7p06e9
RYsWJXUav/76697BgwcdjY74AnVCqkDdkDSqf0Hl119/7c2fP79vC9CtZ0i8
UBdEh2ovVEnr4smTJw5GR1xBXRAd1AXRQV0QQggh9fjtt9/6fqf0fv3y5cvJ
79njiWRx79693smTJ/s/w6YjfcL+8Y9/JOs0/BuxQaS7UCekCtQNSYP9P/yN
efV/h4eHe2/fvm1xVMQ11AXRIbrIg7roHtQF0UFdEB3UBSGEEGIP3EOPHDni
ehjEY2Dj+eabb/q2nuXLlyf24Hfv3o16Hn734cMHF0MkHkCdkCpQNyTNzp07
E18j4kwJEagLokN0wX7wRIW6IDqoC6KDuiCEEEIIcQv6a06ZMqX38ePH3qpV
q3o7duwY85xly5YluXWku1AnpArUDUnz6tWr3vHjx10Pg3gGdUF0UBdEB3VB
dFAXRAd1QQghdkGtNRyEEKID9mDEAaG+Meoco2eY5Cfg/+fOnUvyEfLq35D4
oU5IFagbQgghhBBCCCGEkPiYPn16chBCSBaoaYx6WNJ7BTZi6bOJ49atW66H
SDyAOiFVoG5I6OjqQI6MjPT27NnT27VrV+/169cORkVcQ10QHdQF0UFdEB3U
BdFBXRBCfOPJkyd9+03RwZjicPnzzz9dD4FEzrFjx3ozZ85M8g/GjRuX5Cew
zyZJQ52QKlA3JFS2b98+6ucNGzaMWV+fOHHC0eiIK6gLosNEFydPnnQ0OuIK
6oLooC6IDuqCEOIj27ZtS+Yf9ElYs2ZN/4B9BwfmKhwkLH766adRceE4UKfo
jz/+cD00QgghhJBKIJbm3//+d++f//xnb+vWrcl6x1eWLl3aGx4e7v+Mddna
tWt77969S34eGhrqffXVV4ztagDqguhI68LnWDydLtatWzdGF6Q+qi7wf+qC
ANw3ME9QF0SFuiCEkPo8evSoN3HixN6lS5f6v2OdvXDB/TAvd42+J0IIIYSE
xo8//qhd18ydO9f10LRgfY0YrhcvXiS1TZCvl/YlrFixYpSNgJQna91LXXQb
2Al1usDvfUR08fLly0QXX3/99ZjnUBf1oS6Iju+//16rC9xffIS6aAfqghBC
mgP7nYULFyb1a/Bv+p3CBPEXRTUTEffAGEpCCCGEhALiTfPWNr76GObNm5eM
D/Gm2P9//vy5/xjWbDqfAzGnSBe+2pKpC7tk+ah9txmKLtavX5/oQtWA6IJU
pyg2E7rxEerCLlm+SOqi28j1zTp8zaumLgghvnP58uXehAkTkpps9DuFh9RN
LDqY80QIIYSQUEBdkKK1ja92etSyVmN/sMaWWsgDAwOuhxc01AXRYbIX8pU8
XRw9etT18IKGuiA6TGJ2fYW6sAd1QQgh9kD9zxkzZvT27t3reiikJKg7a7Km
/te//uV6qCQQEMsDXSFnG///4YcfXA+JeAh0gXqtWNNOmTLF2xgw4hfQjTq/
UDcki9DXNoODg705c+YkWoevZOrUqUk9FFIPE11cvHjR9TAzoS7sYKILn3t0
6HTBukj1MKkJ4rPfCVAXzVOUM0tddJMjR45QF4QQQoiGonzgEPbgxB9gE87S
EHPmCMjbx9NHSbKgbkhZTNY22FevWrWqd+fOHdfDJS1BXZA0pv4F1B/atGlT
75dffnE9ZNICRbUX5UANKtS/ZBxMNzD1LyA2at++fUnfHBI/prpArOWOHTt6
T58+dT1kQgghpBVM19RcM5Eiimqg4/C1dg1pD8nZzzp8zj8g7iiaW6gbksZk
baPzN8ycOTO5nyGXn8QHdUF0VNEFYsLRQ/706dOuh08sUUUX8E9CF6dOneJ8
ESlVdPHNN98ktcyuX7/uevjEAqbxCzq/9aJFi3qXLl1yfQqEEEKINUxq3ePw
tdcy8QMTDTEvoduY9pOjf5KorFixgrohpcD+v8jHjccfPHiQ9FFGn9Ks540f
Pz7Jfbl7967r0yI1MamPhJ4GeN6aNWuSz5666AZF9R+giytXrvSWLl2a2Amz
5pRJkyb1Nm/ezFj2SJg8eXKuLvA4YjhhN87TBe4x2EezZlUcYD7I0wX8jibz
BXOi4gH+RBNbGvxLRfMF6tvt3r2buiCERAti+Zgn3i3y4jOwrsLaSX6Gj+rh
w4euh0w8xMQuDD3RNtxdTPvJsSYjUUEfMPqdiClnz56tNc+cOHGiX99e93dY
B82aNSupqcJY9nAwjXvQ6QKf88DAQG/27NmZsVrURfhkfedx6Hjx4kVvz549
vWnTpmX6uZH7Ap/WmTNnWj4b0hRZmsBnrgM+R/S8xpo3TxfMiQqXPNsJ5hEd
JvMFc6LCZPHixUY2EB2YL1B3D/X3snQBHxV8mFevXm35zAghpDlw79Tto5jf
0i2QiyLxO1grwwcp/Pzzz6M0wrwVomLaYxXrKdqGu0tWbFf6YD85opJnC1SP
+/fvux4qcYwaJzN37lxtz0H8vgxDQ0O9DRs2JPHqWTYB5L6sXr26d+/ePaPX
xD0z/VqIm+f9sXlGRkZG5bMdPnxYqwtopwzIc0K+U1FOFHURFtj7qp9B2f0O
7IKwD8J+nLUORk7Uli1bjHOikE+T1kVZvZJ6qHMGPosyuvj8+bNRThS+62Vy
oqgL96hrDnwWZW1nRfMFbC+wyezfv98490VX9542PTvgM1HtY9L7r64usA9e
uHBh4p/Omi/gvyyTK4cxUBeEEFcU1SKlf4GoqPcs3PNu3brlekjEAz59+mRk
F2a+U7cpqlcix9u3b10PlXgE851IEen4KcktUPfW+D/sN03oBDlR8F/l5UQh
NwY5MulY9qK+mtRxc6gxMVizij3XxrXG54w+c+gDlZcTRV10C+Q4IPelKCdq
/vz5vXPnzo35+7zeqVl5FcR/1JyorPlCcqIwN8B3paKzIat/R8LEZL7Iy4nS
xVSoe3DSHKiXJ9cW+xSbYL5Azjb20UW6uHHjxpi/x7okSxd4TUIIsY1JHDFj
iInK77//PipeC2vm9+/fux4WccS6deuMbMLquve3335zPWzSIo8fPy6shZ4+
1q5d63rYxDHPnj3L7bujO3bu3Ol62KRl1Lp6sN9JnTSxvyC3QGy3Tfmd0qD+
MHKiYHsoyokq0jDzW5pBrauHeeTDhw/J70UXbcT53r59O+lPl3f/M9VF2Tw9
4i/Xrl1L7IN5OVGYB0x0wXj1OCiTE0VddIui+UJyopB/W6QLtZYNqQ5ykeSa
wk/oAsQpIF4hKycKupg+fbqRLthjhRBiGxM7Dvc6RAdq2HMt011Onjw5yr5W
5MNOr5cRe8Oa5nGDzxf9LtTPvcj/pOoI+kJeAeke6K+TN38U6YY10P0B9wpb
pOvqqcjvnzx5Yt3vpAPnnZcTlXd0we9kSxfpunpp+6vLa4x6OIcOHerNmDEj
M8eBurA3X/gKchxQLykv9yXryOoxFBtd1IVJTlTemqgLdFEXdeYL3Bu7gC1d
ZNXV8wHMF6jfilirrPinrANaIoQQWxTVdFDthF3Y65DyIM8J9ypVK6Z1ZkmY
ICZGja0R3wBi9bLmENSeATo/BPNa4iSdB6f6GXV1YzB3SJ5C2qcJvTHvthus
X79+lC4Qq5enGzlga75w4cIo3SBm2Kc9YYwcO3YsWQPkHTb6+mXV1RPUXCe8
twu/Uxr0yVTXSzH7F1zpIt1rMn3fEF3ANuMLN2/eNM7r7IouSC+poWVqUw4d
6sIM7LMwX1AX1EUaxFqZ+hpCx5Uu1Lp6WFuGANbGJprg94gQYpOi3k6qDzz0
vQ6xC+x9qmaY3x8fiK9K9+dRfUbz5s3r23oxX+TlbOvqru3Zs6eN0yCWgX1X
3fvk1VUUG6z4JdOk69ezRmO8wNdY5rOW+UXq0ai9tNX6WjimTp3ae/36tfVz
6CJi58d3Hraw9CFzQZNryKy6eiryOHKdgA9+J2Aa7xX6mtuFLnAfkeun1tVT
8fX6pusHdF0X5C9MdRE61EU5ULuzC3Zk6iIbxGOhT2BeP0HdEUOPJxe6EBsH
Dld19apiEu/EfCdCiG1M7lFZNkFCVD59+jSq5g3u/eh5QMIGnyvqjatzAuoa
4/cCenXLY48ePTJ+bdSsVtfL+LeL+ljquZBqVPksi/xOQKc/VzUaqZPmwf5R
rUMG3QwODhr/PfoNZs09CxYsGKWbxYsXNz38QrqgmaI4k02bNjX2Xnl19YR0
rhPwxe8ETOxCrsfYBG3pAjkAql0l631FF03qsUmKdBFL368254vQMYkPVWMu
Qoa6MCed16k7MN/FAHXxF1jrbt++PbOGGtbOeKxIF7HEBbeli3RufYg1FA4e
PFioC/bKIITYpqi2g406GCRuUEtGvUfDNtQF25uP/Prrr7X+HjE9abvH8+fP
xzxPl3NQ533azmtB/hXmOtVurcYT4jHk9cdIXY3UyV0z8TsJRfl2bdBlnaSp
q5tnz56NWX9UjXFZsmRJ8veSa6mi083u3btrjb0MXdBMkQ/448ePtd+jqK6e
ijxHcp2AT36nvHqROHT5WyHShi6wTlBtcHn1WOU5rj//LNL5venD13GXpQ1d
xESRLmKBuiiHmn9BXcQH7mUrV67M7G2K+uPz589PcqhV0uvdtE0vFtrQhZpb
H0pdvTRYBxfVX4whB44Q4je4XxX5nGLZ/5L2Sfd3OX/+vOshdY45c+ZU+rt0
7kpefx30dpLn1fUv5vUEso1qy5T9HM77wIEDvf379yc2bcQMxUZVjeh6dSG+
sowGyvidhKz+Ym3RVZ2kqaobgFgEVTfww9RB7S13/Phx7XPgJxP/uOimrdxK
aqYeJnX1BPHppXNDfPI7gax6eyHG0rrCpK6eILrYsGFDiyMsz/jx46P2RZJq
ZPme4I8n3UVd08Toc+oSFy9eTOxyav5/2jewatUqo163al44dVENdZ8SWl09
QV1nYk2c3nvF5oskhPiJ6nNCj0qsXWEzlH586fgJQqqAvHB1XQxtvX//3vWw
ggf2lTyfsXqUsbGlc1eKbPqIJyqy95ZF589oI69FbMNS1wTnDnu2Skj1j2xp
BDTlH6zidxLQD0iN4WqrRmNsOkljUzcbN24c9fczZsxozK+s+r9HRkYyn4de
hKpucH+ybeuPXTM2MamrpyLPVXOdgG9+J0FikyXOA2tzko9pXT2VqnNW28g4
YVuEZr/77rtGfPMkDhB3o+qCtZG6jcwX0AXsNtOnT09+3rx5s+uhkRyw7sW+
B5+XLhcFv0N+DerqwY5SFdGFrC+GhoYaPIs4iaGuHlD3W/i3CjSh6oJxLYQQ
W6R9ToTYJt0b14e9Euov4QgV9FiaPXt2UjNKd2C9ijWFiZ1FV4vKxJYjsfu6
+lZ1KesDqwve4/Dhw70dO3Yk/9bl52EfEFJ8aZMaAWlfT916iHX8TkLbNRpj
1EkaG7pRPyPE9NfZS2dRpt6nfH5yTJs2rffmzZvGxwRMNfP27Vsr7x8iZerq
CVm5TsBXv5PMgWo+g0/j840ydfUE0QXiJXxG4jnU/t6oa0xdkDSiC8yRpJvI
fIH4HUH6XTKHwS/wueAeP3HiRG0MF77H+BwHBgas1PiQ/j54f5JNDHX1gBq7
m5dHcOjQoeQ58H8SQkjT0OdEXIE8J9W3ARvh06dPnY0H99mQ77XISyjKSzx9
+nTu46iJtmjRolHrX9icTWqlDQ8P9//G5udYpuZfHRAHpuozXRsaNunQ4sWa
0AhI17ZrKreoCb8T0OnYVo3GGHWSpkndqDVDoJvBwcGmhjkGsbngUPsp5YH5
TtUNekU1jalmQvZVNkmZunoqWblOwHe/E+ZA6Xe2bds218PyErWuHtaPr1+/
Nvq7UPw2Wesp0QVrcRIV0cWdO3dcD4U4QOaL9P1R+gGdO3fO0cjI7du3kxpC
eb2ZFixY0Lt06VJrY5L3Djne1iaoHS7XKNS6eohdU/dcDx8+LPwbeS4hhDQJ
fU7EB1DnSF1/YW1mC6zHEVuvO9TYexy+2ySaJp0nArsoYihNkdyCxYsXWxzl
38BuqMY5lx2vKbD96npAHDt2LHn/uj2sQiKdB4fzr+sjUmnK7yTo8vZs1Wik
TrLB55CO62yrBxf8RmKXNp3T4feZMmXKqPHu2bOn8bEVaSZde6+LlK2rJ+Tl
OoEQ/E737t3rz7M+jdE16bp6ZdaMoos2avXWAXHuGCfslOnPXnRRJseUxI/o
AvsX0i1kvtB99tevX+/7Nkg7wMeHtUtRbybEYrkC982y66ouEEtdPfiY5Byg
Q9P6CaKLZcuWWR4hIaQr0OdEfAI2WdW+hHu+SVxGWRBXLvZP7OfVQ10Pdqm3
RhP5Q2ovlbbt6031FiLZ4Hqm+9LasNs17XcS0vlZTfvLSDZp3WCv3SawUct7
l+059+uvv47qRwjdtNEzjFSrq6eSl+sEQvA7AbFbXb582fHI/CBdVw/rlzKE
kusk2s/an4kuuH8jKqILGzFYxF9kvoDvUYfMmVjTkGbB/gi5p7h3Z/VmQvwL
6irbqCddB+a2jCaWunrY68h5oMZeWagLQkhT0OdEfOXnn38eZWtCHI4NP8aB
Awd6U6dO7b18+bL/u9Dr7JWlqX5J8OVVtes2Bdb9av3iEOKZQ6FNv54tv5OQ
9rE2VR+QjAV9rFXd4Pvpyh+s5tSOjIyU/nvoRrUnIE7BZs+wrlO1rp5QlOsE
QvE7IfetbL5erKi6KFNXTxBdrF692tIImwF10orymUQXunwo0l1EF+jHSLqB
zBfwOWaxc+fO/j2R1AO+o02bNvXrWqYPzNvYJx09etT7GEj0kMKY169f73oo
zsGcKZ9hqHX1gFpjft++fZVeQ3Rho84DIaQ70OdEQkDyfOXQ9V2vC2rmI57l
1KlTyc9d8TvpfDR11hbz5s3zxi7WlC+N9HonT54cZWvHdbVta7ftdxLSNSXb
OLeuAB+PqhvszX2I8ZRaqsi/qsquXbtG6QZ6RU0+0hxV6+qpFOU6gVD8TkDO
x7RHWYyouqhaizmUXCdZw6DHdx5yPi77ohL/YKx6t5D5omivI7owrbdF/gK2
MtQcU3Pf1cNFb6amUHugdhVcA3XPEmpdPdR2UH2hRT1580Csl9hQCCGkCvQ5
kZDAWkBd5+F+quYnNcXy5cuT/pHTpk2L3u+Uzl1ZuHBhrXyy4eFhL20fTdQO
7CrpmnRt5gS15XcC0L0aF2Y7lyt20rpB7O3g4KDrYfVR99d17ffoYafqhnXQ
ywGfDw61t0HdunqCSa6TjCEUv5Pct5Gj7dNYmwSfv4kuytbVE0QXbdf5LIs6
TxV91qILaCZWVF3g36QY0cWaNWtcD8Ua1MVfyHxhYh8WGxDWvbGCe0ddXZw+
fTqxCaj3nXScGu4jDx48aHj0bhC/JXIlYyVLF2o9upDr6qGHrugVc0FezJUp
oosrV640MEJCSJdYuXIlfU4kSI4cOTJqzbdt27bG3+PWrVvJPTvU9TjWUrA9
IA5YF+OSzu+ATa6J+u9iZ4Yd1kfSOTu685b9q1w/l31ebYLz2rp1a3Keuj0Z
1q24Pi5zxdr0Ownp88ahq9GI7xX0kXX9YgW6yTtvXD/s19Tr52uO4ZIlS/o+
sbr2e+Q5wQ+gnreuNkdaN10m3etL5pnDhw+P8nOXraunYpLrBELyOwE5rxjz
6+Sc83RRpa6eSii5TnItsGczIZTzqkL6viw2367ce+sQaw4DPnu1poGqiy4i
8wXqGheBe0fXdFFUVxCxrKhFhrVcXm8m1Cm0EffqA2pd19iALnSfK9aiUksu
a+0eCojvU+fBKrXEdYgusPYihBBT6HMiofP+/ftRe1DcB33Kr3EFbJq6eCz4
g2C7S+f94Lo1lfej2oRs9OBqkqw8L7E96vYqMdlxdPYbHPBD6fJ+XPXGcuF3
EuBfSdfRQP3JrP0sjosXL7Y+zjbJ0o18Pv8/e+8SasXR7v+f8ztvchJ91ddL
ogkabxgxwSsqiqKiKCjKe5CgiCgYAgoGgohgQFAQJCAIBgLCRhAEERwIQgY6
CGRwIAPBgWQgOMjAgeDAgYMMzmD9+Xb+z0rt3n2p7q7qeqr6+4FG3Xu5Vq3u
b1dXPVepsRlaN7agDoWMta6GlS3o023qBntc5AdCN2b+15B0U0ReK0VH27p6
gqx1bebv2PxOH3/8cfbzWGNjypgxY0atLtrW1RNEF7a+nJA09SOJLpYtW+Z5
ZP1S9syVOZZUI7pILYehyIY8ZF009SNJjNCuXbs8jqp/qp4fpk8S6zX0MpK6
y/kjpt5MLhE7wc2bN0MPxSl1awscsdbVA/CZyvfwsTYUXaC2DSGE1GH6nIZo
6yBpYfaHd2GPiBnYNW3WVLKWdlkr7e3bt+P39tF7ywdFfa3q9iqa7JFtsbHr
yRG6zlxIv5OQ99XWHanWbyzblxcdsHHFgvkMcRUXCKCbKpvYUHRTBHy6dedj
2rRpnedbeS+bGiOx+Z2QV9jUJ6EdG124iAGJ5bxJPibWKbakqIuyeCqu/e0R
XSC3NxXK4sTMY0g5xTJfoH6eLagNh/+Tko9OaqjW7YGLfo7YIMQhnj9/PvTX
CArisHA+sO5PBZtYp5jrm5j2DPiffCC6qMsbJIQQ+pzCk2JNlNAgP8Os14P1
M+rkDQ1b2zhyNlwj67kYfTOPHj2qjKU1j9jnTRu7Hg70Tnv48GHo4arwOwn5
2pRlB+af2O6BOmzsfqIb9BeIDfGp4TniGsy3Q9VNGaiNa3NOupyPJrlOIDa/
E5Ce0anEqtvYhbreJ6KLGPwU8p2b1pFLTRdFdRfzR4xrz74RXaTSh8ZGFyn3
Ossj37mpnQG+SPy/S5cueRpZv5TllZfNG19++WUy94RL5By5qMGvAZs4sBjW
BXkQL/f++++Pv4PvPrpt5xlCyHCgz0kHqGNF/HDnzp1JvhfsN1CPbyjYrrFd
782Rby3vH2utQ9tcMW02yabY2PVwaMm90OR3AjZ2jq72co3Y6qZLH56QSC9u
HPfv33f+/ra5Yqnppow+7iN5D9t+yjH6ncxYdU1jbkufutB+vrZv356NE76C
pmOlLkgRogtoKgVs7Mgp5XdVIfMF6hk05dixY9n/he06BWzmCuZr1CN5Y6h7
kQK2e/yYwPpW5kHYv5DX6hvRBfaFhBCShz4n/7x+/Tqb8zH/Vx3cG/kH8Srm
OkLqviFmP79P8RHfHgqbNZUP/Uls2ZIlS5y+b58cPnzYek0a8/1ra7/R5ufR
Mh7beyxW/0sZsemmDVKjBnYq1/d4qLlZKzbzbRebedNcJxCj3wlIrDrqOsaO
TR5cl9gZ0cWKFSscj9w9slZtW/cnJV3Y1M3Sdt9qRXTRh33SN8x3+huZL9r2
XZHzFWO+eh4bXcSY1xICOV8pYJMHF1NsuFmHAmtd9Kvti5R0QQhxB31O/YH+
nFjT48+iA/0KhmRbCgnWzvne7j7sW5qwsWu6znc6dOjQ+L1R7zBmbM5f1z73
obGx32jym2jzOw017to23ynm7409m3wP1DB3iVkDI9Xz1wSb/NIu97y8h22u
E4jV73T06NHs99CYpnG3oS9daD9P2KthnF184KILrIO1f986bHQBGxypR3Qx
f/780EPpjE3d6OPHj4cepndkvsC93hbUmsN7zJ492+HIwmBTF7pp7dKhMmfO
nOx8ffHFF6GH0hmbfnCx6GLDhg3jMS9fvrz3zxddbNy4sffPJoTohD6nfkGN
sa+//rryNTHFUqSAbR5L7P4EYFPLyaX+3r59O35fySmLGRudaKk/1xbb/k5a
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
g2dGDL1LuhJTrpPUJF28eHFvn5mCLjh/ukd0gec2NAFtxKYLl5i1rxB/pwHk
YGE8qAnYFydOnBj7bUQXP/30U2+f7wL6ndxj9nyOVRdV+Mx5Qh1Pee8+n/19
ILrAcwSxLVhXp6QLQoYAfU7DAzHYcs1hfybdEBvo5cuXQw+lFSHqrpvrStQp
TAGzBhhywsvQYoPEuTdz9NCbzLSTi/0FsVmpXCMT+p3aYeYpYoyIp8v7oPBv
3A9tsLkudbUsQ4J9snku8H1sxojrLNf84MGDrT9fq25iwXWuE9Ay5+dpOwci
dz7vc5b5AD2gU0R0EUMuD9b1IXxkKeiC86d7ynSBtQN+N0QQ9yXn4dixY0HH
Ys4XfVKli1ig38k98CUU6QJrslSQnCdXsXPYo5u1vEPPKT4o00UMazJCCH1O
Q+a9997LrvvatWtDDyVqtPZ2gl9n586dtQd8Tn3Xq3r16tX4nJ05c6a3z/WN
rCMRZ1x1PrXYIE2/k6lj5GVIXj7s5UuXLk2ynhL9Tu1AniyeG/naDegDjFhZ
1JfEuKdNm9Zq7LbXReL5tfSxl1xHOTCupvkyZ8+eHf//P/74o9U4tOomFlzn
OgEtc36etnNgUa6jeWj6jq6IKVYLufc2axHXSAxWzLrg/OmeKk0M2Wa/d+/e
8XkIucaW+aLv2hNVuojF9zR0DbumzBeZmu/JZc4T8knNZ6+WHEqX1OmCvidC
dEOf07DZv39/du2r6oGReqSOrrbeTqiTVvWMDmkPmDt37nhfoemcdeHSpUvj
c1mX26DFBmn6ndatW1epY9TgSOVaCfQ7taMsDwT2WHmeoFcAxo86Kk2xvS5m
fmHIet8HDhyYYi958OBB6/cTmz7myTZo1U0M+Mh1Alrm/Dxt5kCzd0DZUVdT
MjZEF7F8L7kOjx496u0zReNVB3JBtcP50y0rV66s1cWQew1fu3ZtfB6wbwuB
K/t3E9Ajr04XMdRipN/JLTa6SKW2msSqbty4sfV7mPMH9l/wQaWI9GWoOoaa
O0uIduhzImZ+A2yEpB2IscA51NbbCX17sAY5cuRI1rO17ID/sc98J7NG12+/
/dbLZ/aB2CqQ61GHFhskxix+AtjKMaayWpHIj3QZ/68B+p3agfV/UZ9a6Nqc
S1BXqc3c0uS67NixY7zv7/s8ofeZXCPx2d68ebPz+5o9UiYmJhr/f626iQE5
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
+E5mnBqO2PodatKNNtAjRr5/19pcLkC/HOSPYDzIOTcP815zbQsfukZ8rXlx
/iRP0tyXdNVaKJ3k0aqbfF5Zm/ygV69ejf//mTNnPI20HHMvi6Nr/zctmvGF
7O/hN4PdFzV+cN3xc4DY79C2e6DR7wRtmXHsscXWVBGLLsqQeSxE/0d8JvRg
zkOp7O3KdHH58uXs96KLtuTr7j148MDRyMOD3oF5XWjIC3aBb134rrsn8wV6
pfjEXDfI3h+6MH1SOPrsm+QT37pIte4ecmNFF6Y2OF/Y0aTuXkw5T2W6IIQ0
oyifGLVlzFxa7TUdukDfkz+0aAtrTHNdmbeppoLEuxcdMdlltOhGG7AzyXrn
4MGDoYczif3792f5IajDIPishTV0jfjwO23ZsmWKb971XrJvneTRrhv4lc09
DfaGTeIGUCdJ7AB//vmnx5H+zbZt2ybpBtfSpU88tGba8OjRo2zcVWD8+dq/
8LXh3j516pQa/4ImvxP2/jGv5VLSRRGw2cr16HN8VboI4f9qShNdmBTpoisp
1d2jLtzowlfdPZkv+qpVZebpUBfddZFa3b0qWxHWQdrRogvMu6YuqmyrkvOE
uuNaqdJFivHrhPTJ+fPnJ8UwxJYr0Qb6nvohhLaq9h1ywN4aO2IbqjpQbyBG
fOnm9evXo9WrV0dzXpYuXZqdA8RtarQ5PX78OLNZnDx5Mvt3n7Zhn3OLRp24
9DudOHFikq8D+4WLFy86GGUxIXWSR6tu8j7AJjlnEj/cpV+UDXkfmQ8/paBJ
MzZInlZVzgDq+qC2UNFcjmuHnDsN/gVNfiezxmLRod3ulZIuihCfxZw5c3r9
XNPGVXRoj7tqoosiTF24IJW6e/lclthshqKLqudqn7pwXXdP5os+4+jwjKjb
K2u3A2nThZnrHvN8UacL7X0CtekC9czl3JXV3dOe82RjQ9SuC0K0sm7duvF9
hPUAfOBDgb4nv4TS1qefflr7zNC6h2+CzXfUYDdqSlfdIJcBdZnFnp6PWZL9
tfbzYvY2nZiYCD2cSlasWJGtN1HTrA/bsIu5JTaduPA75Wu7wUbTtrdQG/rW
SZ4YdJN/fq1atar2/9y+fXv8eh+1QRCj3LUmYFtCa8YW1KzavHlz5WtQ2xHn
Dv67IvD/Ncw5WvxONvt/DeeripR0kef58+fja4B5sS/wHKvTBJ5t2s6XSRNd
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
E12cOnUq9lCc4FMXLuvuafc7iS7G4HvtS1XuG2rLmDYS1Crsi22+044dO4ac
BlGIb23ZIu/11VdfTb7H3k568a0b+LBD1BTpi3b7CfYHsWMAfGsE59e0DzL3
42XfS67AxmXGLiH/q66+Ij5f+Jxpg7oJT1k3TeesVTc+OHjwYHE9sFeHLrE+
gU1WYmHElh77OaDJvwDMftY4sFfWarPqA3XRj3JcEZ5POepiy5YtjbroS7nu
nuvayWLTQl2mkOCZ/NZbb82wOTT1z0kJ37roWndPfq/8jNfmd6rTBXo85YBv
Xbiqu6fN7wRdyJioi+7kWncPuoCPtayLXPCtC1d197T5nTDvldeeGvvAaebc
uXPTrt3QPAnb/gc5x7WG4vnz50W9aq3X0rW2bEFNJbyn9JRP1R/TFYnrw7Mj
5fOMpZtYaPc72YJYglDxBDE0ghwZ6WkuB3qb+6gXGhM8w80ag7i+Lnugh9RJ
GerGH2XdNPkpuxJTMzbcu3dvat++fY2/g5pxVXV+kfuF2o30L8ykqeZrCjWT
qQs/NOli/vz5UcdmQxddlCnrYiimzdVVPQD0v8DrIb4jJE32BzxztaNJF1Kz
HkdTfTXJeUKMu4kmvxNiW+p0EaNueFc06WJo3T1Nfifqwo0ucqu7V1XPQg4N
um1Diy5c1N3T5Hdq6s0wlvjJoWzatGlyzbDGePnypZPXNZ9LVYe2/iqaQWz2
woULJ2v48pwn8dTarqcvbdlg1ufFdRlbbyfEL6RKTN3EIiW/E/p4P3jwoPKA
/nBgvYKvfRFbI4ibLcfH7d69O+gYfIC1ajm+a+PGjb1eS4NOylA3fijrpq+f
UqNmbJk1a1Zx7k19ZbEvqZvnP//880kfrNjPAU3+BdOPWXVorJtrQl34oa1H
XKx6wLZ00UUVpi5c4LKOFkDsG17LrNsTgiZNpGAbEl001eQNqQvbunvyO2bO
kya/U5suNNfDAKnqogotfqe2PsbURXekdiWOVOvu2egidv2XNrTpYkjdPS1+
pxx0EZNyb4P169c7f4+q3ipjsP27RmqMIE8Rnz/ME6ilDBsNuHLlioo9qRBC
WzaIj3316tWTPu+59naSWk9yzVPMD9Kimxik5HeCttqevXK4Ph9tGoG93XzO
wRaG/nKpgVg1WWPKYfbi6UNMnZShbvxQpZu+fkqgSTNdQW2irVu3tv4e9l+I
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
hnnz5vkYanDKusDcoT3PyUT6KLz++utRxyF9offs2RN1HK7AWkJqaOLAGjIl
XWhBdLF79+7YQ3FCnS5gf5DvoeeZLWPMdRIk58lVrgUZJ/Q7NYO5ZeHChVMf
ffRR5YH5CvaRvtfuxYsXxfpR5r9z5845PoN8qbNLyZGDndjGronr8PLly9hD
VYnN9Us9rpZ19obBOnvjOm9XsM5eMxJ/b/oHsN4xbcxtcefwK8G/BD+TuU4q
P/+wl8T+kn6o8SC5Tl1i/3NBtP/999/HHoozZL4Y63zpAtEFmUlKuU7Sr6sq
fvKnn36afFbwL75uIrccBkHOP0U05CaiP4Ssn3IiZV1oQHQxhmuI+s4yN86Z
M8fqb3KcS7sg54/nCiF9oN+pGeQ8tcVknjhxotdrm+tHHDdv3uz1OmPE7INV
d2Cfkbqmbc5TjlziU1zy5ptvtl63MfgnER+o5bOgze9k008g15rGbeeN2Dct
utGGjW5S92kPwbQjyzyMenlgxYoVk2uEOP0uIN4Zr2P6r8p+KMwxWNuijt9Y
OHXq1Iy94LVr1wr/8vnz5yONyg/o/TVmvy76L9jOz6nogn6n4Ygu1q1b1/q7
qejCBSnlOkmcRpvd14zDaMsPFB99W03TlDSRsm38ww8/nNjdYiJ5IPh8NEFd
jAvRRdu9TUkXdZh2WOwdmmrIST3HMdV1LmOT85SDLog/6HeKA+IUZc2IOa9v
f7uxghx1G19MDpo2c4TLB/aZZs0BPDcvXLgQe8iqaNJHLvUY23poavocaPM7
gaZ+Ajn4r+tISTcaaYoLyKUOVl9MO/KDBw8m10V6Ox07dmzyvSG1oeCDwH2A
Dd6M4zHXV/gZfge/myvI+zHnKtMvh2uAtUEudWekFswYc50EubdPnz5t/D0b
XVTVvAwN/U5ukHvbhuhCMPdUmnThgpRynSRGY9euXa2/i3gouWfo/1QHYlpt
dJGSJlL2L2ANJNf12bNn0caB/S/GgPy6JqiLcSG6aKvlmZIu2hDfPI7vvvuu
8ndsn625I9ehLucpJ10Q99Dv5A/s8cs+A/gITHsLPptjyFdE3PGdO3eKmjmw
daLGMeKcEbeMGALEPy9YsKCwJ2BfjOuEa4f5CfNUlT1pLH4nUGffFHvdxYsX
p9UdxPW7e/du5FHrodx3FJ+7HPKcTKrmG9Sf0oZGvxNAzGi519MY8lVS0Y1W
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
efDgQTEOqRkYyr8ATF2kXl/NBaILMzcsFjF1IfNmiroo94qU9RjWGn3nWNGF
TR4l+SO3F3VzYC/FfIy5mPukeuh3siektrDXk3gdzfcFsZBmPTPkhZfXmWNn
iG5i+U2wz5fXxzM5VWyuX5+ela4ZohGbel+a/Cba/E629Rg1zsNDdGObJ6fx
vDVg5vymcv0wryOuEPe+Lk8IeZHaxl2FhpwnQXI+cGA+Sa33JdZsuegiBrCZ
SLwp/n38+LGT15W+jbFqHmvTBer7yeesb4+YkEAXMt6qemOpgvkN9SO/+eab
2t/BWmQsvSFkLbVhw4ao45A1CWpfxkCbLiR+EkcKdffM3m9YR9iAHl7y3KlD
nk1fffWVq6EOZtWqVZPnWyj/gmDqIuX6akMRXaCGkRZi6QK1fVCbNCVdmPMF
rptg2jT6xD+JLmx6RI+dR48eTcs1kwPfq8tTHTv0O9kRWlsvX76cvAfeWzuo
MWNel1Rrl7tmqG5sajn5st8j107iP1KdG2zswrHrzw3VSFPP9vLruaj7MxQt
fiesM81chaZDo/9/bLrRQhfdaM2lhM+myVcDe2kKaMl5Ama/tFTr++Sii5Cg
/p35eXdVc9qM/Yk9h2jSxdmzZ5P4nF26dGkyzoULF8YeDvEEfC0a4h8QVybj
IK9Ipe6e2futq/9S7OVVtX6PHz8+2cdr4/Lly0WOxo0bN4K/99jr7oku4IPT
RkxdpFJ3r61XpOQs4ajq6VuH6AJ9t0g7Ugcbsb/I1UMcwJEjR4o1n0a7kQbo
d7Ijhrakp2QquY5Yf5v2OFyzsdsphuqmrUeRb7um2LVjxdsOpc22riHXycXc
0pa7IrnXOBB3G9PXpsHv9P7778/wrTRdPy25YiZj040GctBNTmjKeQL4DJqa
iLFvJuHAvOtrLSE941esWOH0dXMAeVjms0lbHS1TF031r0j6wEegwbcIGynG
kUJeT2i0190za17D7tsV6YGHPUEZqfEZKwdOM2Ouuye6uHXrVuyhqKNcd0/b
Ps62VyRytrr60EQXzNVpB/VmsN+rq/GFeMjbt28HHpV+6HdqJ5a2JIcyVm33
vmAeNG0vqAM1RlzpBmshc48d0mdi9nROtZ9zne9Jgy5dzi04n6rzlBg47GfM
zyVysV3VA+pCTL8TnnfmNTB9KahxXb52WvsxhNCNXBctuolJWTfmNUhJN67B
vr1qfwJ/5rJly4KMQVPOE4D/y6zBePTo0dhDCo4GXfjG/Nz7sOnJa6e09m/D
tS7EN4dDS909M5YDuXCknZTnC7nXMftYmTlXz549izYO17jWhVl/Sot/zuxb
12RDbkNsBKYf4fr165PXzgmfukihvtpQRBc51X4FLnVRrrvXxx/sg669ImEH
kHPA3zYhuqjyX5OZIK9i/vz5tT9fv3598BqiKUC/UzsxtSXzRVO9ZK0gTtO0
744t98m1buB/wucVR0ikFjLyKlKeI+B/wrVDPSQt+JhbcH44T5xvFeWcDdhu
QvYjieF3Mvufy5qtrnacXD/NsW9j1E0MyrppyvmSuVmzblyB54BpL8HnydyX
hez5oi3nSTDXP6nkrA9Fky58UfYrou6ba7Zv357Fmkuw1UUfNNXdkxxkxgvb
UaWLTz/9dPLzIboIwf79+4vxxa5VtWnTpokdJwd86gL7Dg3zhdn7zUWckuRY
oj6ZgP9r8rENJZQuNNdXc4Ho4vz587GH4gSfunjvvfdU6GJor0jz+qAuQxWi
C235oJrBvUAccBnJmdPUO00L9DvZEUtbsC2mvJ5E/IFpt9MSkxyKHOYks88A
xj0GEKcaKlY1hkaqetSEyv8K6Xe6d+/eNBshjt27dzt7/ZA6KTM23YSkrBuX
Pa5iasYVBw8eLK4LaqHj+YB+1ehFCN8kkF7XodaU2nKeBNRVFw1J7x+zRgZ0
ldPnR5suXIOcBjPv8bvvvnPyuvCdmjHXcmAeygHRBXoONOmiL+W6e4gXCImp
C4zDVT/usi7wHqHjznziWxe+Ec0hTjwk0AXWf+X5os6emBq+dXH37t1p83ho
O6vZ+81lzklZD3LkQkhd5FR3D7GEpt9BniW54FsXeD25bjF0Yc4XTfGmbYg9
GQfiTHHkrIsQoO4Brhnq7CLeV+L0c4obcw39TnbE0hb2tfI+Kd8fM1Ye8/bN
mzdjDykIucxJW7dundy7VMY8hLlz5xZHCGJqxKd9vY4Qfqcq/4iP/JyQOikz
Nt2EIIRfLaZmbMC9RexsExh/VW9BXCv4fkL7F7TmPIErV67U2oNM25P252qK
unAJaiDJ/XIZJ9/Ug9J3/04XdNFFmbIuhoJaOnLtQtXdM+8ffESugE2oThcu
38cXmnThA6lB3la7yDVNukghr1aTLmbPnj25dqFygszeb1hruqJJF9ricarQ
qovU6+7V1VH3sbfxgRZdIJbEzGcOpQvXvSLNWLi6I6fYFt9gfW768+SAJnOv
B9MX8TthHat9fxOTmNqS+Av48jXVCOvKw4cPp83b6E9Ude1wjnW1nlIjpzlJ
dLhjx47YQ3GCrEVsDp9zowaNdKknNhTffqdyPbih/Yi06KTM2HTjG5d1BLVq
xgaptdBUJwrP6Lq+k59//vnEdxfy3LTmPAHkQ7TpQLsNIFVduAA14cznicv5
dUy6qMLUhQtC1t0zdbFhwwanr526bUh0gRyCOkLqwjXS+0P6p4bAjK+oO7Tb
CLTpImTdPdMv7sKGLNjoQrtNRbMuUq27Z6ML7Tld2nSBXP5QujDnC5c1Mkxf
Vqq6iMXLly8rv4/6MidOnCj8kU+fPg08qjSApkx7kRwxer1rRJO2/v73v8+4
T/Dtp9q3HOstOQ88KxAPDD2W62GlsOcuo0k3rpH4PhypnkOZbdu2FeeDWDfY
DeTA/gMH1hg4XKJZIx9//PG0z99Qn00VvvxO5bHDx+3KBxJDJ2XGrhtf+Bq7
Bs30AbVxkd/aBnLq4Juryi+6fPlycP+C5pwnm/2/dn9MqroYCvyYcn/Wrl3r
9LWbYtTHqAtXlOvu+aijhblcXt91z/FDhw61akJ7PRxbXSC3IJQuXCFxJaHv
gY0uquL+NaFRFyHq7pkxt6dOnXL62uvWrWvVhfZeDdp1kWLdvaVLl1IXU+51
YdrCfOnCZ69Is9Z33aExfk8Db775pur1uFba9sDUmx5tYRxN9ypV3xNspVX+
tLp1tIZ7YYMW3fhCanmlVCOwjdu3bxcxNWZ/cJ+1sLRrBLHcK1asmPYZdFmj
zrXfqZxzg/9fuHDByWubhNZJmbHrxjUhcrVia8Y3jx49KvKYq8B+MTRac55s
7IXa/Qtd0KaLPqB3ntlbx0cdURt7IXXRH9Pu5rKOlrkv85Hfu2jRIitd5EJq
84Xc/127dgV9Xxt7IXXx/9q7d1A5yj4OwIUXgoqgEkEwIBELBa9oEQJRFAXF
wkIUEQVFUFAQC8FCUBAkEBAshEAQBCHYpbLQzs5CsLCys0hhZ2GR8nz89mOO
k8nM7uye3Zl3dp4HhuScs8mZ3f3tXN7L/91c7mu3fbxorgm4izUG6nXh5GK3
uZhS3b22uQXNbeg6obs0ZC4yL7K+NtK2crGrtSLr6sejqfZHjiWvXe7pc37I
+gartmSSg2vWEWvbplorZ1tKyFafsZBT6pNp8/LLL/e6XprKPLxd5Cb9xGkD
qcv65Jnjm1qtQ8q5tnpPzp07N+jv3qV8htJGnnnN+fsu24Z3dWzZdk7a1rp5
6KGH1v5/mrbV79RcYyjb008/feT9W2bInDTNPTfbMvTaVGNmpo/MDXjllVcO
Tp8+ffD111+PvTtHUuqcpynOa9mnXKwr9/r1+6TMyd+FKfZHTi0XaQ+qt7Ed
ZU5wclG15eW8kTaibci65emDbKv5MJV25KnlYlP1e6ChP5d95i+UNg9uarnY
Zt29+tpveV+2VY9gk+NFaf0LU85FqXX33n///YMTJ04sxtD1zUVp/QtTy0V9
PvxRc1E/XmSM97bkGij3n1PORSlyHM9ctLzX+aw1t3qfXsYDlDrudmh9Mpe1
d+ashGz1HdtU0j3pJvo8x6n0r20zN2mrqo9XSR7qbWlVbfmhX5fMec7vzb5N
4T1ZR2roZh5e8rbLfqdtHlt2nZNtt9Mftd+prV9j6Hk1Q+Skae65Oaqx+8PG
yMwqTzzxxDXn2tybTK2eSF2pc576tBeWcj7dx1z0lfHo9fckNbV2pU/9xbQX
ysXRNOvKb1JHK7Vuqn+f8/Cm0lf1wgsvLM4BXePRpzYeuSsXU6m1u45qTnf+
HFqf8Qt33XXX4PvVZaq52Ebdvfrab7nu21Sf40WfeS1ycXQl1d376aefFmtt
Z+5l1/miz3mkpOvkqeZiG3X36seLo7wnyUXa6NJvdZRclL5O4Fi6aj2lvaVe
H+Hxxx8fYe/K1HfcZT7rpdzrjKGEbPV5n7JN/X3ap+e5zdxU15JpU8+42Fx3
pg2imseQMbhjvS7VeSvXPfsm7dO33377Yt2XXdj2sWWonGyrLtmm/U55fepj
i7KNuY7QrnPSNPfcbKotN3fcccfi/Rva0JlZpqp5nvcmfZmvvfbaIjuZU5d2
1Smcb9uUOucpa1Uuu74ppcbAvuaij/QNV+9Hnmvmfe7aqjkMpdTS3odcZDxl
9bquU0ernot122/zuuX8c+ONN3a+x2mXzhiI+jGgfk5v20rp61uVi31Tvf6X
L18e5fevmuNSin3IRX3s7zrHi/rab+u2Ia86XuTeO23KuZ5IG3NlVd9TKfYt
F0PV3Uvbbe7V6uv+NHOR/XruuecWc4Yqy/oYSpobOfVcHKXuXv14kXvxdWRt
51xDds1lqnKR2iX1XCw7VpSUi9K0zX9Nm0n9+Pvxxx+PsGfl6ru+cXI6hfuI
XSkhW8eOHev1Xk39ferzHEsa87nMtnKTtoY89u23377q+9UcgosXL47a7/TV
V18dPp9t1Q6Yi20eW8bISdrM65/Ndft+Nul3av7OPLeMPZuTuedmG78z7Xtz
y02XfA7PnDnT+rP77rtvp/M8dq06xuT9zt/TjpMaFmNLm3Xb9c0HH3ww9q4d
2udcRO6B0mbXzEV9rG36pYckF8PpqrvXlYs85+rxzz///NL/O3MT0u63bG5C
fmfVrrZq7YauvqcSjmWVjIfZh1x0yWudPCQX1To6Y89Xlovh5HNa/+xW1+H1
XOS4UfUD19cCWtWG3Od4kfbktCuvasfO72/rk0wbcil91LGPuajXV+vKxTrS
n5jXaNlcpvRLpi804/qWac71lYvdyr625SL9hquOF2fPnl36f2eNqqovbhu5
aPs/cgwpKRelq49JyuvZtb7YHGScXvpQ28bK9Wnnn8p6OkMZI1t91hwuqTbL
pvrMEZ9q3cej5Cb/pm0N0ny2c52a69Wx+p2iOl92zcOgn6MeW8bISeaQVPVG
6p/RPnNI1ul3as6Vyd8/+eSTbTyFyZtbbtYx9hyrKcg9bdd7+/DDDy9qxU9V
va24vqW9buxzVdolXnrppUVfQ/4szT7nomvOWf1YMVZ9jOQi+1dyLrpMLRfN
trisfbAqF5999tk1/0/q66SNZ9nchPR9P/roowcXLlzYaF/lYjzNedLVlnvz
sVW5yD7KxW7l2rreRtvV71d/zKbHi7a5TOtI+3aVixJrZe1rLnKuyLG+7X1d
9fnMvVzui5bNZUo7S9Yvrs9ZWUfV7yEXu9esu7fsfa3+bGurf/PNNxf3x/V5
VG25yPjKTfuKqlzkmFFiLkr2yCOPHL4XOW7/888/Y+/SzmWs8/Hjxw+z3Ty2
VWN9m/eQedy+92Vs05jZWtUfU9J4yE3V19Lr2qaYx6PmJvfCuY5pe+75XtXv
M9ZrU19f99y5c6Psw9Rt49gyZk4yXq95D7ZqzZw+/U7NtYGy5Zqb/5tjbvoo
bU2pkuV+pm0Mbfrs8todZT3tMa26npjSGJbMK37yyScH/Z37mos+NcancqyQ
i+248847V2YiW9qAc85KrZpcv3SNNU77UF6nrNUwhhJzsWpOV6lW1UUtsa+n
i1xsR2okb/N4kfFQuQ5/9913R3k+crEdfXJRzUVMv9FTTz21mDvZlYv0U9xz
zz2L/qgxyMXRNevudW15THz77beL8SnbmMu0C2NkolTNtQ0eeOCBsXdpMNWY
ieS2OrflWHblypXFz5fVyekax9PV7zpHJWRrWV3EXBfvi2V9oVMbp77N3OS6
dVl96KHrwTRl/cLquJH3Ke/jlO7HxrLtY8vYOck1db2+8LL2/mrsT1s/Q+7V
6rWzs6WmdV4v5p2b6tjSVkumLTfb6MfaZ3nNqraPvHb1MXn1+hBT02f+dGnX
uLlmT99xczt9+vTifck6VUONd9rXXPRZS7m08U1ysXt92pG77pUz5iP1GVP/
ZkirclF9PYQ556I0crF7Rzle5Nr9KHOZNiUXu3eUXGSuT+boy8V+5aLPmPpl
uajmMm06x20TJWWiRM21Dd57773Ox548eXLAPdu9P/74Y/Gcm30PaUfKGObc
j6xanyGficzdz2c8mzl2/yktW1Xd8Vy3pJ1wH+tv5jnluWW8elUDdWpKy80Q
utpzpjSufEj7nJGM863noV7frGsNi/y8rf5ajgG5FuX/5KZfbtJXtu26ffsq
Y+yaY/Luv//+sXfrSPrc05VWR7rvvIuh+kXmmovS6gfIxe71bQeq1llprok4
hr65GEpbLqY8BrjvOtilkYvd6jNntn68GHMuU51c7FbW8VonFxlLWcK1hlzs
1jq5SJ9O7tvHXkegtEyUpt4Gk/lfOb43t9RHfOyxxwa9Nh9C+pXynNrW5T5/
/vxi3lPWGN+35z2UOWeLzc0tN6vuz0pYT6M0c8hIVeO12vqMNa+29DtfunRp
7KdQHLmRm6PqGqeWrFy+fHngvdmNPlkprd8psh5xrtuz5toPP/yw2HLPnfvw
5Do1JHch733uJ7p+Jhfjkovd6du/UOKYzCoXmWvVzEUyIReb6ztOvcTxn3Kx
O33bkUskF7sjF+ubQy5OnTo1yVyMlYkpSJtE2mKOHTvWuaUtouo/nWI7zDJ5
fhlP0SbXQ9U6B/v2vIcw92yxmbnlpk/92hLbcsY0l4y0zUVZtuU1GXusT8nk
Rm6OKvXD912fzJRau/fs2bOLsRoXLlxYfJ3+5YyD3OVnOfMop1rHZB19clHq
MVMudmeK7UKVKhcZJx5VLnZJLuSijVzIRZs55GKq8yMrcrEbfedHlmiMTExB
amL2Xfch7TGl3lNs6u+//17UlOlanyHrmqVNZt+e9xDmni02M7fc9Dmnpl7a
1J/nNs0tI8ePH590m18p5pabPF+52a5cD6YO82233bZYC7m55fvVz3JfOEXL
1orMlv7bkjOTMaC5H3/88ccH61/I67LvuUjd5mW5KP2YKRe7kdp5y3KRtpeS
teVil+aSi/o6mm1b6v+WTC52oxrP3bWVvj6AXOxGfZ1auVhtLrlYVbOj5PXQ
h87EFKyzlmdqFMxR1ghjfbLFJuaUm761KEpv5xvanDISmYfTJyfmxS03t9z0
rbFX6tyVEqXNJHOecq+T2iD17cYbbzx8TadcUz2WtRn+8ssvY+9eLy+//PKi
n3Co/oVHHnlk73OxrM1QLq42p1x0zdvPOWgq6rnYpSoXcziPdF2DJC9TIRfb
tWxuS84vUyEX27UsF6WPXaiTi+1alovMG5mCoTIBAMv0aRc232ne8v73yYmM
UCc32/f6669f872s+ZQxh9XrWcI62NuQe9lqDGraD0sfn97mr7/+Ovjtt992
+juyRuzp06ev+f4+56LqZ0guuupFlEwuti/j0atc5M/Sx6e3KSkX77333k73
Yyhy0c/ccpHzRtUvmVyUPG+hi1xsX64zq1zk+lMu2s05F+mfLnHNyGWGyARQ
rtRYfPDBByczRpP9lDEQ5rGwTN8ax/oPqFtVL61qN5abzf3444+H90L589Kl
S2PvEgWQC9o0czHn9aX5j1zQRi5oIxe0kQuA8WQearU2Str3m+Mmnnnmmb1s
r814hyeeeOLgtddeW3z95ZdfXlXvYIrjzfbVqlp72oWJVbX2Pvjgg7F3kQKt
qpmuxt7m3n///avqw2QsC8gFbeSCNs1cZE0IkAvayAVt5AJgXFV908zhTs2h
tOHfeuuth2t2pT9mH/ud6nNo6vNtH3rooYOPPvposc5g1rijDF3zEnLtYD4e
la61NcyHo0tqY8vN9qVeevU6njx5cuzdoRByQRu5oE09F/fee+/Yu0Mh5II2
ckEbuQAY1x9//NE6t+fZZ59d9MVkLMA+9jtlnm2e03fffbf4OuvZtbUx3nzz
zXv1vKcu7cPpf0r/aOpeT612LcNILpKP5CR5SW5gFbnZjn///feqsRxt6z2F
eWTz0qypLxdEMxdvvPFG6+PkYl7kgjZyQRu5oI1cAJQh/Uo5Dmftvabz588v
5j19/PHHe9fvlLXrmrXZUqMr36/LuUqdDwDo56abbjqsf/r99993Pi5zrffp
uoJuuY6q19SXC0IuaNPMxcWLFzsfm1wwD3JBG7mgjVwAlCX9LXfffXfrz+r1
h/btfi99Sp9++unh15n7VXf58uXF8/7999+H3jW24MUXXzy44447Fmt4qeFL
FzlhE3LTrX6f17VVYw/36boi43dy3cC1so5ofT1GuSDkQi7arJuLfSIX3eRC
LtrIhVy0mWsuZAIoVcYDpP0s9YXa/Pnnn4u1kPbpfq+StsOff/659WepL3jD
DTfs5fPeN6kTWV1XZH7e7bfffngdkezm+13vM/MhJ2xCbtZz/PjxlY/JPdFU
ryuyz6dPnz645ZZbDj7//PNF3d5cK1SZSH1efZFXy/1/n+spuZiXuebi+uuv
vyoXqQXEf6pcrFLlYorkYn1yIRdt5EIu2ux7LmQC2EdXrlwZexegVc67Ob9m
3t6pU6cO23lS66lqo8hcttSMnGKbBdshJ2xCbtZ34cKFXo/rqrNeuqz9lQxk
Lnh9vOTbb7+9uFZ69dVXD06cODH2bhYl45dyX9yHXMzHnHPxzjvvyEUHuZCL
NnIhF23kQi7a7HsuZAIAhpP1AOr1V7Kmfb5urhOQOQrMl5ywCbmhKWML77rr
rsOv0xfZvLfLHHLmRS5o08xFxiPLBRmLLhc0yQVt5IImmQCAYWV+9F9//XX4
9QsvvHDNYzIO5JdffhlytyiMnLAJuaHuzJkzBydPnjz8+ptvvjl46623rnrM
ddddZ23ImZEL2vTNRXONWfabXNBGLmgjFzTJBAAMK+fZrE/WVQ/y3LlzizkK
6kXOm5ywCbmhLvXSM4bw4sWLrT/PWl/JQ+bGMR9yQZu+uXD+mBe5oI1c0EYu
aJIJABhezr+//vpr688yV+GLL74YeI8okZywCbmh6dKlS63f//vvvw8+/PDD
gfeGUsgFbeSCNnJBG7mgjVzQJBMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA7Mr/AMBL5GA=
    "], {{0, 582}, {1694, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> False],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1694, 582},
  PlotRange->{{0, 1694}, {0, 582}}]], "Input",
 CellChangeTimes->{{3.91449010208208*^9, 
  3.914490121419394*^9}},ExpressionUUID->"fdd0b1f6-41a6-479a-bf81-\
a6a764901414"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.911537223867975*^9, 
  3.911537226752385*^9}},ExpressionUUID->"48e2fa51-b439-4351-8669-\
d3bc8c5167af"],

Cell[CellGroupData[{

Cell["CustomGraph", "Subsection",
 CellChangeTimes->{{3.913454860278734*^9, 
  3.913454864030429*^9}},ExpressionUUID->"4c0da1c7-1969-4d83-892b-\
ca07afc01d02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CustomGraph"}]], "Input",
 CellChangeTimes->{{3.914504171464139*^9, 3.914504174105926*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"68674229-28de-4bff-abe1-e3f3e4fcdd3b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CustomGraph[edges_] From a list of edges, create a \
graph using. To make a graph equivalent to a GHZ state, then \
edges={{1,2},{2,3}}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"CustomGraph", "[", "gsl`Private`edges$_", "]"}], 
                    ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gsl`Private`input$22596", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gsl`Private`edges$", "\[LeftDoubleBracket]", 
                    RowBox[{"gsl`Private`i", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "\[UndirectedEdge]", 
                    RowBox[{"gsl`Private`edges$", "\[LeftDoubleBracket]", 
                    RowBox[{"gsl`Private`i", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gsl`Private`i", ",", 
                    RowBox[{"Length", "[", "gsl`Private`edges$", "]"}]}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`out$22596", "=", 
                    RowBox[{"Graph", "[", 
                    
                    RowBox[{"gsl`Private`input$22596", ",", 
                    "gsl`Private`graphstyle"}], "]"}]}], ";", 
                    RowBox[{"Return", "[", "gsl`Private`out$22596", "]"}]}], 
                    ")"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"gsl`CustomGraph\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"CustomGraph[edges_] From a list of edges, create a \
graph using. To make a graph equivalent to a GHZ state, then \
edges={{1,2},{2,3}}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {1., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {2., 6.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "CustomGraph[edges_] From a list of edges, create a graph using. To make \
a graph equivalent to a GHZ state, then edges={{1,2},{2,3}}", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, gsl`CustomGraph, {gsl`CustomGraph[
         Pattern[gsl`Private`edges$, 
          Blank[]]] :> (gsl`Private`input$22596 = Table[
           UndirectedEdge[
            Part[gsl`Private`edges$, gsl`Private`i, 1], 
            Part[gsl`Private`edges$, gsl`Private`i, 2]], {gsl`Private`i, 
            Length[gsl`Private`edges$]}]; 
        gsl`Private`out$22596 = 
         Graph[gsl`Private`input$22596, gsl`Private`graphstyle]; 
        Return[gsl`Private`out$22596])}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "gsl`CustomGraph"|>, 
   False]]], "Output",
 CellChangeTimes->{
  3.91450417504552*^9, 3.914506660901898*^9, {3.914506705556519*^9, 
   3.9145067298262777`*^9}, 3.914507233044894*^9, 3.914603220855727*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"0f23cfba-ff14-4c85-b127-1beca44f6814"]
}, Open  ]],

Cell[TextData[{
 "A more intuitive way of creating a graph in mathematica. This methods \
avoids having to use symbols to define a graph. In the below example we \
create the \[OpenCurlyDoubleQuote]trident\[CloseCurlyDoubleQuote] graph, or \
graph No. 13 [ref]. For use of ",
 StyleBox["CustomGraph", "Input"],
 " see the example below. "
}], "Text",
 CellChangeTimes->{{3.914489871290065*^9, 3.914489930022217*^9}, {
  3.914490138481887*^9, 3.91449014358571*^9}, {3.914490484840019*^9, 
  3.914490493743856*^9}, {3.914490551464779*^9, 3.91449058371735*^9}, {
  3.914507789050683*^9, 
  3.914507800517597*^9}},ExpressionUUID->"1ec9f73d-9b6d-4a0c-9098-\
795fcb9585d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"CustomGraph", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "5"}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.911364819182844*^9, 3.9113648269712257`*^9}, {
   3.911364868368966*^9, 3.911364886664234*^9}, {3.911364980522298*^9, 
   3.911365003834395*^9}, {3.9113699557246933`*^9, 3.911369976590749*^9}, 
   3.911537193662209*^9, {3.911537342064511*^9, 3.911537342356854*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"cee9de4d-0ec6-4e7a-97e7-212e15f6a647"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 4, 3, 6, 5}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {3, 5}, {5, 6}}}, {EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
       ImageSize -> {147, Automatic}, VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], Arrowheads[0.], 
        ArrowBox[{{{0.8660254037844386, 0.4999999999999993}, {
         0.8660254037844389, -0.5000000000000012}}, {{
         0.8660254037844389, -0.5000000000000012}, {
         3.8285686989269494`*^-16, -1.}}, {{3.8285686989269494`*^-16, -1.}, {
         1.8369701987210297`*^-16, 1.}}, {{
         3.8285686989269494`*^-16, -1.}, {-0.8660254037844384, \
-0.4999999999999994}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}, 0.19999999999999987`]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{0.8660254037844386, 0.4999999999999993}, 
          0.19999999999999987], InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8660254037844389, -0.5000000000000012}, 
          0.19999999999999987], InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
         InsetBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
         InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
          0.19999999999999987], InsetBox[
          StyleBox["6",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
          0.19999999999999987], InsetBox[
          StyleBox["5",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{147, Automatic}]], "Output",
 CellChangeTimes->{
  3.9113648871035213`*^9, {3.911364968570467*^9, 3.91136500440884*^9}, {
   3.9113699701583557`*^9, 3.9113699782850027`*^9}, 3.911537196013381*^9, 
   3.911537382335759*^9, {3.911974228427663*^9, 3.91197425309128*^9}, 
   3.913438705838901*^9, 3.913447603221632*^9, 3.914490897474965*^9, 
   3.914491002859784*^9, 3.914506661004225*^9, {3.914506705621683*^9, 
   3.914506730074606*^9}, 3.914506822951723*^9, 3.914506866857629*^9, 
   3.914507235059236*^9, 3.914507328265919*^9, 3.914507802436988*^9, 
   3.914507842081542*^9, 3.91450804157874*^9, 3.914508230464857*^9, 
   3.914561955370497*^9, 3.914562414739026*^9, 3.914562687474059*^9, 
   3.914603222975771*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"f535a148-1cb5-4b69-8e75-bff11035dbfd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["LCQubit", "Subsection",
 CellChangeTimes->{{3.91345486890615*^9, 
  3.913454871092754*^9}},ExpressionUUID->"6b401e88-0549-4ccd-9628-\
7dea6359e2fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "LCQubit"}]], "Input",
 CellChangeTimes->{{3.914504165365492*^9, 3.914504168036547*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"b438da21-30cb-4d94-8817-953b45b06c26"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LCQubit[graph_,vertex_] Performing the local \
complementation operation (LC) onto a selected qubit of a graph state\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"LCQubit", "[", 
                    RowBox[{
                    "gsl`Private`graph$_", ",", "gsl`Private`vertex$_"}], 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gsl`Private`vertexCoordinates$1717", "=", 
                    RowBox[{
                    "GraphEmbedding", "[", "gsl`Private`graph$", "]"}]}], ";", 
                    RowBox[{"gsl`Private`g$1717", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"VertexList", "[", "gsl`Private`graph$", "]"}], 
                    ",", 
                    RowBox[{"EdgeList", "[", "gsl`Private`graph$", "]"}], ",", 
                    RowBox[{
                    "VertexCoordinates", "\[Rule]", 
                    "gsl`Private`vertexCoordinates$1717"}]}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`subGraph$1717", "=", 
                    RowBox[{"Subgraph", "[", 
                    RowBox[{"gsl`Private`graph$", ",", 
                    RowBox[{"AdjacencyList", "[", 
                    RowBox[{
                    "gsl`Private`graph$", ",", "gsl`Private`vertex$"}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`complementGraph$1717", "=", 
                    RowBox[{
                    "GraphComplement", "[", "gsl`Private`subGraph$1717", 
                    "]"}]}], ";", 
                    RowBox[{"gsl`Private`diffGraph$1717", "=", 
                    RowBox[{"GraphDifference", "[", 
                    RowBox[{
                    "gsl`Private`graph$", ",", "gsl`Private`subGraph$1717"}], 
                    "]"}]}], ";", 
                    RowBox[{"gsl`Private`out$1717", "=", 
                    RowBox[{"GraphUnion", "[", 
                    RowBox[{
                    "gsl`Private`diffGraph$1717", ",", 
                    "gsl`Private`complementGraph$1717"}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`out$1717", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    "gsl`Private`out$1717", ",", "gsl`Private`graphstyle", 
                    ",", 
                    RowBox[{
                    "VertexCoordinates", "\[Rule]", 
                    "gsl`Private`vertexCoordinates$1717"}]}], "]"}]}], ";", 
                    RowBox[{"Return", "[", "gsl`Private`out$1717", "]"}], 
                    ";"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"gsl`LCQubit\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LCQubit[graph_,vertex_] Performing the local \
complementation operation (LC) onto a selected qubit of a graph state\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {1., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {2., 6.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "LCQubit[graph_,vertex_] Performing the local complementation operation \
(LC) onto a selected qubit of a graph state", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, gsl`LCQubit, {gsl`LCQubit[
         Pattern[gsl`Private`graph$, 
          Blank[]], 
         Pattern[gsl`Private`vertex$, 
          Blank[]]] :> (
        gsl`Private`vertexCoordinates$1717 = 
         GraphEmbedding[gsl`Private`graph$]; gsl`Private`g$1717 = Graph[
           VertexList[gsl`Private`graph$], 
           EdgeList[gsl`Private`graph$], VertexCoordinates -> 
           gsl`Private`vertexCoordinates$1717]; 
        gsl`Private`subGraph$1717 = Subgraph[gsl`Private`graph$, 
           AdjacencyList[gsl`Private`graph$, gsl`Private`vertex$]]; 
        gsl`Private`complementGraph$1717 = 
         GraphComplement[gsl`Private`subGraph$1717]; 
        gsl`Private`diffGraph$1717 = 
         GraphDifference[gsl`Private`graph$, gsl`Private`subGraph$1717]; 
        gsl`Private`out$1717 = 
         GraphUnion[
          gsl`Private`diffGraph$1717, gsl`Private`complementGraph$1717]; 
        gsl`Private`out$1717 = 
         Graph[gsl`Private`out$1717, gsl`Private`graphstyle, 
           VertexCoordinates -> gsl`Private`vertexCoordinates$1717]; 
        Return[gsl`Private`out$1717]; Null)}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "gsl`LCQubit"|>, 
   False]]], "Output",
 CellChangeTimes->{3.914504168761235*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"04f9a18b-8a65-4237-beaa-cc9d9e7cbcd3"]
}, Open  ]],

Cell[TextData[{
 "This function will apply the local complement operation to the graph you \
have provided it. We defined our inital graph as g, and ",
 StyleBox["LCQubit", "Input"],
 " requires two inputs, one being the starting graph, and the vertex/node you \
want to apply the LC operation on. The function uses Mathematica\
\[CloseCurlyQuote]s built in functions. "
}], "Text",
 CellChangeTimes->{{3.914489866052336*^9, 3.914489868395226*^9}, {
  3.914490153164124*^9, 3.914490180778664*^9}, {3.914490216937591*^9, 
  3.91449029868299*^9}, {3.914490521957247*^9, 
  3.914490522310345*^9}},ExpressionUUID->"8bf889f1-9c0d-4067-bb3b-\
816abd8692fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LC2", "=", 
  RowBox[{"LCQubit", "[", 
   RowBox[{"g", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.910085623151366*^9, 3.910085650942323*^9}, {
   3.910085690779934*^9, 3.910085691670459*^9}, {3.9100858613613653`*^9, 
   3.910085863413321*^9}, 3.910087123374107*^9, {3.910087633203628*^9, 
   3.910087652701609*^9}, {3.910088112873145*^9, 3.910088115952074*^9}, {
   3.9104553441576138`*^9, 3.9104553534141393`*^9}, 3.910455474716082*^9, {
   3.911286700456334*^9, 3.911286700529306*^9}, 3.911537344508836*^9, {
   3.911537391165812*^9, 3.911537430389357*^9}, {3.911974247420438*^9, 
   3.911974258234737*^9}, {3.911974571526108*^9, 3.911974595944927*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"d7321482-77c8-48cd-a15a-a18f5e15351a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {
      Null, {{1, 2}, {1, 4}, {2, 4}, {4, 3}, {4, 6}, {6, 5}}}, {
      EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
       ImageSize -> {146.99479166666538`, Automatic}, 
       VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
        0.8660254037844389, -0.5000000000000012}, {
        3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
        1.}, {-0.8660254037844384, -0.4999999999999994}, {-0.8660254037844389,
         0.5000000000000008}}, VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], 
        LineBox[{{{0.8660254037844386, 0.4999999999999993}, {
         0.8660254037844389, -0.5000000000000012}}, {{0.8660254037844386, 
         0.4999999999999993}, {1.8369701987210297`*^-16, 1.}}, {{
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}}, {{3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
         1.}}, {{1.8369701987210297`*^-16, 1.}, {-0.8660254037844389, 
         0.5000000000000008}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{0.8660254037844386, 0.4999999999999993}, 
          0.19999999999999987], InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8660254037844389, -0.5000000000000012}, 
          0.19999999999999987], InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
         InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
         InsetBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
          0.19999999999999987], InsetBox[
          StyleBox["5",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
          0.19999999999999987], InsetBox[
          StyleBox["6",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{146.99479166666538`, Automatic}]], "Output",
 CellChangeTimes->{
  3.91008589947863*^9, 3.9100859860218773`*^9, 3.910086020992804*^9, {
   3.910086054106636*^9, 3.910086120728415*^9}, 3.910087123689022*^9, {
   3.910087620151814*^9, 3.9100876532217197`*^9}, {3.910088110925119*^9, 
   3.910088118641098*^9}, {3.910455341602103*^9, 3.910455353749889*^9}, 
   3.9112748147730203`*^9, {3.911537386694976*^9, 3.911537430667385*^9}, {
   3.911974247998083*^9, 3.911974258587845*^9}, {3.911974572053233*^9, 
   3.911974596386585*^9}, 3.913438822565296*^9, 3.913447603436642*^9, 
   3.914508232297683*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"e7dce9c7-5465-4abe-b77f-a994547ae34c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["LCOrbit", "Subsection",
 CellChangeTimes->{{3.9134548762898827`*^9, 
  3.913454886455516*^9}},ExpressionUUID->"3a61df47-cb78-4266-bf7c-\
3bb5d512549e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "LCOrbit"}]], "Input",
 CellChangeTimes->{{3.914504159515571*^9, 3.91450416255824*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"ae1363d8-d4c8-40b9-960d-179461bc64e3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LCOrbit[graph_] Return the orbit from a given graph \
without any isometric rquivalents in the output\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"LCOrbit", "[", "gsl`Private`graph$_", "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gsl`Private`vertexCoordinates$1718", "=", 
                    RowBox[{
                    "GraphEmbedding", "[", "gsl`Private`graph$", "]"}]}], ";", 
                    RowBox[{"gsl`Private`g$1718", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"VertexList", "[", "gsl`Private`graph$", "]"}], 
                    ",", 
                    RowBox[{"EdgeList", "[", "gsl`Private`graph$", "]"}], ",", 
                    RowBox[{
                    "VertexCoordinates", "\[Rule]", 
                    "gsl`Private`vertexCoordinates$1718"}]}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`perm$1718", "=", 
                    RowBox[{"Permutations", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"VertexCount", "[", "gsl`Private`graph$", "]"}], 
                    "]"}], ",", 
                    RowBox[{"VertexCount", "[", "gsl`Private`graph$", "]"}]}],
                     "]"}]}], ";", 
                    RowBox[{"gsl`Private`prmList$1718", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FoldList", "[", 
                    RowBox[{"LCQubit", ",", "gsl`Private`graph$", ",", "#1"}],
                     "]"}], "&"}], ")"}], "/@", "gsl`Private`perm$1718"}], 
                    "]"}]}], ";", 
                    RowBox[{"gsl`Private`noDuplicates$1718", "=", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{
                    "gsl`Private`prmList$1718", ",", "IsomorphicGraphQ"}], 
                    "]"}]}], ";", 
                    RowBox[{"gsl`Private`out$1718", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    "gsl`Private`noDuplicates$1718", ",", 
                    "gsl`Private`graphstyle", ",", 
                    RowBox[{
                    "VertexCoordinates", "\[Rule]", 
                    "gsl`Private`vertexCoordinates$1718"}]}], "]"}]}], ";", 
                    RowBox[{
                    "Return", "[", "gsl`Private`noDuplicates$1718", "]"}], 
                    ";"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"gsl`LCOrbit\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"LCOrbit[graph_] Return the orbit from a given graph \
without any isometric rquivalents in the output\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {1., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {2., 6.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "LCOrbit[graph_] Return the orbit from a given graph without any \
isometric rquivalents in the output", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, gsl`LCOrbit, {gsl`LCOrbit[
         Pattern[gsl`Private`graph$, 
          Blank[]]] :> (
        gsl`Private`vertexCoordinates$1718 = 
         GraphEmbedding[gsl`Private`graph$]; gsl`Private`g$1718 = Graph[
           VertexList[gsl`Private`graph$], 
           EdgeList[gsl`Private`graph$], VertexCoordinates -> 
           gsl`Private`vertexCoordinates$1718]; 
        gsl`Private`perm$1718 = Permutations[
           Range[
            VertexCount[gsl`Private`graph$]], 
           VertexCount[gsl`Private`graph$]]; 
        gsl`Private`prmList$1718 = Flatten[
           Map[
           FoldList[gsl`LCQubit, gsl`Private`graph$, #]& , 
            gsl`Private`perm$1718]]; 
        gsl`Private`noDuplicates$1718 = 
         DeleteDuplicates[gsl`Private`prmList$1718, IsomorphicGraphQ]; 
        gsl`Private`out$1718 = 
         Graph[gsl`Private`noDuplicates$1718, gsl`Private`graphstyle, 
           VertexCoordinates -> gsl`Private`vertexCoordinates$1718]; 
        Return[gsl`Private`noDuplicates$1718]; Null)}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "gsl`LCOrbit"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9145041630837927`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"ab6fc030-da55-465d-8707-a7c8a2be699b"]
}, Open  ]],

Cell[TextData[{
 "This function is a bit intensive, as it applies the ",
 StyleBox["LCQubit", "Input"],
 " function to each vertex/node. This generates a list of graphs, which the \
function then goes through in order to remove duplicated graphs. The outcome \
should be the LC orbit for said graph. This needs to be tested in more \
detail. "
}], "Text",
 CellChangeTimes->{{3.914490374944038*^9, 
  3.914490459821563*^9}},ExpressionUUID->"600f0f75-3df4-4bdf-8f1b-\
55e231b77f69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LCOrbit", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.910455493091932*^9, 3.910455501156879*^9}, {
   3.9112867061594543`*^9, 3.911286706247306*^9}, 3.911537345713479*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"09e6c204-a09d-4f5e-bc7c-f3d75cf0110f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 4, 3, 6, 5}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {3, 5}, {5, 6}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
         ImageSize -> {146.99479166666538`, Automatic}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{0.8660254037844386, 0.4999999999999993}, {
           0.8660254037844389, -0.5000000000000012}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           3.8285686989269494`*^-16, -1.}}, {{
           3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 1.}}, {{
           3.8285686989269494`*^-16, -1.}, {-0.8660254037844384, \
-0.4999999999999994}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {1, 4}, {2, 4}, {4, 3}, {4, 6}, {6, 5}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {146.99479166666538`, Automatic}, 
         VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
          0.8660254037844389, -0.5000000000000012}, {
          3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
          1.}, {-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{0.8660254037844386, 0.4999999999999993}, {
           0.8660254037844389, -0.5000000000000012}}, {{0.8660254037844386, 
           0.4999999999999993}, {1.8369701987210297`*^-16, 1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           1.8369701987210297`*^-16, 1.}}, {{3.8285686989269494`*^-16, -1.}, {
           1.8369701987210297`*^-16, 1.}}, {{1.8369701987210297`*^-16, 
           1.}, {-0.8660254037844389, 
           0.5000000000000008}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {2, 3}, {2, 4}, {2, 6}, {3, 6}, {4, 3}, {4, 6}, {6, 
         5}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {146.99479166666538`, Automatic}, 
         VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
          0.8660254037844389, -0.5000000000000012}, {
          3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
          1.}, {-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{0.8660254037844386, 0.4999999999999993}, {
           0.8660254037844389, -0.5000000000000012}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           3.8285686989269494`*^-16, -1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           1.8369701987210297`*^-16, 1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {-0.8660254037844389, 
           0.5000000000000008}}, {{3.8285686989269494`*^-16, -1.}, {
           1.8369701987210297`*^-16, 1.}}, {{
           3.8285686989269494`*^-16, -1.}, {-0.8660254037844389, 
           0.5000000000000008}}, {{1.8369701987210297`*^-16, 
           1.}, {-0.8660254037844389, 
           0.5000000000000008}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 3}, {1, 4}, {1, 6}, {2, 3}, {2, 4}, {2, 6}, {3, 6}, {4, 
         3}, {4, 6}, {6, 5}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {146.99479166666538`, Automatic}, 
         VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
          0.8660254037844389, -0.5000000000000012}, {
          3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
          1.}, {-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], LineBox[CompressedData["

1:eJxTTMoPSmVmYGDgAmImKF7lE/Giattr+8//QeC+/b8XVsVl03bbMIDBh/3o
8lxd83wsK1fB5O3R5ddC+PvZwfIPYHx7bgh/P7r56PLo5qPLo5uPbh66fhz2
wfXjsA8uvwLK/wrxH4Z+AKNOjSc=
           "]]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {1, 4}, {2, 4}, {4, 3}, {4, 5}, {4, 6}, {6, 5}}}, {
        EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {146.99479166666538`, Automatic}, 
         VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
          0.8660254037844389, -0.5000000000000012}, {
          3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
          1.}, {-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{0.8660254037844386, 0.4999999999999993}, {
           0.8660254037844389, -0.5000000000000012}}, {{0.8660254037844386, 
           0.4999999999999993}, {1.8369701987210297`*^-16, 1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           1.8369701987210297`*^-16, 1.}}, {{3.8285686989269494`*^-16, -1.}, {
           1.8369701987210297`*^-16, 1.}}, {{1.8369701987210297`*^-16, 
           1.}, {-0.8660254037844384, -0.4999999999999994}}, {{
           1.8369701987210297`*^-16, 1.}, {-0.8660254037844389, 
           0.5000000000000008}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {1, 6}, {2, 3}, {2, 4}, {2, 6}, {6, 
         5}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {146.99479166666538`, Automatic}, 
         VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
          0.8660254037844389, -0.5000000000000012}, {
          3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
          1.}, {-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{0.8660254037844386, 0.4999999999999993}, {
           0.8660254037844389, -0.5000000000000012}}, {{0.8660254037844386, 
           0.4999999999999993}, {3.8285686989269494`*^-16, -1.}}, {{
           0.8660254037844386, 0.4999999999999993}, {1.8369701987210297`*^-16,
            1.}}, {{0.8660254037844386, 
           0.4999999999999993}, {-0.8660254037844389, 0.5000000000000008}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           3.8285686989269494`*^-16, -1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           1.8369701987210297`*^-16, 1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {-0.8660254037844389, 
           0.5000000000000008}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 3}, {1, 4}, {1, 6}, {2, 3}, {2, 4}, {2, 6}, {6, 5}}}, {
        EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {146.99479166666538`, Automatic}, 
         VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
          0.8660254037844389, -0.5000000000000012}, {
          3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
          1.}, {-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{0.8660254037844386, 0.4999999999999993}, {
           3.8285686989269494`*^-16, -1.}}, {{0.8660254037844386, 
           0.4999999999999993}, {1.8369701987210297`*^-16, 1.}}, {{
           0.8660254037844386, 0.4999999999999993}, {-0.8660254037844389, 
           0.5000000000000008}}, {{0.8660254037844389, -0.5000000000000012}, {
           3.8285686989269494`*^-16, -1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           1.8369701987210297`*^-16, 1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {-0.8660254037844389, 
           0.5000000000000008}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {1, 5}, {1, 6}, {2, 5}, {2, 6}, {3, 5}, {3, 6}, {4, 
         5}, {4, 6}, {6, 5}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {146.99479166666538`, Automatic}, 
         VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
          0.8660254037844389, -0.5000000000000012}, {
          3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
          1.}, {-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], LineBox[CompressedData["

1:eJxTTMoPSmVmYGDgAmImKF7lE/Giattr+8//QeC+/Voon5sBBB7sR5dfAeHv
/wrhY8hD9e9nh+jHMA9dP7o8uv5/L6yKy6bttgFzGT5g6EeXR9fP1TXPx7Jy
FUwew/3o8uj6cbgXLg8AibKqgw==
           "]]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 5}, {2, 
         6}, {3, 5}, {3, 6}, {4, 3}, {4, 5}, {4, 6}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {146.99479166666538`, Automatic}, 
         VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
          0.8660254037844389, -0.5000000000000012}, {
          3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
          1.}, {-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], LineBox[CompressedData["

1:eJxTTMoPSmVmYGDgBWImKF7lE/Giattr+8//QeC+/b8XVsVl03bbMIDBh/3o
8lxd83wsK1fB5O3R5VdA+Pu/QvgY+tdC5dnB+h/A+PbcEP5+dPvR5dHtR5dH
tx9dHt1+dPvQzUeXRzcfh3vh5qObh64fh3/g+gE17sko
           "]]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 5}, {2, 
         6}, {6, 5}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {146.99479166666538`, Automatic}, 
         VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
          0.8660254037844389, -0.5000000000000012}, {
          3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
          1.}, {-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{0.8660254037844386, 0.4999999999999993}, {
           3.8285686989269494`*^-16, -1.}}, {{0.8660254037844386, 
           0.4999999999999993}, {1.8369701987210297`*^-16, 1.}}, {{
           0.8660254037844386, 
           0.4999999999999993}, {-0.8660254037844384, -0.4999999999999994}}, \
{{0.8660254037844386, 0.4999999999999993}, {-0.8660254037844389, 
           0.5000000000000008}}, {{0.8660254037844389, -0.5000000000000012}, {
           3.8285686989269494`*^-16, -1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           1.8369701987210297`*^-16, 1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {-0.8660254037844384, \
-0.4999999999999994}}, {{
           0.8660254037844389, -0.5000000000000012}, {-0.8660254037844389, 
           
           0.5000000000000008}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.910455460326241*^9, {3.910455495104501*^9, 3.910455502639324*^9}, 
   3.910455571523308*^9, 3.910455616264512*^9, {3.910626074410286*^9, 
   3.910626102652678*^9}, 3.910626135776387*^9, 3.9112748214659348`*^9, 
   3.911286883480809*^9, 3.9119742905585737`*^9, 3.913438851114366*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8d385523-d387-4216-9e56-b1e86723a3ea"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Zmeasurement", "Subsection",
 CellChangeTimes->{{3.913454930342311*^9, 
  3.913454932091362*^9}},ExpressionUUID->"00160620-c1ec-4e25-a44f-\
8172f9992a14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Zmeasurement"}]], "Input",
 CellChangeTimes->{{3.9145041542011414`*^9, 3.914504155890035*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"e275fba5-2714-4259-813f-88fb4686e8c7"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Zmeasurement[graph_,vertex_] Performs a Z \
measurement onto the vertex of a graph\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Zmeasurement", "[", 
                    RowBox[{
                    "gsl`Private`graph$_", ",", "gsl`Private`vertex$_"}], 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gsl`Private`vertexCoordinates$1720", "=", 
                    RowBox[{
                    "GraphEmbedding", "[", "gsl`Private`graph$", "]"}]}], ";", 
                    RowBox[{"gsl`Private`g$1720", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"VertexList", "[", "gsl`Private`graph$", "]"}], 
                    ",", 
                    RowBox[{"EdgeList", "[", "gsl`Private`graph$", "]"}], ",",
                     "gsl`Private`graphstyle", ",", 
                    RowBox[{
                    "VertexCoordinates", "\[Rule]", 
                    "gsl`Private`vertexCoordinates$1720"}]}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`edgeDelete$1720", "=", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"EdgeList", "[", "gsl`Private`g$1720", "]"}], ",", 
                    RowBox[{"EdgeList", "[", 
                    RowBox[{"gsl`Private`g$1720", ",", 
                    RowBox[{
                    "gsl`Private`vertex$", "\[UndirectedEdge]", "_"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`edgeDeleteGraph$1720", "=", 
                    RowBox[{
                    "Graph", "[", "gsl`Private`edgeDelete$1720", "]"}]}], ";", 
                    RowBox[{"gsl`Private`vertexList$1720", "=", 
                    RowBox[{
                    "VertexList", "[", "gsl`Private`edgeDeleteGraph$1720", 
                    "]"}]}], ";", 
                    RowBox[{"gsl`Private`vertexDeleted$1720", "=", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{
                    "Length", "[", "gsl`Private`vertexCoordinates$1720", 
                    "]"}], "]"}], ",", "gsl`Private`vertexList$1720"}], 
                    "]"}]}], ";", 
                    RowBox[{"gsl`Private`vertexDeleted$1720", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", "#1", "}"}], "&"}], ")"}], "/@", 
                    "gsl`Private`vertexDeleted$1720"}]}], ";", 
                    RowBox[{"gsl`Private`vertexCoordinates$1720", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{
                    "gsl`Private`vertexCoordinates$1720", ",", 
                    "gsl`Private`vertex$"}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`out$1720", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    "gsl`Private`edgeDelete$1720", ",", 
                    "gsl`Private`graphstyle"}], "]"}]}], ";", 
                    RowBox[{"Return", "[", "gsl`Private`out$1720", "]"}], 
                    ";"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"gsl`Zmeasurement\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Zmeasurement[graph_,vertex_] Performs a Z \
measurement onto the vertex of a graph\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {1., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {1., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Zmeasurement[graph_,vertex_] Performs a Z measurement onto the vertex of \
a graph", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, gsl`Zmeasurement, {gsl`Zmeasurement[
         Pattern[gsl`Private`graph$, 
          Blank[]], 
         Pattern[gsl`Private`vertex$, 
          Blank[]]] :> (
        gsl`Private`vertexCoordinates$1720 = 
         GraphEmbedding[gsl`Private`graph$]; gsl`Private`g$1720 = Graph[
           VertexList[gsl`Private`graph$], 
           EdgeList[gsl`Private`graph$], gsl`Private`graphstyle, 
           VertexCoordinates -> gsl`Private`vertexCoordinates$1720]; 
        gsl`Private`edgeDelete$1720 = Complement[
           EdgeList[gsl`Private`g$1720], 
           EdgeList[gsl`Private`g$1720, 
            UndirectedEdge[gsl`Private`vertex$, 
             Blank[]]]]; 
        gsl`Private`edgeDeleteGraph$1720 = Graph[gsl`Private`edgeDelete$1720]; 
        gsl`Private`vertexList$1720 = 
         VertexList[gsl`Private`edgeDeleteGraph$1720]; 
        gsl`Private`vertexDeleted$1720 = Complement[
           Range[
            Length[gsl`Private`vertexCoordinates$1720]], 
           gsl`Private`vertexList$1720]; 
        gsl`Private`vertexDeleted$1720 = 
         Map[{#}& , gsl`Private`vertexDeleted$1720]; 
        gsl`Private`vertexCoordinates$1720 = 
         Delete[gsl`Private`vertexCoordinates$1720, gsl`Private`vertex$]; 
        gsl`Private`out$1720 = 
         Graph[gsl`Private`edgeDelete$1720, gsl`Private`graphstyle]; 
        Return[gsl`Private`out$1720]; Null)}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "gsl`Zmeasurement"|>,
    False]]], "Output",
 CellChangeTimes->{3.914504156583592*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"4cc71e0c-436b-4865-83b8-45dc3331ddc7"]
}, Open  ]],

Cell[TextData[{
 "Pretty self explanatory, give this function a graph and a vertex/node as \
inputs, and it will return the graph after a pauli Z measurement is made on \
said vertex/node. ",
 StyleBox["NOTE: ",
  FontWeight->"Bold"],
 "Unfortunately, the co-ordinates of the vertices/nodes are not preserved \
when you run this function. Something I am working on. "
}], "Text",
 CellChangeTimes->{{3.914490814965201*^9, 3.914490865406279*^9}, {
  3.914491220905209*^9, 
  3.914491261905254*^9}},ExpressionUUID->"3396fd39-066a-462a-86b2-\
89f7a9a8e204"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zmeasurement", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {2, 3}, {2, 4}, {2, 6}, {3, 6}, {4, 3}, {4, 6}, {6, 
         5}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {146.99479166666538`, Automatic}, 
         VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
          0.8660254037844389, -0.5000000000000012}, {
          3.8285686989269494`*^-16, -1.}, {1.8369701987210297`*^-16, 
          1.}, {-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{0.8660254037844386, 0.4999999999999993}, {
           0.8660254037844389, -0.5000000000000012}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           3.8285686989269494`*^-16, -1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           1.8369701987210297`*^-16, 1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {-0.8660254037844389, 
           0.5000000000000008}}, {{3.8285686989269494`*^-16, -1.}, {
           1.8369701987210297`*^-16, 1.}}, {{
           3.8285686989269494`*^-16, -1.}, {-0.8660254037844389, 
           0.5000000000000008}}, {{1.8369701987210297`*^-16, 
           1.}, {-0.8660254037844389, 
           0.5000000000000008}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", "4"}], "]"}]], "Input",\

 CellChangeTimes->{{3.9119746801443043`*^9, 3.91197468370226*^9}, {
  3.913439262989966*^9, 3.913439263191244*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"94c23e4b-d7ec-4f6e-bc9f-0dc444e20eb0"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 6, 5}, {
      Null, {{1, 2}, {2, 3}, {2, 4}, {3, 4}, {4, 5}}}, {EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
       ImageSize -> {146.99479166666538`, Automatic}, VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], 
        LineBox[{{{-0.9510565162951538, 
         0.30901699437494834`}, {-0.5877852522924727, -0.8090169943749468}}, \
{{-0.5877852522924727, -0.8090169943749468}, {-7.044813998280222*^-16, 
         1.}}, {{-0.5877852522924727, -0.8090169943749468}, {
         0.5877852522924737, -0.8090169943749481}}, {{-7.044813998280222*^-16,
          1.}, {0.5877852522924737, -0.8090169943749481}}, {{
         0.5877852522924737, -0.8090169943749481}, {0.9510565162951533, 
         0.30901699437494634`}}}]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{-0.9510565162951538, 0.30901699437494834`}, 
          0.2351141009169891], InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.9393008112493043, 0.3207726994207978},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5877852522924727, -0.8090169943749468}, 
          0.2351141009169891], InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.5760295472466233, -0.7972612893290973},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.2351141009169891], 
         InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.011755705045848774, 1.0117557050458494},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924737, -0.8090169943749481}, 
          0.2351141009169891], InsetBox[
          StyleBox["6",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.5995409573383232, -0.7972612893290987},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9510565162951533, 0.30901699437494634`}, 
          0.2351141009169891], InsetBox[
          StyleBox["5",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.9628122213410027, 0.3207726994207958},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{146.99479166666538`, Automatic}]], "Output",
 CellChangeTimes->{
  3.911974684194634*^9, 3.913438866866572*^9, 3.913439263513143*^9, {
   3.913447570546095*^9, 3.91344757433452*^9}, 3.913447712895728*^9, 
   3.913447744106031*^9, 3.913447778544897*^9, 3.913447812698216*^9, 
   3.9144909014361153`*^9, 3.914491068059447*^9, 3.914491100901606*^9, 
   3.914491179117533*^9, 3.914508078091529*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"21deed3c-e7ff-429b-936b-353fff5c91cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zmeasurement", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 6, 5}, {
        Null, {{1, 2}, {2, 3}, {2, 4}, {3, 4}, {4, 5}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
         ImageSize -> {146.99479166666538`, Automatic}, 
         VertexCoordinates -> {{0.8660254037844386, 0.4999999999999993}, {
          0.8660254037844389, -0.5000000000000012}, {
          3.8285686989269494`*^-16, -1.}, {-0.8660254037844384, \
-0.4999999999999994}, {-0.8660254037844389, 0.5000000000000008}}, 
         VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{0.8660254037844386, 0.4999999999999993}, {
           0.8660254037844389, -0.5000000000000012}}, {{
           0.8660254037844389, -0.5000000000000012}, {
           3.8285686989269494`*^-16, -1.}}, {{
           0.8660254037844389, -0.5000000000000012}, {-0.8660254037844384, \
-0.4999999999999994}}, {{
           3.8285686989269494`*^-16, -1.}, {-0.8660254037844384, \
-0.4999999999999994}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{0.8660254037844386, 0.4999999999999993}, 
            0.19999999999999987], InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8660254037844389, -0.5000000000000012}, 
            0.19999999999999987], InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
            0.19999999999999987], InsetBox[
            StyleBox["6",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
            0.19999999999999987], InsetBox[
            StyleBox["5",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", "1"}], "]"}]], "Input",\

 CellChangeTimes->{{3.9134477524293756`*^9, 3.91344776474224*^9}, 
   3.914490911163352*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"66e9eb03-7568-4127-87d1-f69e25d75ac6"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{2, 3, 6, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}, {3, 4}}}, {EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
       ImageSize -> {146.99479166666538`, Automatic}, VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], 
        LineBox[{{{-1., 1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 
         1.}}, {{-1., 1.0106430996148606`*^-15}, {
         6.049014748177263*^-16, -1.}}, {{-7.044813998280222*^-16, 1.}, {
         6.049014748177263*^-16, -1.}}, {{6.049014748177263*^-16, -1.}, {
         1., -1.133107779529596*^-15}}}]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["6",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["5",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{146.99479166666538`, Automatic}]], "Output",
 CellChangeTimes->{{3.913447765390997*^9, 3.913447780814851*^9}, 
   3.9134478160541477`*^9, 3.914490912823242*^9, {3.914491070066387*^9, 
   3.914491098608768*^9}, 3.91449118114121*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"5773d9bd-a440-42f3-8168-6d411c76ba8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another example", "Subsubsection",
 CellChangeTimes->{{3.914490924049664*^9, 
  3.914490927214209*^9}},ExpressionUUID->"e6bf5264-ec62-42fa-8a9a-\
3194de72b1ad"],

Cell["Starting with the trident", "Text",
 CellChangeTimes->{{3.914490941517501*^9, 
  3.914490946948991*^9}},ExpressionUUID->"441cc745-72bc-45f9-953f-\
8caef6f9f174"],

Cell[CellGroupData[{

Cell[BoxData["g"], "Input",
 CellChangeTimes->{3.914490937702593*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"f0e95216-10eb-4f54-bea9-5932a0368e82"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 4, 3, 6, 5}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {3, 5}, {5, 6}}}, {EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
       ImageSize -> {146.99479166666538`, Automatic}, VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], 
        LineBox[{{{0.8660254037844386, 0.4999999999999993}, {
         0.8660254037844389, -0.5000000000000012}}, {{
         0.8660254037844389, -0.5000000000000012}, {
         3.8285686989269494`*^-16, -1.}}, {{3.8285686989269494`*^-16, -1.}, {
         1.8369701987210297`*^-16, 1.}}, {{
         3.8285686989269494`*^-16, -1.}, {-0.8660254037844384, \
-0.4999999999999994}}, {{-0.8660254037844384, -0.4999999999999994}, \
{-0.8660254037844389, 0.5000000000000008}}}]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{0.8660254037844386, 0.4999999999999993}, 
          0.19999999999999987], InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.8760254037844386, 0.5099999999999993},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8660254037844389, -0.5000000000000012}, 
          0.19999999999999987], InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.8760254037844389, -0.4900000000000012},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.8285686989269494`*^-16, -1.}, 0.19999999999999987], 
         InsetBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.010000000000000397, -0.99},
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8369701987210297`*^-16, 1.}, 0.19999999999999987], 
         InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.010000000000000203, 1.01},
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
          0.19999999999999987], InsetBox[
          StyleBox["6",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.8560254037844384, -0.4899999999999994},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
          0.19999999999999987], InsetBox[
          StyleBox["5",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.8560254037844389, 0.5100000000000008},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{146.99479166666538`, Automatic}]], "Output",
 CellChangeTimes->{3.914490938658749*^9, 3.914491144363534*^9, 
  3.91449118643432*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"1f84d7ca-00da-4ede-a42b-12e48ad9b204"]
}, Open  ]],

Cell["\<\
From inspection, if one measures Z on node 4, then the only edges remaining \
are between 5 - 6, and 1 - 2.\
\>", "Text",
 CellChangeTimes->{{3.914490949693746*^9, 
  3.914490985302587*^9}},ExpressionUUID->"5343581e-7439-438c-9b63-\
bcaa1710142b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zmeasurement", "[", 
  RowBox[{"g", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.911285423173661*^9, 3.911285459050927*^9}, {
   3.91128551758185*^9, 3.911285521821836*^9}, {3.9112855631444197`*^9, 
   3.9112855881740212`*^9}, {3.911286444683439*^9, 3.911286471347341*^9}, {
   3.9112868961614227`*^9, 3.911286896245843*^9}, 3.911537347779318*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"aa425700-161c-4be3-830f-04999f8cd56d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 6, 5}, {Null, {{1, 2}, {3, 4}}}, {EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
       ImageSize -> {146.99479166666538`, Automatic}, VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], 
        LineBox[{{{-1., 1.0106430996148606`*^-15}, {
         6.049014748177263*^-16, -1.}}, {{
         1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}}]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["6",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["5",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{146.99479166666538`, Automatic}]], "Output",
 CellChangeTimes->{{3.911285435246855*^9, 3.911285459517142*^9}, {
   3.911285511772266*^9, 3.911285522141556*^9}, {3.91128555866295*^9, 
   3.911285588719426*^9}, 3.911285683031748*^9, 3.911285870958*^9, {
   3.911286421933215*^9, 3.911286471708637*^9}, 3.911974303350999*^9, {
   3.914490991282275*^9, 3.91449106391005*^9}, 3.914491111508239*^9, 
   3.914491145845133*^9, 3.914491188025756*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"8bd93536-f06e-471e-8ee8-c359971d8b5f"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ymeasurement", "Subsection",
 CellChangeTimes->{{3.913454940178978*^9, 
  3.91345494201632*^9}},ExpressionUUID->"4fd5d268-6e45-414b-8fc1-\
947b7bb1b1ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Ymeasurement"}]], "Input",
 CellChangeTimes->{{3.914504149025614*^9, 3.914504150414071*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"c2a77488-9da5-4717-aa8a-a65d15593f95"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Ymeasurement[graph_,vertex_] Performs a Y \
measurement onto the vertex of a graph\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Ymeasurement", "[", 
                    RowBox[{
                    "gsl`Private`graph_", ",", "gsl`Private`vertex_"}], "]"}],
                     ":=", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Zmeasurement", "[", 
                    RowBox[{
                    RowBox[{"LCQubit", "[", 
                    RowBox[{"gsl`Private`graph", ",", "gsl`Private`vertex"}], 
                    "]"}], ",", "gsl`Private`vertex"}], "]"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"gsl`Ymeasurement\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Ymeasurement[graph_,vertex_] Performs a Y \
measurement onto the vertex of a graph\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {1., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {1., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Ymeasurement[graph_,vertex_] Performs a Y measurement onto the vertex of \
a graph", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, gsl`Ymeasurement, {gsl`Ymeasurement[
         Pattern[gsl`Private`graph, 
          Blank[]], 
         Pattern[gsl`Private`vertex, 
          Blank[]]] :> Return[
         gsl`Zmeasurement[
          gsl`LCQubit[gsl`Private`graph, gsl`Private`vertex], 
          gsl`Private`vertex]]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "gsl`Ymeasurement"|>, False]]], "Output",\

 CellChangeTimes->{3.914504151330092*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"4d4a5cf7-26bb-4ade-8426-0101a488221c"]
}, Open  ]],

Cell[TextData[{
 "A measurement in the Y basis will return the graph corresponding to a Z \
measurement being applied to the LC rotated graph. So the operation returns \
the LC rotated graph using ",
 StyleBox["LCQubit", "Input"],
 " and then applied a ",
 StyleBox["Zmeasurement", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.914491276741167*^9, 
  3.914491342657772*^9}},ExpressionUUID->"a293e432-cb58-43dd-82dc-\
041112fc13fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ymeasurement", "[", 
  RowBox[{"g", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.911286666997951*^9, 3.911286674308139*^9}, {
   3.911286891470029*^9, 3.911286904902636*^9}, 3.911537349121948*^9, {
   3.91343922558989*^9, 3.913439230590814*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"2a361230-19ed-4ded-bc81-2bfdc87922fa"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 4, 3, 5}, {Null, {{1, 2}, {2, 3}, {3, 4}, {3, 5}}}, {
      EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
       ImageSize -> {146.99479166666538`, Automatic}, VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], 
        LineBox[{{{0.9510565162951533, 0.30901699437494634`}, {
         0.5877852522924737, -0.8090169943749481}}, {{
         0.5877852522924737, -0.8090169943749481}, {-0.5877852522924727, \
-0.8090169943749468}}, {{-0.5877852522924727, -0.8090169943749468}, \
{-7.044813998280222*^-16, 
         1.}}, {{-0.5877852522924727, -0.8090169943749468}, \
{-0.9510565162951538, 0.30901699437494834`}}}]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{0.9510565162951533, 0.30901699437494634`}, 
          0.2351141009169891], InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.9628122213410027, 0.3207726994207958},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924737, -0.8090169943749481}, 
          0.2351141009169891], InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.5995409573383232, -0.7972612893290987},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5877852522924727, -0.8090169943749468}, 
          0.2351141009169891], InsetBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.5760295472466233, -0.7972612893290973},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.2351141009169891], 
         InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.011755705045848774, 1.0117557050458494},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9510565162951538, 0.30901699437494834`}, 
          0.2351141009169891], InsetBox[
          StyleBox["5",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.9393008112493043, 0.3207726994207978},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{146.99479166666538`, Automatic}]], "Output",
 CellChangeTimes->{
  3.911286674946147*^9, {3.911286892249251*^9, 3.911286910418952*^9}, 
   3.911287053683954*^9, {3.913439226160312*^9, 3.913439231309511*^9}, {
   3.914491192033944*^9, 3.914491196204454*^9}, 3.91450807445715*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"276cf2dc-55a5-4663-a5ec-e87262e22c3b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Xmeasurement", "Subsection",
 CellChangeTimes->{{3.913454945145029*^9, 
  3.9134549470147743`*^9}},ExpressionUUID->"2c52ad6b-ccdd-48f9-beb6-\
2ef2a9d511d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Xmeasurement"}]], "Input",
 CellChangeTimes->{{3.914504142667613*^9, 3.9145041453435097`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"f38b42ee-1669-48da-bed9-61caa6847bfa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Xmeasurement[graph_,vertex_] Performs a X \
measurement onto the vertex of a graph, recall that this does the operation \
of a Y measurement on a randomly selected neighbour of the chosen vertex\"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Xmeasurement", "[", 
                    RowBox[{
                    "gsl`Private`graph$_", ",", "gsl`Private`vertex$_"}], 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gsl`Private`randomNeighbour$1722", "=", 
                    RowBox[{"RandomChoice", "[", 
                    RowBox[{"AdjacencyList", "[", 
                    RowBox[{
                    "gsl`Private`graph$", ",", "gsl`Private`vertex$"}], "]"}],
                     "]"}]}], ";", 
                    RowBox[{"gsl`Private`tempGraph$1722", "=", 
                    RowBox[{"Ymeasurement", "[", 
                    RowBox[{
                    RowBox[{"LCQubit", "[", 
                    RowBox[{
                    "gsl`Private`graph$", ",", 
                    "gsl`Private`randomNeighbour$1722"}], "]"}], ",", 
                    "gsl`Private`vertex$"}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`out$1722", "=", 
                    RowBox[{"LCQubit", "[", 
                    RowBox[{
                    "gsl`Private`tempGraph$1722", ",", 
                    "gsl`Private`randomNeighbour$1722"}], "]"}]}], ";", 
                    RowBox[{"Return", "[", "gsl`Private`out$1722", "]"}]}], 
                    ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"gsl`Xmeasurement\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Xmeasurement[graph_,vertex_] Performs a X \
measurement onto the vertex of a graph, recall that this does the operation \
of a Y measurement on a randomly selected neighbour of the chosen vertex\"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {1., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {1., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Xmeasurement[graph_,vertex_] Performs a X measurement onto the vertex of \
a graph, recall that this does the operation of a Y measurement on a randomly \
selected neighbour of the chosen vertex", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, gsl`Xmeasurement, {gsl`Xmeasurement[
         Pattern[gsl`Private`graph$, 
          Blank[]], 
         Pattern[gsl`Private`vertex$, 
          Blank[]]] :> (gsl`Private`randomNeighbour$1722 = RandomChoice[
           AdjacencyList[gsl`Private`graph$, gsl`Private`vertex$]]; 
        gsl`Private`tempGraph$1722 = gsl`Ymeasurement[
           gsl`LCQubit[gsl`Private`graph$, gsl`Private`randomNeighbour$1722], 
           gsl`Private`vertex$]; 
        gsl`Private`out$1722 = 
         gsl`LCQubit[
          gsl`Private`tempGraph$1722, gsl`Private`randomNeighbour$1722]; 
        Return[gsl`Private`out$1722])}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "gsl`Xmeasurement"|>, False]]], "Output",\

 CellChangeTimes->{3.9145041468318653`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"0b9e8ff1-9118-45ab-975f-9e242d453c2d"]
}, Open  ]],

Cell[TextData[{
 "These result of this measurement may be different each time it is ran.  \
This is because the operation includes a random choice of neighbouring \
vertices. More explicitly, the function randomly chooses a random neighbour \
of the input node. It then applies the ",
 StyleBox["Ymeasurement", "Input"],
 " function to said neighbouring node, returning the new graph. "
}], "Text",
 CellChangeTimes->{{3.914491351661303*^9, 3.914491393843627*^9}, {
  3.914491759350596*^9, 
  3.914491852144519*^9}},ExpressionUUID->"328a771e-b7de-4709-92ae-\
d17c61c8cfcc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Xmeasurement", "[", 
  RowBox[{"g", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.9112869337932653`*^9, 3.911286956529581*^9}, 
   3.911537350536393*^9, {3.913439207487143*^9, 3.91343921922884*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e5ea3cb6-d3af-47c2-b176-8969d6b50b5f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 3, 4, 5, 6}, {Null, {{1, 3}, {3, 2}, {3, 5}, {5, 4}}}, {
      EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
       ImageSize -> {146.99479166666538`, Automatic}, 
       VertexCoordinates -> {{0.9510565162951533, 0.30901699437494634`}, {
        0.5877852522924737, -0.8090169943749481}, {-7.044813998280222*^-16, 
        1.}, {-0.5877852522924727, -0.8090169943749468}, {-0.9510565162951538,
         0.30901699437494834`}}, VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], 
        LineBox[{{{0.9510565162951533, 
         0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}, {{
         0.5877852522924737, -0.8090169943749481}, {-7.044813998280222*^-16, 
         1.}}, {{-7.044813998280222*^-16, 1.}, {-0.9510565162951538, 
         0.30901699437494834`}}, {{-0.5877852522924727, -0.8090169943749468}, \
{-0.9510565162951538, 0.30901699437494834`}}}]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{0.9510565162951533, 0.30901699437494634`}, 
          0.2351141009169891], InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.9628122213410027, 0.3207726994207958},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924737, -0.8090169943749481}, 
          0.2351141009169891], InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.5995409573383232, -0.7972612893290987},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.2351141009169891], 
         InsetBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.011755705045848774, 1.0117557050458494},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5877852522924727, -0.8090169943749468}, 
          0.2351141009169891], InsetBox[
          StyleBox["5",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.5760295472466233, -0.7972612893290973},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9510565162951538, 0.30901699437494834`}, 
          0.2351141009169891], InsetBox[
          StyleBox["6",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.9393008112493043, 0.3207726994207978},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{146.99479166666538`, Automatic}]], "Output",
 CellChangeTimes->{{3.911286952128144*^9, 3.911286966691946*^9}, {
  3.913439208242579*^9, 3.913439222819932*^9}, {3.914508067426583*^9, 
  3.914508071827586*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"053518ad-7194-4c35-a6fd-ac272b97ed4a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindStabilizers", "Subsection",
 CellChangeTimes->{{3.913454999610639*^9, 3.913455005768651*^9}, {
  3.91450716558139*^9, 
  3.914507174408279*^9}},ExpressionUUID->"23244494-9d5c-40be-857d-\
adec0817e098"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FindStabilzers"}]], "Input",
 CellChangeTimes->{{3.914492994585041*^9, 3.914492997678402*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"c565128f-5798-40cd-9d07-567740ac0c88"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FindStabilizers[state_] For a given state, return \
the stabilzers of the state. This works by finding which combination of \
operators \\\"stabilize\\\" the state. The state after applying the operation \
is equivalent to the state before applying the operation\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FindStabilzers", "[", "state$_", "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dim$1744", "=", 
                    FractionBox["1", 
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "state$", "]"}], ",", "2"}], 
                    "]"}]]}], ";", 
                    RowBox[{"ops$1744", "=", 
                    RowBox[{"Tuples", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[DoubleStruckCapitalI]", "[", "i", "]"}], ",", 
                    RowBox[{"\[DoubleStruckCapitalX]", "[", "i", "]"}], ",", 
                    RowBox[{"\[DoubleStruckCapitalZ]", "[", "i", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"\[DoubleStruckCapitalZ]", "[", "i", "]"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "dim$1744"}], "}"}]}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"transformations$1744", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[DoubleStruckCapitalI]", "[", "qubit_", "]"}], 
                    "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"H", "[", "qubit", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"V", "[", "qubit", "]"}]}]}], "}"}], "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"\[DoubleStruckCapitalX]", "[", "qubit_", "]"}], 
                    "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"V", "[", "qubit", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"H", "[", "qubit", "]"}]}]}], "}"}], "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[DoubleStruckCapitalX]", "[", "qubit_", "]"}]}],
                     "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"-", 
                    RowBox[{"V", "[", "qubit", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"-", 
                    RowBox[{"H", "[", "qubit", "]"}]}]}]}], "}"}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"\[DoubleStruckCapitalI]", " ", 
                    RowBox[{"\[DoubleStruckCapitalX]", "[", "qubit_", "]"}]}],
                     "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"\[DoubleStruckCapitalI]", " ", 
                    RowBox[{"V", "[", "qubit", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"\[DoubleStruckCapitalI]", " ", 
                    RowBox[{"H", "[", "qubit", "]"}]}]}]}], "}"}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[DoubleStruckCapitalI]"}], " ", 
                    RowBox[{"\[DoubleStruckCapitalX]", "[", "qubit_", "]"}]}],
                     "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "\[DoubleStruckCapitalI]"}], " ", 
                    RowBox[{"V", "[", "qubit", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "\[DoubleStruckCapitalI]"}], " ", 
                    RowBox[{"H", "[", "qubit", "]"}]}]}]}], "}"}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"\[DoubleStruckCapitalZ]", "[", "qubit_", "]"}], 
                    "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"H", "[", "qubit", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"-", 
                    RowBox[{"V", "[", "qubit", "]"}]}]}]}], "}"}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[DoubleStruckCapitalZ]", "[", "qubit_", "]"}]}],
                     "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"-", 
                    RowBox[{"H", "[", "qubit", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"V", "[", "qubit", "]"}]}]}], "}"}], "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"\[DoubleStruckCapitalI]", " ", 
                    RowBox[{"\[DoubleStruckCapitalZ]", "[", "qubit_", "]"}]}],
                     "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"\[DoubleStruckCapitalI]", " ", 
                    RowBox[{"H", "[", "qubit", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "\[DoubleStruckCapitalI]"}], " ", 
                    RowBox[{"V", "[", "qubit", "]"}]}]}]}], "}"}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[DoubleStruckCapitalI]"}], " ", 
                    RowBox[{"\[DoubleStruckCapitalZ]", "[", "qubit_", "]"}]}],
                     "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"\[DoubleStruckCapitalI]", " ", 
                    RowBox[{"H", "[", "qubit", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "\[DoubleStruckCapitalI]"}], " ", 
                    RowBox[{"V", "[", "qubit", "]"}]}]}]}], "}"}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"\[DoubleStruckCapitalY]", "[", "qubit_", "]"}], 
                    "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"\[DoubleStruckCapitalI]", " ", 
                    RowBox[{"V", "[", "qubit", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "\[DoubleStruckCapitalI]"}], " ", 
                    RowBox[{"H", "[", "qubit", "]"}]}]}]}], "}"}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[DoubleStruckCapitalY]", "[", "qubit_", "]"}]}],
                     "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "\[DoubleStruckCapitalI]"}], " ", 
                    RowBox[{"V", "[", "qubit", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"\[DoubleStruckCapitalI]", " ", 
                    RowBox[{"H", "[", "qubit", "]"}]}]}]}], "}"}], "}"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"\[DoubleStruckCapitalI]", " ", 
                    RowBox[{"\[DoubleStruckCapitalY]", "[", "qubit_", "]"}]}],
                     "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"-", 
                    RowBox[{"V", "[", "qubit", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"H", "[", "qubit", "]"}]}]}], "}"}], "}"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[DoubleStruckCapitalI]"}], " ", 
                    RowBox[{"\[DoubleStruckCapitalY]", "[", "qubit_", "]"}]}],
                     "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"V", "[", "qubit", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", "qubit", "]"}], "\[Rule]", 
                    RowBox[{"-", 
                    RowBox[{"H", "[", "qubit", "]"}]}]}]}], "}"}], "}"}]}]}], 
                    "}"}]}], ";", 
                    RowBox[{"opsList$1744", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    "#1", "/.", "\[VeryThinSpace]", "transformations$1744"}], 
                    "]"}], "&"}], ")"}], "/@", "ops$1744"}]}], ";", 
                    RowBox[{"coding$1744", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Kron", "@@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"H", "[", "i", "]"}], ",", 
                    RowBox[{"V", "[", "i", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "dim$1744"}], "}"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"codingState$1744", "=", 
                    RowBox[{"Total", "[", 
                    RowBox[{"state$", " ", "coding$1744"}], "]"}]}], ";", 
                    RowBox[{"allStates$1744", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "codingState$1744", "/.", "\[VeryThinSpace]", "#1"}], 
                    "&"}], ")"}], "/@", "opsList$1744"}]}], ";", 
                    RowBox[{"pos$1744", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", "codingState$1744"}], "&"}], 
                    ")"}], "/@", "allStates$1744"}], ",", "True"}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"out$1744", "=", 
                    RowBox[{
                    "ops$1744", "\[LeftDoubleBracket]", "pos$1744", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Return", "[", "out$1744", "]"}], ";"}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"gsl`FindStabilzers\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{8., {1., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{8., {1., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FindStabilizers[state_] For a given state, return \
the stabilzers of the state. This works by finding which combination of \
operators \\\"stabilize\\\" the state. The state after applying the operation \
is equivalent to the state before applying the operation\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {1., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {1., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FindStabilizers[state_] For a given state, return the stabilzers of the \
state. This works by finding which combination of operators \"stabilize\" the \
state. The state after applying the operation is equivalent to the state \
before applying the operation", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, gsl`FindStabilzers, {gsl`FindStabilzers[
         Pattern[$CellContext`state$, 
          Blank[]]] :> ($CellContext`dim$1744 = 1/Log[
           Length[$CellContext`state$], 2]; $CellContext`ops$1744 = Tuples[
           Table[{
             $CellContext`\[DoubleStruckCapitalI][$CellContext`i], 
             $CellContext`\[DoubleStruckCapitalX][$CellContext`i], 
             $CellContext`\[DoubleStruckCapitalZ][$CellContext`i], \
-$CellContext`\[DoubleStruckCapitalZ][$CellContext`i]}, {$CellContext`i, 
             1, $CellContext`dim$1744}]]; $CellContext`transformations$1744 = \
{$CellContext`\[DoubleStruckCapitalI][
             Pattern[$CellContext`qubit, 
              
              Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
$CellContext`H[$CellContext`qubit], $CellContext`V[$CellContext`qubit] -> \
$CellContext`V[$CellContext`qubit]}}, $CellContext`\[DoubleStruckCapitalX][
             Pattern[$CellContext`qubit, 
              
              Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
$CellContext`V[$CellContext`qubit], $CellContext`V[$CellContext`qubit] -> \
$CellContext`H[$CellContext`qubit]}}, -$CellContext`\[DoubleStruckCapitalX][
              Pattern[$CellContext`qubit, 
               
               Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
-$CellContext`V[$CellContext`qubit], $CellContext`V[$CellContext`qubit] -> \
-$CellContext`H[$CellContext`qubit]}}, $CellContext`\[DoubleStruckCapitalI] \
$CellContext`\[DoubleStruckCapitalX][
              Pattern[$CellContext`qubit, 
               
               Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
$CellContext`\[DoubleStruckCapitalI] $CellContext`V[$CellContext`qubit], \
$CellContext`V[$CellContext`qubit] -> $CellContext`\[DoubleStruckCapitalI] \
$CellContext`H[$CellContext`qubit]}}, (-$CellContext`\[DoubleStruckCapitalI]) \
$CellContext`\[DoubleStruckCapitalX][
              Pattern[$CellContext`qubit, 
               
               Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
(-$CellContext`\[DoubleStruckCapitalI]) $CellContext`V[$CellContext`qubit], \
$CellContext`V[$CellContext`qubit] -> (-$CellContext`\[DoubleStruckCapitalI]) \
$CellContext`H[$CellContext`qubit]}}, $CellContext`\[DoubleStruckCapitalZ][
             Pattern[$CellContext`qubit, 
              
              Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
$CellContext`H[$CellContext`qubit], $CellContext`V[$CellContext`qubit] -> \
-$CellContext`V[$CellContext`qubit]}}, -$CellContext`\[DoubleStruckCapitalZ][
              Pattern[$CellContext`qubit, 
               
               Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
-$CellContext`H[$CellContext`qubit], $CellContext`V[$CellContext`qubit] -> \
$CellContext`V[$CellContext`qubit]}}, $CellContext`\[DoubleStruckCapitalI] \
$CellContext`\[DoubleStruckCapitalZ][
              Pattern[$CellContext`qubit, 
               
               Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
$CellContext`\[DoubleStruckCapitalI] $CellContext`H[$CellContext`qubit], \
$CellContext`V[$CellContext`qubit] -> (-$CellContext`\[DoubleStruckCapitalI]) \
$CellContext`V[$CellContext`qubit]}}, (-$CellContext`\[DoubleStruckCapitalI]) \
$CellContext`\[DoubleStruckCapitalZ][
              Pattern[$CellContext`qubit, 
               
               Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
$CellContext`\[DoubleStruckCapitalI] $CellContext`H[$CellContext`qubit], \
$CellContext`V[$CellContext`qubit] -> (-$CellContext`\[DoubleStruckCapitalI]) \
$CellContext`V[$CellContext`qubit]}}, $CellContext`\[DoubleStruckCapitalY][
             Pattern[$CellContext`qubit, 
              
              Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
$CellContext`\[DoubleStruckCapitalI] $CellContext`V[$CellContext`qubit], \
$CellContext`V[$CellContext`qubit] -> (-$CellContext`\[DoubleStruckCapitalI]) \
$CellContext`H[$CellContext`qubit]}}, -$CellContext`\[DoubleStruckCapitalY][
              Pattern[$CellContext`qubit, 
               
               Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
(-$CellContext`\[DoubleStruckCapitalI]) $CellContext`V[$CellContext`qubit], \
$CellContext`V[$CellContext`qubit] -> $CellContext`\[DoubleStruckCapitalI] \
$CellContext`H[$CellContext`qubit]}}, $CellContext`\[DoubleStruckCapitalI] \
$CellContext`\[DoubleStruckCapitalY][
              Pattern[$CellContext`qubit, 
               
               Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
-$CellContext`V[$CellContext`qubit], $CellContext`V[$CellContext`qubit] -> \
$CellContext`H[$CellContext`qubit]}}, (-$CellContext`\[DoubleStruckCapitalI]) \
$CellContext`\[DoubleStruckCapitalY][
              Pattern[$CellContext`qubit, 
               
               Blank[]]] -> {{$CellContext`H[$CellContext`qubit] -> \
$CellContext`V[$CellContext`qubit], $CellContext`V[$CellContext`qubit] -> \
-$CellContext`H[$CellContext`qubit]}}}; $CellContext`opsList$1744 = 
         Map[Flatten[
            
            ReplaceAll[#, $CellContext`transformations$1744]]& , \
$CellContext`ops$1744]; $CellContext`coding$1744 = Flatten[
           Apply[$CellContext`Kron, 
            Table[{
              $CellContext`H[$CellContext`i], 
              $CellContext`V[$CellContext`i]}, {$CellContext`i, 
              1, $CellContext`dim$1744}]]]; $CellContext`codingState$1744 = 
         Total[$CellContext`state$ $CellContext`coding$1744]; \
$CellContext`allStates$1744 = 
         Map[ReplaceAll[$CellContext`codingState$1744, #]& , \
$CellContext`opsList$1744]; $CellContext`pos$1744 = Flatten[
           Position[
            
            Map[# == $CellContext`codingState$1744& , \
$CellContext`allStates$1744], True]]; $CellContext`out$1744 = 
         Part[$CellContext`ops$1744, $CellContext`pos$1744]; 
        Return[$CellContext`out$1744]; Null)}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "gsl`FindStabilzers"|>, False]]], "Output",
 CellChangeTimes->{3.914492998472911*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"2335bdba-ded5-4034-8576-e8b2353fbc57"]
}, Open  ]],

Cell[TextData[{
 "Akin to the ",
 StyleBox["LCOrbit", "Input"],
 " function, user caution is advised as the function is a brute force search. \
From the a set {I, Z, X, -Z} find all combinations that,when applied to a \
state, leaves the state vector in an eigenstate of itself with eigenvalue +1. \
Once it finds this it will return the makeup of the stabilizer by providing \
the qubit operation and the index of that operation. See example below:"
}], "Text",
 CellChangeTimes->{{3.914491856707301*^9, 3.9144919266001043`*^9}, {
  3.914492016844527*^9, 3.914492058419*^9}, {3.914492111136372*^9, 
  3.914492281942483*^9}, {3.914492840875847*^9, 3.91449290406673*^9}, {
  3.914563188868078*^9, 
  3.914563201993943*^9}},ExpressionUUID->"52b18449-2391-4d2d-8950-\
16aee5d3238e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"state", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Kron", "[", 
      RowBox[{"h", ",", "h", ",", "h", ",", "h"}], "]"}], "+", 
     RowBox[{"Kron", "[", 
      RowBox[{"v", ",", "v", ",", "v", ",", "v"}], "]"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.91131087906958*^9, 3.911310922638664*^9}, {
  3.9113115445261397`*^9, 3.911311554768115*^9}, {3.911311664530707*^9, 
  3.911311671095222*^9}, {3.9113124344824133`*^9, 3.911312435079983*^9}, {
  3.911313383957287*^9, 3.911313387415312*^9}, {3.911317613501886*^9, 
  3.911317615992449*^9}, {3.911318301970901*^9, 3.911318305901822*^9}, {
  3.911537364127112*^9, 3.911537366904615*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"71d908c7-419f-4857-b694-2ba7d27ea367"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.911310894667861*^9, 3.911310929929463*^9}, 
   3.9113113089388857`*^9, 3.911311556107202*^9, 3.9113115966248283`*^9, 
   3.911311671997679*^9, 3.911312436709451*^9, 3.911312467562744*^9, 
   3.911312737338629*^9, 3.911313387949362*^9, {3.911317605275817*^9, 
   3.911317616524475*^9}, 3.911318306292447*^9, 3.911318937716713*^9, 
   3.9113640722263737`*^9, 3.911537368087206*^9, 3.911647535071364*^9, {
   3.914492285825593*^9, 3.914492301693701*^9}, {3.914492434914752*^9, 
   3.914492452463092*^9}, 3.914492498567691*^9, 3.914506876714775*^9, 
   3.914506937935604*^9, 3.914508045602593*^9, 3.9145082371524897`*^9, 
   3.914508415918543*^9, 3.9146032309677763`*^9, 3.914603311650633*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"9de52862-a37b-4ff3-9b0c-a665d96e4a9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stabilizers", "=", 
   RowBox[{"FindStabilzers", "[", "state", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"stabilizers", "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.911313317104151*^9, 3.91131332131459*^9}, {
  3.911647592996817*^9, 3.911647594941708*^9}, {3.914492534677933*^9, 
  3.914492560534887*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b2d7c3aa-df36-4700-8688-03a4c671ffbb"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "2", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "3", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "4", "]"}]},
    {
     RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "2", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]},
    {
     RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "2", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}]},
    {
     RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "3", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]},
    {
     RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "4", "]"}]},
    {
     RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "3", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}]},
    {
     RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "4", "]"}]},
    {
     RowBox[{"\[DoubleStruckCapitalX]", "[", "1", "]"}], 
     RowBox[{"\[DoubleStruckCapitalX]", "[", "2", "]"}], 
     RowBox[{"\[DoubleStruckCapitalX]", "[", "3", "]"}], 
     RowBox[{"\[DoubleStruckCapitalX]", "[", "4", "]"}]},
    {
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "2", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "3", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]},
    {
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "2", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "4", "]"}]},
    {
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "3", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "4", "]"}]},
    {
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]},
    {
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}]},
    {
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}]},
    {
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]},
    {
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "2", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "3", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}]},
    {
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "2", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "4", "]"}]},
    {
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}]},
    {
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]},
    {
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}]}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "3", "]"}], 
     RowBox[{"\[DoubleStruckCapitalI]", "[", "4", "]"}]},
    {
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}]}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}], 
     RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]},
    {
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}]}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]}], 
     RowBox[{"-", 
      RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9144925608630743`*^9, 3.914506876894857*^9, 
  3.914506938081737*^9, 3.914507007295723*^9, 3.914508047493979*^9, 
  3.914508417549061*^9, 3.914603232467113*^9, 3.9146033131063023`*^9},
 CellLabel->
  "Out[19]//TableForm=",ExpressionUUID->"24058711-6988-45b5-a6fe-\
ccaf49cdf442"]
}, Open  ]],

Cell["Lets take a few of the above and confirm", "Text",
 CellChangeTimes->{{3.914492520035986*^9, 
  3.914492530721727*^9}},ExpressionUUID->"94696879-0a0f-448b-b461-\
324cab655f20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sx", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sy", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "I"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sz", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.914492707486615*^9, 3.914492707489521*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6a1a0d4c-4c33-4519-a252-ae1d2f0ddfa9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Kron", "[", 
      RowBox[{"s0", ",", "s0", ",", "s0", ",", "s0"}], "]"}], ".", "state"}], 
    "\[Equal]", "state"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Kron", "[", 
      RowBox[{
       RowBox[{"-", "sz"}], ",", 
       RowBox[{"-", "sz"}], ",", "sz", ",", "sz"}], "]"}], ".", "state"}], 
    "\[Equal]", "state"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Kron", "[", 
      RowBox[{
       RowBox[{"-", "sz"}], ",", 
       RowBox[{"-", "sz"}], ",", 
       RowBox[{"-", "sz"}], ",", 
       RowBox[{"-", "sz"}]}], "]"}], ".", "state"}], "\[Equal]", "state"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.9144927103628674`*^9, 3.9144927676073513`*^9}, {
  3.914504223403511*^9, 3.914504229793886*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"7273cb2e-30cf-4b28-be61-2469d0ec0963"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.914492725693712*^9, 3.914492768134634*^9}, 
   3.914504230622001*^9, 3.914508062677803*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"13b45ac4-ca02-4599-a1ce-7f89fbf2fc25"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindGraph", "Subsection",
 CellChangeTimes->{{3.9134550115539637`*^9, 
  3.913455013161504*^9}},ExpressionUUID->"9362f54e-8635-46b2-87f4-\
cf1f85a077a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FindGraph"}]], "Input",
 CellChangeTimes->{{3.914504186123152*^9, 3.914504189248707*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"04392421-a1eb-4a1e-b086-a5c37e4ce5fe"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FindGraph[stabilizers_] From a list of stabilizers, \
return combinations of stabilizer generators with a specific pattern: only \
those combinations that contain one Pauli X operator per node in the graph \
state.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FindGraph", "[", "gsl`Private`state$_", "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gsl`Private`dim$1724", "=", 
                    FractionBox["1", 
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "gsl`Private`state$", "]"}], ",", 
                    "2"}], "]"}]]}], ";", 
                    RowBox[{"gsl`Private`listStab$1724", "=", 
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{
                    "FindStabilzers", "[", "gsl`Private`state$", "]"}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalZ]", "[", 
                    "gsl`Private`qubit_", "]"}]}], "\[Rule]", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalZ]", "[", 
                    "gsl`Private`qubit", "]"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`comb$1724", "=", 
                    RowBox[{"Tuples", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalH]", "[", 
                    "gsl`Private`i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gsl`Private`i", ",", "gsl`Private`dim$1724"}], 
                    "}"}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalI]", "[", 
                    "gsl`Private`i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gsl`Private`i", ",", "gsl`Private`dim$1724"}], 
                    "}"}]}], "]"}]}], "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`cliffOp$1724", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalH]", "[", 
                    "gsl`Private`qubit_", "]"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalI]", "[", 
                    "gsl`Private`qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalI]", "[", 
                    "gsl`Private`qubit", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalX]", "[", 
                    "gsl`Private`qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalZ]", "[", 
                    "gsl`Private`qubit", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalY]", "[", 
                    "gsl`Private`qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalY]", "[", 
                    "gsl`Private`qubit", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalZ]", "[", 
                    "gsl`Private`qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalX]", "[", 
                    "gsl`Private`qubit", "]"}]}]}], "}"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalI]", "[", 
                    "gsl`Private`qubit_", "]"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalI]", "[", 
                    "gsl`Private`qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalI]", "[", 
                    "gsl`Private`qubit", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalX]", "[", 
                    "gsl`Private`qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalX]", "[", 
                    "gsl`Private`qubit", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalY]", "[", 
                    "gsl`Private`qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalY]", "[", 
                    "gsl`Private`qubit", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalZ]", "[", 
                    "gsl`Private`qubit", "]"}], "\[Rule]", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalZ]", "[", 
                    "gsl`Private`qubit", "]"}]}]}], "}"}]}]}], "}"}]}], ";", 
                    RowBox[{"gsl`Private`combCliff$1724", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flatten", "[", "#1", "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gsl`Private`comb$1724", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    SuperscriptBox["2", 
                    RowBox[{"gsl`Private`dim$1724", "-", "1"}]]}], 
                    "\[RightDoubleBracket]"}], "/.", "\[VeryThinSpace]", 
                    "gsl`Private`cliffOp$1724"}], ")"}]}]}], ";", 
                    RowBox[{"gsl`Private`stabComb$1724", "=", 
                    RowBox[{
                    "gsl`Private`listStab$1724", "/.", "\[VeryThinSpace]", 
                    "gsl`Private`combCliff$1724"}]}], ";", 
                    RowBox[{"gsl`Private`graphGen$1724", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalX]", "[", "_", "]"}]}], 
                    "]"}], "\[Equal]", "1"}], "&"}]}], "]"}], "&"}], ")"}], "/@",
                     "gsl`Private`stabComb$1724"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "#1", "]"}], "\[GreaterEqual]", 
                    "gsl`Private`dim$1724"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`noSameNodeList$1724", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{
                    "gsl`Private`graphGen$1724", "\[LeftDoubleBracket]", 
                    "gsl`Private`el", "\[RightDoubleBracket]"}], ",", "#1"}], 
                    "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"___", ",", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalX]", "[", 
                    "gsl`Private`i", "]"}], ",", "___"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "gsl`Private`i", ",", "1", ",", "gsl`Private`dim$1724"}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gsl`Private`el", ",", 
                    RowBox[{
                    "Length", "[", "gsl`Private`graphGen$1724", "]"}]}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`posStab$1724", "=", 
                    RowBox[{"Position", "[", 
                    RowBox[{"gsl`Private`noSameNodeList$1724", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", "gsl`Private`dim$1724"}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"gsl`Private`graphList$1724", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "gsl`Private`graphGen$1724", "\[LeftDoubleBracket]", "#1",
                     "\[RightDoubleBracket]"}], "&"}], ")"}], "/@", 
                    "gsl`Private`posStab$1724"}]}], ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"gsl`Private`graphList$1724", ",", "1"}], "]"}], 
                    "]"}]}], ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"gsl`FindGraph\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FindGraph[stabilizers_] From a list of stabilizers, \
return combinations of stabilizer generators with a specific pattern: only \
those combinations that contain one Pauli X operator per node in the graph \
state.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {1., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {1., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FindGraph[stabilizers_] From a list of stabilizers, return combinations \
of stabilizer generators with a specific pattern: only those combinations \
that contain one Pauli X operator per node in the graph state.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, gsl`FindGraph, {gsl`FindGraph[
         Pattern[gsl`Private`state$, 
          Blank[]]] :> (gsl`Private`dim$1724 = 1/Log[
           Length[gsl`Private`state$], 2]; gsl`Private`listStab$1724 = Union[
           ReplaceAll[
            gsl`FindStabilzers[
            gsl`Private`state$], {-gsl`Private`\[DoubleStruckCapitalZ][
                Pattern[gsl`Private`qubit, 
                 Blank[]]] -> 
             gsl`Private`\[DoubleStruckCapitalZ][gsl`Private`qubit]}]]; 
        gsl`Private`comb$1724 = Tuples[
           Transpose[{
             Table[
              gsl`Private`\[DoubleStruckCapitalH][gsl`Private`i], {
              gsl`Private`i, gsl`Private`dim$1724}], 
             Table[
              gsl`Private`\[DoubleStruckCapitalI][gsl`Private`i], {
              gsl`Private`i, gsl`Private`dim$1724}]}]]; 
        gsl`Private`cliffOp$1724 = {gsl`Private`\[DoubleStruckCapitalH][
             Pattern[gsl`Private`qubit, 
              Blank[]]] -> {
            gsl`Private`\[DoubleStruckCapitalI][gsl`Private`qubit] -> 
             gsl`Private`\[DoubleStruckCapitalI][gsl`Private`qubit], 
             gsl`Private`\[DoubleStruckCapitalX][gsl`Private`qubit] -> 
             gsl`Private`\[DoubleStruckCapitalZ][gsl`Private`qubit], 
             gsl`Private`\[DoubleStruckCapitalY][gsl`Private`qubit] -> 
             gsl`Private`\[DoubleStruckCapitalY][gsl`Private`qubit], 
             gsl`Private`\[DoubleStruckCapitalZ][gsl`Private`qubit] -> 
             gsl`Private`\[DoubleStruckCapitalX][gsl`Private`qubit]}, 
           gsl`Private`\[DoubleStruckCapitalI][
             Pattern[gsl`Private`qubit, 
              Blank[]]] -> {
            gsl`Private`\[DoubleStruckCapitalI][gsl`Private`qubit] -> 
             gsl`Private`\[DoubleStruckCapitalI][gsl`Private`qubit], 
             gsl`Private`\[DoubleStruckCapitalX][gsl`Private`qubit] -> 
             gsl`Private`\[DoubleStruckCapitalX][gsl`Private`qubit], 
             gsl`Private`\[DoubleStruckCapitalY][gsl`Private`qubit] -> 
             gsl`Private`\[DoubleStruckCapitalY][gsl`Private`qubit], 
             gsl`Private`\[DoubleStruckCapitalZ][gsl`Private`qubit] -> 
             gsl`Private`\[DoubleStruckCapitalZ][gsl`Private`qubit]}}; 
        gsl`Private`combCliff$1724 = Map[Flatten[#]& , 
           ReplaceAll[
            Part[gsl`Private`comb$1724, 
             Span[1, 2^(gsl`Private`dim$1724 - 1)]], 
            gsl`Private`cliffOp$1724]]; 
        gsl`Private`stabComb$1724 = 
         ReplaceAll[gsl`Private`listStab$1724, gsl`Private`combCliff$1724]; 
        gsl`Private`graphGen$1724 = Select[
           Map[Select[#, Count[#, 
               gsl`Private`\[DoubleStruckCapitalX][
                Blank[]]] == 1& ]& , gsl`Private`stabComb$1724], Length[#] >= 
           gsl`Private`dim$1724& ]; gsl`Private`noSameNodeList$1724 = Table[
           Map[Count[
             Part[gsl`Private`graphGen$1724, gsl`Private`el], #]& , 
            Table[{
              BlankNullSequence[], 
              gsl`Private`\[DoubleStruckCapitalX][gsl`Private`i], 
              BlankNullSequence[]}, {
             gsl`Private`i, 1, gsl`Private`dim$1724}]], {gsl`Private`el, 
            Length[gsl`Private`graphGen$1724]}]; 
        gsl`Private`posStab$1724 = Position[gsl`Private`noSameNodeList$1724, 
           Table[1, gsl`Private`dim$1724]]; 
        gsl`Private`graphList$1724 = 
         Map[Part[gsl`Private`graphGen$1724, #]& , gsl`Private`posStab$1724]; 
        Return[
          Flatten[gsl`Private`graphList$1724, 1]])}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "gsl`FindGraph"|>, 
   False]]], "Output",
 CellChangeTimes->{3.914504189742074*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"d3e813a8-23da-4299-bb18-6ec9b6c1bc32"]
}, Open  ]],

Cell["\<\
This function will return a list of stabilizers which will define the graph a \
state generates. \
\>", "Text",
 CellChangeTimes->{{3.914493319841721*^9, 3.914493320559357*^9}, {
  3.914493366681697*^9, 3.91449340345362*^9}, {3.914493452322151*^9, 
  3.914493479158628*^9}},ExpressionUUID->"3e4d6f27-9556-451e-bd7b-\
c5a4faf8e826"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindGraph", "[", "state", "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.911363972714086*^9, 3.911363979411787*^9}, {
  3.911647599546104*^9, 3.911647601334045*^9}, {3.914504244933559*^9, 
  3.91450425559261*^9}},
 CellLabel->"",ExpressionUUID->"47130ab0-3633-49eb-b058-5afd00b6b96f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column], 
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column], 
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column], 
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column], 
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column], 
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column], 
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column], 
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column], 
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column], 
     TagBox[GridBox[{
        {
         RowBox[{"\[DoubleStruckCapitalX]", "[", "1", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalZ]", "[", "2", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "3", "]"}]},
        {
         RowBox[{"\[DoubleStruckCapitalI]", "[", "4", "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {{
            Offset[0.2]}}}],
      Column]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.911363980032827*^9, 3.911364087343495*^9, 
  3.911537371623269*^9, 3.911647538519454*^9, 3.911647601929093*^9},
 CellLabel->
  "Out[211]//TableForm=",ExpressionUUID->"2b5c8102-05be-421b-9c34-\
d3539130a4c0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DrawGraph", "Subsection",
 CellChangeTimes->{{3.91345501740892*^9, 
  3.913455019289602*^9}},ExpressionUUID->"8580b5e2-9450-4cc8-a071-\
f5a78066d559"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DrawGraph"}]], "Input",
 CellChangeTimes->{{3.914504191707693*^9, 3.9145041952451363`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"0d1d6f1e-8b83-4187-823a-7d2fc1a618d6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FindGraph[stabilizers_] From the results of \
FindGraph[] (a list of stabilizers), construct a graph based on the \
relationships between qubits specified by the input stabilizers\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DrawGraph", "[", "gsl`Private`stabList$_", "]"}],
                     ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gsl`Private`linkList$1725", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flatten", "[", "#1", "]"}], "&"}], ")"}], "/@", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalZ]", "[", "_", "]"}]}], 
                    "]"}], "&"}], ")"}], "/@", "gsl`Private`stabList$"}]}]}], 
                    ";", 
                    RowBox[{"gsl`Private`nodeList$1725", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    "gsl`Private`\[DoubleStruckCapitalX]", "[", "_", "]"}]}], 
                    "]"}], "&"}], ")"}], "/@", "gsl`Private`stabList$"}], 
                    "]"}]}], ";", 
                    RowBox[{"gsl`Private`toGraph$1725", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "gsl`Private`nodeList$1725", "\[LeftDoubleBracket]", 
                    "gsl`Private`i", "\[RightDoubleBracket]"}], 
                    "\[UndirectedEdge]", "#1"}], "&"}], ")"}], "/@", 
                    RowBox[{
                    "gsl`Private`linkList$1725", "\[LeftDoubleBracket]", 
                    "gsl`Private`i", "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gsl`Private`i", ",", 
                    RowBox[{
                    "Length", "[", "gsl`Private`nodeList$1725", "]"}]}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"gsl`Private`noDoubleLinks$1725", "=", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", "gsl`Private`toGraph$1725", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", 
                    RowBox[{"Reverse", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"gsl`Private`out$1725", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    "gsl`Private`noDoubleLinks$1725", ",", 
                    "gsl`Private`graphstyle"}], "]"}]}], ";", 
                    RowBox[{"Return", "[", "gsl`Private`out$1725", "]"}]}], 
                    ")"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"gsl`DrawGraph\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FindGraph[stabilizers_] From the results of \
FindGraph[] (a list of stabilizers), construct a graph based on the \
relationships between qubits specified by the input stabilizers\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {1., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {1., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FindGraph[stabilizers_] From the results of FindGraph[] (a list of \
stabilizers), construct a graph based on the relationships between qubits \
specified by the input stabilizers", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, gsl`DrawGraph, {gsl`DrawGraph[
         Pattern[gsl`Private`stabList$, 
          Blank[]]] :> (gsl`Private`linkList$1725 = Map[Flatten[#]& , 
           Map[Position[#, 
             gsl`Private`\[DoubleStruckCapitalZ][
              Blank[]]]& , gsl`Private`stabList$]]; 
        gsl`Private`nodeList$1725 = Flatten[
           Map[Position[#, 
             gsl`Private`\[DoubleStruckCapitalX][
              Blank[]]]& , gsl`Private`stabList$]]; 
        gsl`Private`toGraph$1725 = Table[
           Map[UndirectedEdge[
             Part[gsl`Private`nodeList$1725, gsl`Private`i], #]& , 
            Part[gsl`Private`linkList$1725, gsl`Private`i]], {gsl`Private`i, 
            Length[gsl`Private`nodeList$1725]}]; 
        gsl`Private`noDoubleLinks$1725 = DeleteDuplicates[
           Flatten[gsl`Private`toGraph$1725], # == Reverse[#2]& ]; 
        gsl`Private`out$1725 = 
         Graph[gsl`Private`noDoubleLinks$1725, gsl`Private`graphstyle]; 
        Return[gsl`Private`out$1725])}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "gsl`DrawGraph"|>, False]]], "Output",
 CellChangeTimes->{3.914504195802576*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"89ca2c3f-38cc-4219-9638-f01a4fd3ae1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DrawGraph", "/@", 
  RowBox[{"FindGraph", "[", "state", "]"}]}]], "Input",
 CellChangeTimes->{{3.911318273963656*^9, 3.911318289722158*^9}, {
  3.9113641146085377`*^9, 3.911364120411613*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ba878ce9-b7bc-4dcb-a3e8-d05fd7f1e85d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{3, 4, 2, 1}, {Null, {{1, 2}, {3, 2}, {2, 4}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
         ImageSize -> {146.99479166666538`, Automatic}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{1., -1.133107779529596*^-15}, {
           6.049014748177263*^-16, -1.}}, {{
           6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16, 1.}}, {{
           6.049014748177263*^-16, -1.}, {-1., 
           1.0106430996148606`*^-15}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{4, 3, 2, 1}, {Null, {{1, 2}, {3, 2}, {2, 4}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
         ImageSize -> {146.99479166666538`, Automatic}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{1., -1.133107779529596*^-15}, {
           6.049014748177263*^-16, -1.}}, {{
           6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16, 1.}}, {{
           6.049014748177263*^-16, -1.}, {-1., 
           1.0106430996148606`*^-15}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{4, 2, 3, 1}, {Null, {{1, 2}, {3, 2}, {2, 4}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
         ImageSize -> {146.99479166666538`, Automatic}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], 
          LineBox[{{{1., -1.133107779529596*^-15}, {
           6.049014748177263*^-16, -1.}}, {{
           6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16, 1.}}, {{
           6.049014748177263*^-16, -1.}, {-1., 
           1.0106430996148606`*^-15}}}]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{146.99479166666538`, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.911318290289116*^9, 3.91131830919264*^9}, {
   3.911318922117222*^9, 3.911318934584969*^9}, 3.911364121137051*^9, {
   3.911364164234445*^9, 3.911364169863168*^9}, 3.911537375231473*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"cbbb20f2-5728-4afe-b208-76f6d52a3179"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use case - linear cluster to 4 qubit ring", "Chapter",
 CellChangeTimes->{{3.917955278597477*^9, 
  3.9179552930580473`*^9}},ExpressionUUID->"cc83bf52-2906-4641-8aa5-\
429a9fb21bd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourqubitLC", "=", 
  RowBox[{"CustomGraph", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.91795529987691*^9, 3.917955358374605*^9}},
 CellLabel->
  "In[1490]:=",ExpressionUUID->"9a3e9118-0591-4ca5-ab8a-af5334e9d3c4"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}}}, {EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
       ImageSize -> {147, Automatic}, VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], Arrowheads[0.], 
        ArrowBox[{{{-1., 1.0106430996148606`*^-15}, {
         6.049014748177263*^-16, -1.}}, {{6.049014748177263*^-16, -1.}, {
         1., -1.133107779529596*^-15}}, {{
         1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}}, 
         0.2828427124746188]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{147, Automatic}]], "Output",
 CellChangeTimes->{3.9179553266455097`*^9, 3.91795535886954*^9},
 CellLabel->
  "Out[1490]=",ExpressionUUID->"6ff84dc9-e4c2-4ef7-a7fb-09a38ebcd2e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LCOrbit", "[", "fourqubitLC", "]"}]], "Input",
 CellChangeTimes->{{3.91795534164028*^9, 3.9179553624931393`*^9}},
 CellLabel->
  "In[1491]:=",ExpressionUUID->"ebfd1dc6-a6ad-4768-9f71-038fdce20176"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}}}, {EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, GraphLayout -> "CircularEmbedding", 
         ImageSize -> {147, Automatic}, VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], Arrowheads[0.], 
          ArrowBox[{{{-1., 1.0106430996148606`*^-15}, {
           6.049014748177263*^-16, -1.}}, {{6.049014748177263*^-16, -1.}, {
           1., -1.133107779529596*^-15}}, {{
           1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}}, 
           0.2828427124746188]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{147, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}, {1, 3}}}, {
        EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {147, Automatic}, 
         VertexCoordinates -> {{-1., 1.0106430996148606`*^-15}, {
          6.049014748177263*^-16, -1.}, {
          1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}, 
         VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], Arrowheads[0.], 
          ArrowBox[{{{-1., 1.0106430996148606`*^-15}, {
           6.049014748177263*^-16, -1.}}, {{-1., 1.0106430996148606`*^-15}, {
           1., -1.133107779529596*^-15}}, {{6.049014748177263*^-16, -1.}, {
           1., -1.133107779529596*^-15}}, {{
           1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}}, 
           0.2828427124746188]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{147, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {2, 3}, {3, 4}, {1, 4}, {2, 4}}}, {
        EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {147, Automatic}, 
         VertexCoordinates -> {{-1., 1.0106430996148606`*^-15}, {
          6.049014748177263*^-16, -1.}, {
          1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}, 
         VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], Arrowheads[0.], 
          ArrowBox[{{{-1., 1.0106430996148606`*^-15}, {
           1., -1.133107779529596*^-15}}, {{-1., 
           1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 1.}}, {{
           6.049014748177263*^-16, -1.}, {1., -1.133107779529596*^-15}}, {{
           6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16, 1.}}, {{
           1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}}, 
           0.2828427124746188]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{147, Automatic}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {1, 4}, {2, 3}, {2, 4}}}, {
        EdgeStyle -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Opacity[1]]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
         ImageSize -> {147, Automatic}, 
         VertexCoordinates -> {{-1., 1.0106430996148606`*^-15}, {
          6.049014748177263*^-16, -1.}, {
          1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}, 
         VertexLabels -> {
           Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
           Directive[
            GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
         VertexSize -> {0.4}, VertexStyle -> {
           Directive[
            EdgeForm[{
              Thickness[Large], 
              Opacity[1], 
              RGBColor[0, 0, 1]}], 
            RGBColor[0, 0, 1]]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {GrayLevel[0], Thickness[Large], Opacity[1], Arrowheads[0.], 
          ArrowBox[{{{-1., 1.0106430996148606`*^-15}, {
           1., -1.133107779529596*^-15}}, {{-1., 
           1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 1.}}, {{
           6.049014748177263*^-16, -1.}, {1., -1.133107779529596*^-15}}, {{
           6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16, 1.}}}, 
           0.2828427124746188]}, 
         {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], 
          Thickness[
          Large]}], {
           DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["1",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["2",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
           InsetBox[
            StyleBox["3",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
            
            BaseStyle->"Graphics"]}, {
           DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
           InsetBox[
            StyleBox["4",
             StripOnInput->False,
             LineColor->GrayLevel[1],
             FrontFaceColor->GrayLevel[1],
             BackFaceColor->GrayLevel[1],
             GraphicsColor->GrayLevel[1],
             FontFamily->"IBM Plex Mono",
             FontSize->20,
             FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
            
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{147, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.917955369002306*^9},
 CellLabel->
  "Out[1491]=",ExpressionUUID->"ac242562-bc23-4c1d-9c94-57e4669e016b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"op1", "=", 
  RowBox[{"LCQubit", "[", 
   RowBox[{"fourqubitLC", ",", "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"op2", "=", 
  RowBox[{"LCQubit", "[", 
   RowBox[{"op1", ",", "3"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"op3", "=", 
  RowBox[{"LCQubit", "[", 
   RowBox[{"op2", ",", "1"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.917955382843988*^9, 3.9179554581003103`*^9}},
 CellLabel->
  "In[1492]:=",ExpressionUUID->"3f70b194-a3de-4807-b081-da15fca22359"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}, {1, 3}}}, {EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
       ImageSize -> {147, Automatic}, 
       VertexCoordinates -> {{-1., 1.0106430996148606`*^-15}, {
        6.049014748177263*^-16, -1.}, {
        1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}, 
       VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], Arrowheads[0.], 
        ArrowBox[{{{-1., 1.0106430996148606`*^-15}, {
         6.049014748177263*^-16, -1.}}, {{-1., 1.0106430996148606`*^-15}, {
         1., -1.133107779529596*^-15}}, {{6.049014748177263*^-16, -1.}, {
         1., -1.133107779529596*^-15}}, {{
         1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}}, 
         0.2828427124746188]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{147, Automatic}]], "Output",
 CellChangeTimes->{3.9179554966136827`*^9},
 CellLabel->
  "Out[1492]=",ExpressionUUID->"c750ccd0-fffc-4ba2-b620-e316cd696169"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {2, 3}, {3, 4}, {1, 4}, {2, 4}}}, {
      EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
       ImageSize -> {147, Automatic}, 
       VertexCoordinates -> {{-1., 1.0106430996148606`*^-15}, {
        6.049014748177263*^-16, -1.}, {
        1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}, 
       VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], Arrowheads[0.], 
        ArrowBox[{{{-1., 1.0106430996148606`*^-15}, {
         1., -1.133107779529596*^-15}}, {{-1., 
         1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 1.}}, {{
         6.049014748177263*^-16, -1.}, {1., -1.133107779529596*^-15}}, {{
         6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16, 1.}}, {{
         1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}}, 
         0.2828427124746188]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{147, Automatic}]], "Output",
 CellChangeTimes->{3.917955496641053*^9},
 CellLabel->
  "Out[1493]=",ExpressionUUID->"4dfd87ae-0168-4aff-b81f-8a6741f0b803"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {1, 4}, {2, 3}, {2, 4}}}, {EdgeStyle -> {
         Directive[
          GrayLevel[0], 
          Thickness[Large], 
          Opacity[1]]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
       ImageSize -> {147, Automatic}, 
       VertexCoordinates -> {{-1., 1.0106430996148606`*^-15}, {
        6.049014748177263*^-16, -1.}, {
        1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}, 
       VertexLabels -> {
         Placed["Name", {0.525, 0.525}]}, VertexLabelStyle -> {
         Directive[
          GrayLevel[1], FontFamily -> "IBM Plex Mono", 20]}, 
       VertexSize -> {0.4}, VertexStyle -> {
         Directive[
          EdgeForm[{
            Thickness[Large], 
            Opacity[1], 
            RGBColor[0, 0, 1]}], 
          RGBColor[0, 0, 1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Thickness[Large], Opacity[1], Arrowheads[0.], 
        ArrowBox[{{{-1., 1.0106430996148606`*^-15}, {
         1., -1.133107779529596*^-15}}, {{-1., 
         1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 1.}}, {{
         6.049014748177263*^-16, -1.}, {1., -1.133107779529596*^-15}}, {{
         6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16, 1.}}}, 
         0.2828427124746188]}, 
       {RGBColor[0, 0, 1], EdgeForm[{RGBColor[0, 0, 1], Opacity[1], Thickness[
        Large]}], {
         DiskBox[{-1., 1.0106430996148606`*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {-0.9858578643762691, 0.014142135623731955},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.049014748177263*^-16, -1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623731567, -0.9858578643762691},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., -1.133107779529596*^-15}, 0.2828427124746188], 
         InsetBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {1.014142135623731, 0.014142135623729846},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.2828427124746188], 
         InsetBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"IBM Plex Mono",
           FontSize->20,
           FontColor->GrayLevel[1]], {0.014142135623730234, 1.014142135623731},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{147, Automatic}]], "Output",
 CellChangeTimes->{3.917955496691379*^9},
 CellLabel->
  "Out[1494]=",ExpressionUUID->"2e71373e-b515-4657-bb10-60224acd9421"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{953, 1137},
WindowMargins->{{Automatic, 5}, {-235, Automatic}},
SpellingDictionaries->{"CorrectWords"->{
 "Zmeasurement", "Ymeasurement", "Xmeasurement"}},
FrontEndVersion->"14.0 for Mac OS X x86 (64-bit) (December 12, 2023)",
StyleDefinitions->FrontEnd`FileName[{
   ParentDirectory[], "mathematica-stylesheets"}, "Mono.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"49ddb6c2-2820-4363-a8b1-53e4ffd5cf4b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-f2b74c80-c8e2-434c-8318-bda691d05a73"->{
  Cell[45994, 1544, 12140, 297, 68, "Print",ExpressionUUID->"1b37d462-9df8-423b-8233-eb66493844f7",
   CellTags->"Info-f2b74c80-c8e2-434c-8318-bda691d05a73"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-f2b74c80-c8e2-434c-8318-bda691d05a73", 509536, 11730}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 221, 3, 24, "Input",ExpressionUUID->"e56e35e2-8e61-4551-913a-365a39581456"],
Cell[CellGroupData[{
Cell[804, 27, 145, 3, 67, "Title",ExpressionUUID->"17bdfc6b-9798-4f6e-9815-edd6e804ad01"],
Cell[CellGroupData[{
Cell[974, 34, 165, 3, 42, "Subsection",ExpressionUUID->"51141d46-1687-410a-a1fd-244eebacffde"],
Cell[CellGroupData[{
Cell[1164, 41, 400, 7, 35, "Input",ExpressionUUID->"9580a276-0d74-4b11-b9a9-a580e3304a0a"],
Cell[1567, 50, 578, 9, 38, "Output",ExpressionUUID->"0aa3569e-082b-40d2-9705-c892daacc68c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2194, 65, 168, 3, 31, "Subsection",ExpressionUUID->"64ce2279-7d83-4bd6-88f6-051535edd133"],
Cell[2365, 70, 237, 6, 27, "Text",ExpressionUUID->"135ef40f-47ca-4d65-8d4d-699aaa7c2079"],
Cell[2605, 78, 200, 4, 27, "Text",ExpressionUUID->"46393bd1-aac7-4821-bb17-9e0e056b3247"],
Cell[2808, 84, 397, 7, 24, "Input",ExpressionUUID->"11340444-e82c-453b-838c-4859ca256957"],
Cell[3208, 93, 288, 8, 27, "Text",ExpressionUUID->"8b72af87-177a-44b9-b0df-cbf9f6643cc0"],
Cell[3499, 103, 385, 8, 27, "Text",ExpressionUUID->"9ecabb2c-46bb-4827-8a62-7d57cb6e5aeb"],
Cell[CellGroupData[{
Cell[3909, 115, 177, 3, 34, "Subsubsection",ExpressionUUID->"ebe7c61e-cfda-49d0-9a1b-da4f9e42ebbf"],
Cell[4089, 120, 516, 10, 46, "Text",ExpressionUUID->"b82f3e40-2fb1-40d0-bf8c-51d3d1e9ea09"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[4654, 136, 161, 3, 31, "Subsection",ExpressionUUID->"f01b7a7e-170e-4c17-88aa-61bccae631bb"],
Cell[4818, 141, 211, 5, 27, "Text",ExpressionUUID->"ad923e32-0e34-42e4-8006-6e6e2cc446b9"],
Cell[CellGroupData[{
Cell[5054, 150, 132, 3, 35, "Input",ExpressionUUID->"5070ef1a-88fa-413a-a774-dff019a55d8a"],
Cell[5189, 155, 735, 14, 22, "Message",ExpressionUUID->"d77dd9d5-acdd-4823-a941-87cb445aa3ff"],
Cell[5927, 171, 737, 14, 22, "Message",ExpressionUUID->"382d5092-3c99-4a20-a91d-6e6e4d86dfff"],
Cell[CellGroupData[{
Cell[6689, 189, 441, 7, 49, "Print",ExpressionUUID->"de767feb-d194-4186-92ad-e2df5771fb54"],
Cell[7133, 198, 276, 5, 18, "Print",ExpressionUUID->"94d192cd-6a35-498a-9d3c-f147301618ea"],
Cell[7412, 205, 29271, 1106, 18, "Print",ExpressionUUID->"8b7d6faa-50ca-4416-9e1e-db67a7adaf9e"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[36744, 1318, 172, 3, 31, "Subsection",ExpressionUUID->"6a6eddb8-9c99-4554-83d7-fabb795b96f1"],
Cell[CellGroupData[{
Cell[36941, 1325, 247, 5, 35, "Input",ExpressionUUID->"7d5ed26f-e129-4c63-bb13-770650416fba"],
Cell[37191, 1332, 8800, 210, 103, "Output",ExpressionUUID->"0a1453f0-3d8f-4a13-ab77-3a38503b9bf4"],
Cell[45994, 1544, 12140, 297, 68, "Print",ExpressionUUID->"1b37d462-9df8-423b-8233-eb66493844f7",
 CellTags->"Info-f2b74c80-c8e2-434c-8318-bda691d05a73"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58183, 1847, 262, 4, 48, "Section",ExpressionUUID->"db0435d5-d983-4ee3-988e-92a70827f86c"],
Cell[CellGroupData[{
Cell[58470, 1855, 170, 3, 42, "Subsection",ExpressionUUID->"af2127e0-0663-49ae-a508-f2d8c72da3b3"],
Cell[58643, 1860, 600, 10, 27, "Text",ExpressionUUID->"27ee2d11-83f7-474b-9c52-33ebee32384d"]
}, Closed]],
Cell[CellGroupData[{
Cell[59280, 1875, 206, 4, 31, "Subsection",ExpressionUUID->"94e88d2b-7bb2-4f26-bcd8-dc321e3bf848"],
Cell[59489, 1881, 250, 6, 18, "Text",ExpressionUUID->"fdcf2295-114d-49c3-a7e5-197ba53e65f5"],
Cell[59742, 1889, 350, 7, 18, "Text",ExpressionUUID->"38101987-1095-40d7-b7b9-df560caefd8f"],
Cell[60095, 1898, 132328, 2174, 290, "Input",ExpressionUUID->"fdd0b1f6-41a6-479a-bf81-a6a764901414"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192472, 4078, 154, 3, 48, "Section",ExpressionUUID->"48e2fa51-b439-4351-8669-d3bc8c5167af"],
Cell[CellGroupData[{
Cell[192651, 4085, 159, 3, 42, "Subsection",ExpressionUUID->"4c0da1c7-1969-4d83-892b-ca07afc01d02"],
Cell[CellGroupData[{
Cell[192835, 4092, 199, 3, 24, "Input",ExpressionUUID->"68674229-28de-4bff-abe1-e3f3e4fcdd3b"],
Cell[193037, 4097, 12084, 294, 79, "Output",ExpressionUUID->"0f23cfba-ff14-4c85-b127-1beca44f6814"]
}, Open  ]],
Cell[205136, 4394, 667, 13, 46, "Text",ExpressionUUID->"1ec9f73d-9b6d-4a0c-9098-795fcb9585d3"],
Cell[CellGroupData[{
Cell[205828, 4411, 798, 19, 24, "Input",ExpressionUUID->"cee9de4d-0ec6-4e7a-97e7-212e15f6a647"],
Cell[206629, 4432, 5429, 126, 136, "Output",ExpressionUUID->"f535a148-1cb5-4b69-8e75-bff11035dbfd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[212107, 4564, 154, 3, 31, "Subsection",ExpressionUUID->"6b401e88-0549-4ccd-9628-7dea6359e2fb"],
Cell[CellGroupData[{
Cell[212286, 4571, 195, 3, 24, "Input",ExpressionUUID->"b438da21-30cb-4d94-8817-953b45b06c26"],
Cell[212484, 4576, 12813, 301, 79, "Output",ExpressionUUID->"04f9a18b-8a65-4237-beaa-cc9d9e7cbcd3"]
}, Open  ]],
Cell[225312, 4880, 651, 12, 46, "Text",ExpressionUUID->"8bf889f1-9c0d-4067-bb3b-816abd8692fc"],
Cell[CellGroupData[{
Cell[225988, 4896, 767, 12, 24, "Input",ExpressionUUID->"d7321482-77c8-48cd-a15a-a18f5e15351a"],
Cell[226758, 4910, 5804, 133, 136, "Output",ExpressionUUID->"e7dce9c7-5465-4abe-b77f-a994547ae34c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[232611, 5049, 157, 3, 31, "Subsection",ExpressionUUID->"3a61df47-cb78-4266-bf7c-3bb5d512549e"],
Cell[CellGroupData[{
Cell[232793, 5056, 194, 3, 24, "Input",ExpressionUUID->"ae1363d8-d4c8-40b9-960d-179461bc64e3"],
Cell[232990, 5061, 12602, 297, 79, "Output",ExpressionUUID->"ab6fc030-da55-465d-8707-a7c8a2be699b"]
}, Open  ]],
Cell[245607, 5361, 481, 10, 46, "Text",ExpressionUUID->"600f0f75-3df4-4bdf-8f1b-55e231b77f69"],
Cell[CellGroupData[{
Cell[246113, 5375, 279, 4, 24, "Input",ExpressionUUID->"09e6c204-a09d-4f5e-bc7c-f3d75cf0110f"],
Cell[246395, 5381, 54195, 1265, 286, "Output",ExpressionUUID->"8d385523-d387-4216-9e56-b1e86723a3ea"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[300639, 6652, 160, 3, 31, "Subsection",ExpressionUUID->"00160620-c1ec-4e25-a44f-8172f9992a14"],
Cell[CellGroupData[{
Cell[300824, 6659, 202, 3, 24, "Input",ExpressionUUID->"e275fba5-2714-4259-813f-88fb4686e8c7"],
Cell[301029, 6664, 13606, 318, 75, "Output",ExpressionUUID->"4cc71e0c-436b-4865-83b8-45dc3331ddc7"]
}, Open  ]],
Cell[314650, 6985, 554, 12, 46, "Text",ExpressionUUID->"3396fd39-066a-462a-86b2-89f7a9a8e204"],
Cell[CellGroupData[{
Cell[315229, 7001, 5937, 137, 135, "Input",ExpressionUUID->"94c23e4b-d7ec-4f6e-bc9f-0dc444e20eb0"],
Cell[321169, 7140, 4721, 111, 119, "Output",ExpressionUUID->"21deed3c-e7ff-429b-936b-353fff5c91cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325927, 7256, 4989, 117, 111, "Input",ExpressionUUID->"66e9eb03-7568-4127-87d1-f69e25d75ac6"],
Cell[330919, 7375, 3810, 91, 123, "Output",ExpressionUUID->"5773d9bd-a440-42f3-8168-6d411c76ba8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334766, 7471, 166, 3, 34, "Subsubsection",ExpressionUUID->"e6bf5264-ec62-42fa-8a9a-3194de72b1ad"],
Cell[334935, 7476, 167, 3, 27, "Text",ExpressionUUID->"441cc745-72bc-45f9-953f-8caef6f9f174"],
Cell[CellGroupData[{
Cell[335127, 7483, 148, 2, 24, "Input",ExpressionUUID->"f0e95216-10eb-4f54-bea9-5932a0368e82"],
Cell[335278, 7487, 4884, 118, 136, "Output",ExpressionUUID->"1f84d7ca-00da-4ede-a42b-12e48ad9b204"]
}, Open  ]],
Cell[340177, 7608, 257, 6, 27, "Text",ExpressionUUID->"5343581e-7439-438c-9b63-bcaa1710142b"],
Cell[CellGroupData[{
Cell[340459, 7618, 456, 7, 24, "Input",ExpressionUUID->"aa425700-161c-4be3-830f-04999f8cd56d"],
Cell[340918, 7627, 3854, 92, 123, "Output",ExpressionUUID->"8bd93536-f06e-471e-8ee8-c359971d8b5f"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[344833, 7726, 159, 3, 31, "Subsection",ExpressionUUID->"4fd5d268-6e45-414b-8fc1-947b7bb1b1ba"],
Cell[CellGroupData[{
Cell[345017, 7733, 200, 3, 24, "Input",ExpressionUUID->"c2a77488-9da5-4717-aa8a-a65d15593f95"],
Cell[345220, 7738, 9889, 246, 75, "Output",ExpressionUUID->"4d4a5cf7-26bb-4ade-8426-0101a488221c"]
}, Open  ]],
Cell[355124, 7987, 434, 11, 46, "Text",ExpressionUUID->"a293e432-cb58-43dd-82dc-041112fc13fe"],
Cell[CellGroupData[{
Cell[355583, 8002, 354, 6, 24, "Input",ExpressionUUID->"2a361230-19ed-4ded-bc81-2bfdc87922fa"],
Cell[355940, 8010, 4495, 108, 119, "Output",ExpressionUUID->"276cf2dc-55a5-4663-a5ec-e87262e22c3b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[360484, 8124, 162, 3, 31, "Subsection",ExpressionUUID->"2c52ad6b-ccdd-48f9-beb6-2ef2a9d511d7"],
Cell[CellGroupData[{
Cell[360671, 8131, 202, 3, 24, "Input",ExpressionUUID->"f38b42ee-1669-48da-bed9-61caa6847bfa"],
Cell[360876, 8136, 11405, 273, 93, "Output",ExpressionUUID->"0b9e8ff1-9118-45ab-975f-9e242d453c2d"]
}, Open  ]],
Cell[372296, 8412, 573, 11, 64, "Text",ExpressionUUID->"328a771e-b7de-4709-92ae-d17c61c8cfcc"],
Cell[CellGroupData[{
Cell[372894, 8427, 306, 5, 24, "Input",ExpressionUUID->"e5ea3cb6-d3af-47c2-b176-8969d6b50b5f"],
Cell[373203, 8434, 4727, 112, 119, "Output",ExpressionUUID->"053518ad-7194-4c35-a6fd-ac272b97ed4a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[377979, 8552, 211, 4, 31, "Subsection",ExpressionUUID->"23244494-9d5c-40be-857d-adec0817e098"],
Cell[CellGroupData[{
Cell[378215, 8560, 202, 3, 24, "Input",ExpressionUUID->"c565128f-5798-40cd-9d07-567740ac0c88"],
Cell[378420, 8565, 28380, 617, 93, "Output",ExpressionUUID->"2335bdba-ded5-4034-8576-e8b2353fbc57"]
}, Open  ]],
Cell[406815, 9185, 779, 14, 64, "Text",ExpressionUUID->"52b18449-2391-4d2d-8950-16aee5d3238e"],
Cell[CellGroupData[{
Cell[407619, 9203, 860, 19, 24, "Input",ExpressionUUID->"71d908c7-419f-4857-b694-2ba7d27ea367"],
Cell[408482, 9224, 1464, 33, 44, "Output",ExpressionUUID->"9de52862-a37b-4ff3-9b0c-a665d96e4a9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409983, 9262, 439, 9, 41, "Input",ExpressionUUID->"b2d7c3aa-df36-4700-8688-03a4c671ffbb"],
Cell[410425, 9273, 6554, 156, 331, "Output",ExpressionUUID->"24058711-6988-45b5-a6fe-ccaf49cdf442"]
}, Open  ]],
Cell[416994, 9432, 182, 3, 27, "Text",ExpressionUUID->"94696879-0a0f-448b-b461-324cab655f20"],
Cell[417179, 9437, 1036, 36, 73, "Input",ExpressionUUID->"6a1a0d4c-4c33-4519-a252-ae1d2f0ddfa9"],
Cell[CellGroupData[{
Cell[418240, 9477, 924, 26, 57, "Input",ExpressionUUID->"7273cb2e-30cf-4b28-be61-2469d0ec0963"],
Cell[419167, 9505, 285, 5, 27, "Output",ExpressionUUID->"13b45ac4-ca02-4599-a1ce-7f89fbf2fc25"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[419501, 9516, 159, 3, 31, "Subsection",ExpressionUUID->"9362f54e-8635-46b2-87f4-cf1f85a077a9"],
Cell[CellGroupData[{
Cell[419685, 9523, 197, 3, 24, "Input",ExpressionUUID->"04392421-a1eb-4a1e-b086-a5c37e4ce5fe"],
Cell[419885, 9528, 22431, 498, 93, "Output",ExpressionUUID->"d3e813a8-23da-4299-bb18-6ec9b6c1bc32"]
}, Open  ]],
Cell[442331, 10029, 341, 7, 27, "Text",ExpressionUUID->"3e4d6f27-9556-451e-bd7b-c5a4faf8e826"],
Cell[CellGroupData[{
Cell[442697, 10040, 332, 6, 24, "Input",ExpressionUUID->"47130ab0-3633-49eb-b058-5afd00b6b96f"],
Cell[443032, 10048, 8064, 224, 175, "Output",ExpressionUUID->"2b5c8102-05be-421b-9c34-d3539130a4c0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[451145, 10278, 156, 3, 31, "Subsection",ExpressionUUID->"8580b5e2-9450-4cc8-a071-f5a78066d559"],
Cell[CellGroupData[{
Cell[451326, 10285, 199, 3, 24, "Input",ExpressionUUID->"0d1d6f1e-8b83-4187-823a-7d2fc1a618d6"],
Cell[451528, 10290, 13387, 315, 75, "Output",ExpressionUUID->"89ca2c3f-38cc-4219-9638-f01a4fd3ae1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464952, 10610, 293, 5, 24, "Input",ExpressionUUID->"ba878ce9-b7bc-4dcb-a3e8-d05fd7f1e85d"],
Cell[465248, 10617, 11266, 273, 125, "Output",ExpressionUUID->"cbbb20f2-5728-4afe-b208-76f6d52a3179"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[476575, 10897, 188, 3, 50, "Chapter",ExpressionUUID->"cc83bf52-2906-4641-8aa5-429a9fb21bd7"],
Cell[CellGroupData[{
Cell[476788, 10904, 464, 13, 35, "Input",ExpressionUUID->"9a3e9118-0591-4ca5-ab8a-af5334e9d3c4"],
Cell[477255, 10919, 3564, 89, 134, "Output",ExpressionUUID->"6ff84dc9-e4c2-4ef7-a7fb-09a38ebcd2e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480856, 11013, 221, 4, 35, "Input",ExpressionUUID->"ebfd1dc6-a6ad-4768-9f71-038fdce20176"],
Cell[481080, 11019, 15618, 378, 136, "Output",ExpressionUUID->"ac242562-bc23-4c1d-9c94-57e4669e016b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496735, 11402, 497, 12, 68, "Input",ExpressionUUID->"3f70b194-a3de-4807-b081-da15fca22359"],
Cell[497235, 11416, 3865, 96, 134, "Output",ExpressionUUID->"c750ccd0-fffc-4ba2-b620-e316cd696169"],
Cell[501103, 11514, 3952, 98, 134, "Output",ExpressionUUID->"4dfd87ae-0168-4aff-b81f-8a6741f0b803"],
Cell[505058, 11614, 3863, 96, 134, "Output",ExpressionUUID->"2e71373e-b515-4657-bb10-60224acd9421"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

